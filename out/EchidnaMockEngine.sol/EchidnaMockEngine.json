{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_risky",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stable",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_scaleFactorRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scaleFactorStable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_min_liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "CalibrationError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeltaInError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeltaOutError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GammaError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "invariant",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "nextInvariant",
          "type": "int128"
        }
      ],
      "name": "InvariantError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "value",
          "type": "int128"
        }
      ],
      "name": "InverseOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LockedError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinLiquidityError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolDuplicateError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolExpiredError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "RiskyBalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RiskyPerLpError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SigmaError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "StableBalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "StrikeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UninitializedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroDeltasError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroLiquidityError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Allocate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Remove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "riskyForStable",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deltaIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deltaOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "UpdateLastTimestamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BUFFER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_LIQUIDITY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "by",
          "type": "uint256"
        }
      ],
      "name": "advanceTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fromMargin",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "allocate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "calibrations",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "riskyPerLp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "invariantOf",
      "outputs": [
        {
          "internalType": "int128",
          "name": "invariant",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "margins",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "balanceRisky",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "balanceStable",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "reserves",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "reserveRisky",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "reserveStable",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "blockTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeStable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "risky",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaleFactorRisky",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaleFactorStable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "reserveRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveStable",
          "type": "uint256"
        }
      ],
      "name": "setReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stable",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "riskyForStable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deltaIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deltaOut",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fromMargin",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "toMargin",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "updateLastTimestamp",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "reserveRisky",
          "type": "uint256"
        }
      ],
      "name": "updateReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040526001805560016006553480156200001b57600080fd5b50604051620045dc380380620045dc8339810160408190526200003e9162000088565b6001600160601b0319606095861b811660e0529390941b9092166101005260a05260c052608052620000db565b80516001600160a01b03811681146200008357600080fd5b919050565b600080600080600060a08688031215620000a157600080fd5b620000ac866200006b565b9450620000bc602087016200006b565b6040870151606088015160809098015196999198509695945092505050565b60805160a05160c05160e05160601c6101005160601c61442a620001b26000396000818161029f01528181610b6f0152818161151a015281816115c101528181611a3201526122640152600081816104f701528181610b35015281816113d20152818161147901528181611b4701526121510152600081816103c50152818161074801528181610c8d015281816112ba015261192d0152600081816104120152818161072701528181610c6b01528181611299015261190c01526000818161027801528181610d7f0152611029015261442a6000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80636b35bb6b116100c3578063be00763a1161007c578063be00763a146104c4578063c08165d4146104f2578063c0ed31ba14610519578063c45a01551461052c578063ca28fcd61461053f578063d2957b8f1461055257600080fd5b80636b35bb6b146104345780638fbc3ecd1461045f5780639e48ff5a146104675780639f8cfade1461047a578063aaf5eb68146104a2578063b5c5f672146104b157600080fd5b806322be3de11161011557806322be3de11461029a57806323c5b952146102d9578063388204651461036c5780634dd0d056146103c0578063546fecae146103e757806355ebb8251461040d57600080fd5b8062bbf1e41461015c57806307e32f0a1461020c57806311f9908614610221578063140240db1461024957806316ada5471461025c57806321b77d6314610273575b600080fd5b6101bb61016a36600461406b565b6004602081905260009182526040909120805460018201546002830154600384015493909401546001600160801b0380841695600160801b948590048216959184169490930463ffffffff16929187565b604080516001600160801b0398891681529688166020880152949096169385019390935263ffffffff919091166060840152608083015260a082015260c081019190915260e0015b60405180910390f35b61021f61021a36600461406b565b610565565b005b61023461022f36600461406b565b61057f565b60405163ffffffff9091168152602001610203565b61021f61025736600461412a565b6105bc565b61026560065481565b604051908152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610203565b61032f6102e736600461406b565b6002602052600090815260409020546001600160801b0381169063ffffffff600160801b8204811691600160a01b8104821691600160c01b8204811691600160e01b90041685565b604080516001600160801b03909616865263ffffffff9485166020870152928416928501929092528216606084015216608082015260a001610203565b6103a061037a366004613ec2565b6003602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6103fa6103f536600461406b565b610614565b604051600f9190910b8152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b610265610442366004613edd565b600560209081526000928352604080842090915290825290205481565b610265607881565b61021f610475366004613fe6565b610798565b61048d610488366004614108565b610912565b60408051928352602083019190915201610203565b610265670de0b6b3a764000081565b61021f6104bf366004613fb3565b610ac3565b6104d76104d2366004614156565b610be5565b60408051938452602084019290925290820152606001610203565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b61021f610527366004614108565b6111d2565b6000546102c1906001600160a01b031681565b61021f61054d366004613f07565b611656565b610265610560366004614084565b611c96565b806006600082825461057791906142c5565b909155505050565b60006001546001146105a457604051635cd4e48360e01b815260040160405180910390fd5b60026001556105b282611f19565b6001805592915050565b60008381526004602052604090206105d383611fc6565b81546001600160801b0319166001600160801b03919091161781556105f782611fc6565b81546001600160801b03918216600160801b029116179055505050565b6000818152600260209081526040808320815160a08101835290546001600160801b038116825263ffffffff600160801b8204811694830194909452600160a01b81048416928201839052600160c01b8104841660608301819052600160e01b909104909316608082015291839161068c919061435d565b6000858152600460208181526040808420815160e08101835281546001600160801b038082168352600160801b9182900481169583019590955260018301549485169382019390935263ffffffff929093048216606084015260028101546080840152600381015460a08401529092015460c08201529293509091829161071e9190670de0b6b3a764000090611fe016565b9150915061078e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000848488600001516001600160801b0316896020015163ffffffff168963ffffffff1661203f565b9695505050505050565b6001546001146107bb57604051635cd4e48360e01b815260040160405180910390fd5b6002600155831580156107cc575082155b156107ea576040516381552f0360e01b815260040160405180910390fd5b6001600160a01b038516600090815260036020526040902061080d90858561208d565b60008085156108215761081e612137565b91505b84156108325761082f61224a565b90505b60405163c536e60560e01b8152339063c536e6059061085b90899089908990899060040161427a565b600060405180830381600087803b15801561087557600080fd5b505af1158015610889573d6000803e3d6000fd5b50505050856000146108a7576108a76108a287846142c5565b612296565b84156108bf576108bf6108ba86836142c5565b6122d1565b60408051878152602081018790526001600160a01b0389169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a35050600180555050505050565b60008060015460011461093857604051635cd4e48360e01b815260040160405180910390fd5b60026001558261095b5760405163e5664db760e01b815260040160405180910390fd5b60008481526004602052604090206001810154600160801b900463ffffffff1661099857604051631d2ad63f60e01b815260040160405180910390fd5b6040805160e08101825282546001600160801b038082168352600160801b918290048116602084015260018501549081169383019390935263ffffffff92048216606082015260028301546080820152600383015460a0820152600483015460c0820152610a08918690611fe016565b3360009081526005602090815260408083208a8452909152812080549396509194508692610a37908490614346565b90915550610a569050838386610a4c60065490565b8593929190612308565b336000908152600360205260409020610a7090848461208d565b6040805184815260208101849052908101859052859033907f59c6598fc34aefe62579a03667748ef83b4682874f311affb26b318095359b0e9060600160405180910390a3506001805590939092509050565b600154600114610ae657604051635cd4e48360e01b815260040160405180910390fd5b600260015581158015610af7575080155b15610b15576040516381552f0360e01b815260040160405180910390fd5b610b21600383836123fa565b508115610b5c57610b5c6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846124b5565b8015610b9657610b966001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836124b5565b60408051838152602081018390526001600160a01b0385169133917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567910160405180910390a350506001805550565b6000806000600154600114610c0d57604051635cd4e48360e01b815260040160405180910390fd5b60026001556040516bffffffffffffffffffffffff193060601b1660208201526001600160801b031960808d901b1660348201526001600160e01b031960e08c811b821660448401528b811b821660488401528a901b16604c8201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060500160408051808303601f19018152918152815160209283012060008181526002909352912054909550600160c01b900463ffffffff1615610d0357604051633651818b60e21b815260040160405180910390fd5b629896808c63ffffffff161180610d20575060018c63ffffffff16105b15610d4b576040516387a2c00160e01b815263ffffffff8d1660048201526024015b60405180910390fd5b6001600160801b038d16610d7d5760405163b3f4bc5560e01b81526001600160801b038e166004820152602401610d42565b7f00000000000000000000000000000000000000000000000000000000000000008811610dc05760405163325951a560e01b815260048101899052602401610d42565b610dd282670de0b6b3a76400006142dd565b891180610ddd575088155b15610dfe576040516323d62a0f60e11b8152600481018a9052602401610d42565b6127108a63ffffffff161180610e1b57506123288a63ffffffff16105b15610e4157604051637ed91fa560e11b815263ffffffff8b166004820152602401610d42565b60006040518060a001604052808f6001600160801b031681526020018e63ffffffff1681526020018d63ffffffff168152602001610e7e60065490565b63ffffffff1681526020018c63ffffffff168152509050806040015163ffffffff16816060015163ffffffff161115610eca5760405163536e15e160e01b815260040160405180910390fd5b600081606001518260400151610ee0919061435d565b9050610f0f600085858e86600001516001600160801b0316876020015163ffffffff168763ffffffff166125c0565b9450670de0b6b3a7640000610f248b8d6142ff565b610f2e91906142dd565b9550670de0b6b3a7640000610f438b876142ff565b610f4d91906142dd565b9450851580610f5a575084155b15610f825760405163492d6d1760e01b81526004810187905260248101869052604401610d42565b6000878152600260209081526040808320855181549387015192870151606088015160808901516001600160801b039093166001600160a01b031990961695909517600160801b63ffffffff958616021767ffffffffffffffff60a01b1916600160a01b9185169190910263ffffffff60c01b191617600160c01b94841694909402939093176001600160e01b0316600160e01b929093169190910291909117905561104e7f00000000000000000000000000000000000000000000000000000000000000008c614346565b3360009081526005602090815260408083208c845290915281208054929350839290919061107d9084906142c5565b9091555050606083015160008981526004602052604090206110a491899089908f90612696565b6000806110af612137565b6110b761224a565b91509150336001600160a01b031663c171d27e8a8a8f8f6040518563ffffffff1660e01b81526004016110ed949392919061427a565b600060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b5050505061112e89836108a291906142c5565b61113b6108ba89836142c5565b60808086015160408088015188516020808b015184516001600160801b03909316835263ffffffff908116918301919091529281018e9052606081018d90529384018790529181169291169033907ff38f2bc2b712352b1d4a9ea95291a1c688835ac9f70a7a9d0aec57712c8b19129060a00160405180910390a45050505050505060018081905550985098509895505050505050565b600082815260046020908152604080832060028352818420825160a08101845290546001600160801b03808216835263ffffffff600160801b808404821697850197909752600160a01b8304811695840195909552600160c01b820485166060840152600160e01b90910490931660808201528154919490938284169392049091169061125e87610614565b905061126986611fc6565b8560000160006101000a8154816001600160801b0302191690836001600160801b031602179055506000611312827f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008a89600001516001600160801b03168a6020015163ffffffff168b606001518c60400151611307919061435d565b63ffffffff166125c0565b905061131d81611fc6565b86546001600160801b03918216600160801b908102918316828117808b559284161792910416600086831161135357600061135d565b61135d8784614346565b90506000878411611377576113728489614346565b61137a565b60005b9050600087841161138c576000611396565b6113968885614346565b905060008885116113b0576113ab858a614346565b6113b3565b60005b60405163a9059cbb60e01b8152336004820152602481018590529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561141e57600080fd5b505af1158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061404e565b506040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156114c557600080fd5b505af11580156114d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fd919061404e565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561156657600080fd5b505af115801561157a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159e919061404e565b506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561160d57600080fd5b505af1158015611621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611645919061404e565b505050505050505050505050505050565b60015460011461167957604051635cd4e48360e01b815260040160405180910390fd5b60026001558561169c57604051631411378d60e11b815260040160405180910390fd5b846116ba5760405163564b486560e01b815260040160405180910390fd5b60006040518061010001604052808b6001600160a01b031681526020018915158152602001861515815260200185151581526020016116f860065490565b63ffffffff1681526020018a815260200188815260200187815250905060006117248260a00151611f19565b9050611737607863ffffffff83166142c5565b826080015163ffffffff1611156117615760405163536e15e160e01b815260040160405180910390fd5b60006117708360a00151610614565b60a08085018051600090815260026020908152604080832081519586018252546001600160801b038116865263ffffffff600160801b8204811687850152600160a01b82048116878401908152600160c01b8304821660608901908152600160e01b9093049091166080880152945184526004909252822090519251949550929390916117fc9161435d565b90506000612710846080015163ffffffff168860c0015161181d91906142ff565b61182791906142dd565b905060008088602001511561187357845461184c9084906001600160801b03166142c5565b855490925061186c908f90600160801b90046001600160801b0316614346565b90506118ac565b8454611889908f906001600160801b0316614346565b85549092506118a9908490600160801b90046001600160801b03166142c5565b90505b60018501546001600160801b03166118cc670de0b6b3a7640000846142ff565b6118d691906142dd565b60018601549092506001600160801b03166118f9670de0b6b3a7640000836142ff565b61190391906142dd565b905060006119737f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085858b600001516001600160801b03168c6020015163ffffffff168b63ffffffff1661203f565b905080600f0b88600f0b13156119aa57604051630cd4424b60e41b8152600f89810b600483015282900b6024820152604401610d42565b6119d38a602001518b60c001518c60e001518d608001518a61275d90949392919063ffffffff16565b50505050505050826020015115611afa57826060015115611a1d5760e083015183516001600160a01b03166000908152600360205260408120611a189290919061208d565b611a58565b825160e0840151611a58916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124b5565b826040015115611a7b5760c0830151611a759060039060006123fa565b50611c0d565b6000611a85612137565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611ab5916000908b908b9060040161427a565b600060405180830381600087803b158015611acf57600080fd5b505af1158015611ae3573d6000803e3d6000fd5b50505050611a758460c00151826108a291906142c5565b826060015115611b325760e083015183516001600160a01b03166000908152600360205260408120611b2d92909161208d565b611b6d565b825160e0840151611b6d916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124b5565b826040015115611b8b5760c0830151611a75906003906000906123fa565b6000611b9561224a565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611bc691600091908b908b9060040161427a565b600060405180830381600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b50505050611c0b8460c00151826108ba91906142c5565b505b8260a0015183600001516001600160a01b0316336001600160a01b03167fe42b42fe878e256d1efbfb2ba292aadeac0228bbaa31f4ef8537522bdfa3ea1986602001518760c001518860e00151604051611c7c9392919092151583526020830191909152604082015260600190565b60405180910390a450506001805550505050505050505050565b6000600154600114611cbb57604051635cd4e48360e01b815260040160405180910390fd5b6002600155851580611ccb575084155b15611ce9576040516381552f0360e01b815260040160405180910390fd5b60008881526004602052604090206001810154600160801b900463ffffffff16611d2657604051631d2ad63f60e01b815260040160405180910390fd5b6000611d3160065490565b825460018401549192506000916001600160801b0391821691611d5591168b6142ff565b611d5f91906142dd565b835460018501549192506000916001600160801b03600160801b909204821691611d8a91168b6142ff565b611d9491906142dd565b9050808210611da35780611da5565b815b945084611dc55760405163e5664db760e01b815260040160405180910390fd5b6001600160a01b038b1660009081526005602090815260408083208f845290915281208054879290611df89084906142c5565b90915550611e0b9050848b8b8887612696565b8715611e2357611e1d60038b8b6123fa565b50611eb5565b600080611e2e612137565b611e3661224a565b6040516302a3517f60e31b81529193509150339063151a8bf890611e64908f908f908e908e9060040161427a565b600060405180830381600087803b158015611e7e57600080fd5b505af1158015611e92573d6000803e3d6000fd5b50505050611ea58c836108a291906142c5565b611eb26108ba8c836142c5565b50505b604080518b8152602081018b90529081018690528c906001600160a01b038d169033907f86e4803447f73017bf832b0ac69cb7afa3333a5fa823ec42a9f6cf8d17b50ecc9060600160405180910390a4505060018055509098975050505050505050565b60008181526002602052604081208054600160c01b900463ffffffff16611f5357604051631d2ad63f60e01b815260040160405180910390fd5b600654815490925063ffffffff600160a01b9091048116908316811015611f78578092505b815463ffffffff60c01b1916600160c01b63ffffffff85160217825560405184907fd69bdb2831892ad6046f30af0f12362aef46cce34d58ed7ad9b3ef8c44b1b46690600090a25050919050565b60006001600160801b03821115611fdc57600080fd5b5090565b6040820151825160009182916001600160801b039182169182916120059116866142ff565b61200f91906142dd565b92508085602001516001600160801b03168561202b91906142ff565b61203591906142dd565b9150509250929050565b60008061205260008a8a8a8989896125c0565b90506000612060828a61287c565b9050600061206e888b61287c565b905061207e600f82900b836128a5565b9b9a5050505050505050505050565b81156120dc5761209c82611fc6565b835484906000906120b79084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8015612132576120eb81611fc6565b8354849060109061210d908490600160801b90046001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b505050565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b906044015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516121bd919061423f565b600060405180830381855afa9150503d80600081146121f8576040519150601f19603f3d011682016040523d82523d6000602084013e6121fd565b606091505b509150915081158061221157508051602014155b1561222f5760405163056a754560e51b815260040160405180910390fd5b8080602001905181019061224391906141fd565b9250505090565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b9060440161217f565b60006122a0612137565b9050818110156122cd57604051634e71911d60e11b81526004810183905260248101829052604401610d42565b5050565b60006122db61224a565b9050818110156122cd5760405163c66162eb60e01b81526004810183905260248101829052604401610d42565b61231285826128e2565b61231b84611fc6565b855486906000906123369084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061236383611fc6565b85548690601090612385908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506123b282611fc6565b6001860180546000906123cf9084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b33600090815260208490526040902082156124585761241883611fc6565b815482906000906124339084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b81156124ae5761246782611fc6565b81548290601090612489908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612511919061423f565b6000604051808303816000865af19150503d806000811461254e576040519150601f19603f3d011682016040523d82523d6000602084013e612553565b606091505b509150915081801561257d57508051158061257d57508080602001905181019061257d919061404e565b6125b95760405162461bcd60e51b815260206004820152600d60248201526c151c985b9cd9995c8819985a5b609a1b6044820152606401610d42565b5050505050565b6000806125cd858861287c565b905060006125db878a61287c565b905060006125ed600160401b836128a5565b905084156126695760006126018787612977565b9050600061261183600f0b6129b4565b90506000612623600f83900b846128a5565b9050600061264e8f61264561263a85600f0b612a6e565b600f8b900b90612b0b565b600f0b90612b41565b905061265e600f82900b8e612b74565b975050505050612688565b61207e8961267f8d612645600f88900b86612b0b565b600f0b90612b74565b505050979650505050505050565b6126a085826128e2565b6126a984611fc6565b855486906000906126c49084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506126f183611fc6565b85548690601090612713908490600160801b90046001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061274082611fc6565b6001860180546000906123cf9084906001600160801b031661429a565b61276785826128e2565b83156128095761277683611fc6565b855486906000906127919084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506127be82611fc6565b855486906010906127e0908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506125b9565b61281282611fc6565b8554869060009061282d9084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061285a83611fc6565b855486906010906123cf908490600160801b90046001600160801b031661429a565b60008061289183670de0b6b3a76400006142dd565b905061289d8482612b99565b949350505050565b6000600f82810b9084900b0360016001607f1b031981128015906128d0575060016001607f1b038113155b6128d957600080fd5b90505b92915050565b600182015460009061290190600160801b900463ffffffff168361435d565b905063ffffffff81161561213257825460028401805463ffffffff9384166001600160801b038085168202909201909255600386018054600160801b94859004831684020190556001860180546004909701805492881690930290910190915563ffffffff60801b199094169290911602179055565b60008061298e61298684612bd0565b600f0b612be0565b9050600061299b85612c02565b90506129ab600f82900b83612b0b565b95945050505050565b6000600160401b600f83900b1215806129d15750600082600f0b13155b156129f557604051630e59931d60e31b8152600f83900b6004820152602401610d42565b67f999999999999999600f83900b13801590612a1d5750670666666666666666600f83900b12155b15612a2b576128dc82612c10565b670666666666666666600f83900b1215612a48576128dc82612cb7565b6000612a60612a5b600160401b856128a5565b612cb7565b6124ae9061437a565b919050565b600080612a88600f84900b68016a09e667f3bcc908612d81565b90506000612ac6612abb612ab0612aa185600f0b612dd9565b6753dd02a4f5ee2e4690612b0b565b600160401b90612b41565b600160401b90612d81565b90506000612ad48383612e0c565b9050600083600f0b1215612af157612aee81600f0b612edc565b90505b600061078e612b04600160401b84612b41565b6001603f1b905b6000600f83810b9083900b0260401d60016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b6000600f83810b9083900b0160016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b600080612b8983670de0b6b3a76400006142dd565b905061289d600f85900b82612ef7565b600081612ba557600080fd5b6000612bb18484612f5f565b905060016001607f1b036001600160801b03821611156128d957600080fd5b60006128dc826301e18558612b99565b60008082600f0b1215612bf257600080fd5b6128dc604083600f0b901b6130c1565b60006128dc82612710612b99565b600080612c25600f84900b6001603f1b6128a5565b90506000612c37600f83900b83612b0b565b905060006129ab612cac612c9c612c746721d0a04b0e9b94f1612645612c6667c2bf5d74c724e53e1989612b0b565b612645600f8a900b8a612b0b565b612c936726a8f3c1f21b336e6126456787c57e5da70d3c8f1989612b0b565b600f0b90612d81565b68015d71f5721242c78790612b41565b600f85900b90612b0b565b600080612cd9612986612cd1612abb600f87900b87612b0b565b600f0b61322f565b90506000612cfd6707a1e70f720eca436126456801000bf627fa1884101985612b0b565b90506000612d216810aeac93f55267a9a561264568041ed34a256149023686612b0b565b90506000612d5668072c7d592d021fb1db612645612d486808c27b4617f5f800ea88612b0b565b612645600f89900b89612b0b565b90506000612d76612d6b600f85900b84612d81565b600f86900b90612b41565b979650505050505050565b600081600f0b60001415612d9457600080fd5b600082600f0b604085600f0b901b81612daf57612daf6143cd565b05905060016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b6000600f82900b60016001607f1b03191415612df457600080fd5b600082600f0b12612e0557816128dc565b5060000390565b600080612e5e612cac612e4e612e43612e32600f88900b68010fb844255a12d72e612b0b565b68017401c57014c38f131990612b41565b600f87900b90612b0b565b68016a09e667f3bcc90890612b41565b90506000612e8a612e7b612e436748d4c730f051a5fd1985612b41565b67413c831bb169f87490612b41565b9050600061078e612ed1612ec6612ebb612eb3612eab600f8c900b8c612b0b565b600f0b612edc565b600f0b613269565b600f86900b90612b0b565b600f88900b90612b0b565b600160401b906128a5565b6000600f82900b60016001607f1b03191415612e0557600080fd5b600081612f06575060006128dc565b600083600f0b1215612f1757600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b03811115612f4657600080fd5b60401b8119811115612f5757600080fd5b019392505050565b600081612f6b57600080fd5b60006001600160c01b038411612f965782604085901b81612f8e57612f8e6143cd565b0490506130ad565b60c084811c6401000000008110612faf576020918201911c5b620100008110612fc1576010918201911c5b6101008110612fd2576008918201911c5b60108110612fe2576004918201911c5b60048110612ff2576002918201911c5b60028110613001576001820191505b60bf820360018603901c6001018260ff0387901b81613022576130226143cd565b0492506001600160801b0383111561303957600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613065576001820391505b608084901b9290038281101561307c576001820391505b829003608084901c8214613092576130926143a1565b8881816130a1576130a16143cd565b04870196505050505050505b6001600160801b038111156128d957600080fd5b6000816130d057506000919050565b816001600160801b82106130e95760809190911c9060401b5b600160401b82106130ff5760409190911c9060201b5b64010000000082106131165760209190911c9060101b5b62010000821061312b5760109190911c9060081b5b610100821061313f5760089190911c9060041b5b601082106131525760049190911c9060021b5b6008821061315e5760011b5b600181858161316f5761316f6143cd565b048201901c90506001818581613187576131876143cd565b048201901c9050600181858161319f5761319f6143cd565b048201901c905060018185816131b7576131b76143cd565b048201901c905060018185816131cf576131cf6143cd565b048201901c905060018185816131e7576131e76143cd565b048201901c905060018185816131ff576131ff6143cd565b048201901c90506000818581613217576132176143cd565b04905080821061322757806129ab565b509392505050565b60008082600f0b1361324057600080fd5b608061324b836132be565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b6000600160461b82600f0b1261327e57600080fd5b683fffffffffffffffff1982600f0b121561329b57506000919050565b6128dc608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d613399565b60008082600f0b136132cf57600080fd5b6000600f83900b600160401b81126132e9576040918201911d5b64010000000081126132fd576020918201911d5b62010000811261330f576010918201911d5b6101008112613320576008918201911d5b60108112613330576004918201911d5b60048112613340576002918201911d5b6002811261334f576001820191505b603f19820160401b600f85900b607f8490031b6001603f1b5b600081131561338e5790800260ff81901c8281029390930192607f011c9060011d613368565b509095945050505050565b6000600160461b82600f0b126133ae57600080fd5b683fffffffffffffffff1982600f0b12156133cb57506000919050565b6001607f1b60006001603f1b8416600f0b13156133f95770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315613426577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315613453577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156134805770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b13156134ad577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b13156134da57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156135075770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561353457700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156135605770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561358c577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156135b857700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156135e4577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561361057700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b131561363c5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315613668577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156136945770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156136bf577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156136ea57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156137155770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561374057700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b131561376b5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315613796577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156137c157700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156137ec577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561381657700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156138405770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561386a577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156138945770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156138be577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156138e857700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156139125770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561393c57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156139655770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b131561398e577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156139b757700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156139e0577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b1315613a0957700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b1315613a325770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315613a5b577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b1315613a845770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315613aac577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b1315613ad457700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b1315613afc5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b1315613b2457700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b1315613b4c5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613b74577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b1315613b9c57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b1315613bc4577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b1315613beb57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b1315613c125770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315613c39577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b1315613c605770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315613c87577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b1315613cae57700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b1315613cd55770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b1315613cfc57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b1315613d225770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315613d48577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b1315613d6e57700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613d94577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315613dba57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315613de05770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315613e06577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315613e2c5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156128dc57600080fd5b80356001600160a01b0381168114612a6957600080fd5b60008083601f840112613e7757600080fd5b50813567ffffffffffffffff811115613e8f57600080fd5b602083019150836020828501011115613ea757600080fd5b9250929050565b803563ffffffff81168114612a6957600080fd5b600060208284031215613ed457600080fd5b6124ae82613e4e565b60008060408385031215613ef057600080fd5b613ef983613e4e565b946020939093013593505050565b60008060008060008060008060006101008a8c031215613f2657600080fd5b613f2f8a613e4e565b985060208a0135975060408a0135613f46816143e3565b965060608a0135955060808a0135945060a08a0135613f64816143e3565b935060c08a0135613f74816143e3565b925060e08a013567ffffffffffffffff811115613f9057600080fd5b613f9c8c828d01613e65565b915080935050809150509295985092959850929598565b600080600060608486031215613fc857600080fd5b613fd184613e4e565b95602085013595506040909401359392505050565b600080600080600060808688031215613ffe57600080fd5b61400786613e4e565b94506020860135935060408601359250606086013567ffffffffffffffff81111561403157600080fd5b61403d88828901613e65565b969995985093965092949392505050565b60006020828403121561406057600080fd5b81516128d9816143e3565b60006020828403121561407d57600080fd5b5035919050565b600080600080600080600060c0888a03121561409f57600080fd5b873596506140af60208901613e4e565b9550604088013594506060880135935060808801356140cd816143e3565b925060a088013567ffffffffffffffff8111156140e957600080fd5b6140f58a828b01613e65565b989b979a50959850939692959293505050565b6000806040838503121561411b57600080fd5b50508035926020909101359150565b60008060006060848603121561413f57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060008060e0898b03121561417257600080fd5b88356001600160801b038116811461418957600080fd5b975061419760208a01613eae565b96506141a560408a01613eae565b95506141b360608a01613eae565b94506080890135935060a0890135925060c089013567ffffffffffffffff8111156141dd57600080fd5b6141e98b828c01613e65565b999c989b5096995094979396929594505050565b60006020828403121561420f57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000825160005b818110156142605760208186018101518583015201614246565b8181111561426f576000828501525b509190910192915050565b84815283602082015260606040820152600061078e606083018486614216565b60006001600160801b038083168185168083038211156142bc576142bc6143b7565b01949350505050565b600082198211156142d8576142d86143b7565b500190565b6000826142fa57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614319576143196143b7565b500290565b60006001600160801b038381169083168181101561433e5761433e6143b7565b039392505050565b600082821015614358576143586143b7565b500390565b600063ffffffff8381169083168181101561433e5761433e6143b7565b600081600f0b60016001607f1b0319811415614398576143986143b7565b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b80151581146143f157600080fd5b5056fea2646970667358221220817eed8e2d7d7e5f87762b5f7e09310c5727bbbcb55310e0938de4c255e134dd64736f6c63430008060033",
    "sourceMap": "116:2328:40:-:0;;;2601:1:11;2576:26;;197:1:40;175:23;;205:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3378:14:11;;;;;;;;3402:16;;;;;;;;;3428:36;;3474:38;;3522:30;;116:2328:40;;14:177:41;93:13;;-1:-1:-1;;;;;135:31:41;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:478::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:2;;;404:1;401;394:12;355:2;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;575:2;560:18;;554:25;619:2;604:18;;598:25;663:3;648:19;;;642:26;345:329;;476:59;;-1:-1:-1;554:25:41;598;642:26;-1:-1:-1;345:329:41;-1:-1:-1;;;345:329:41:o;:::-;116:2328:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101575760003560e01c80636b35bb6b116100c3578063be00763a1161007c578063be00763a146104c4578063c08165d4146104f2578063c0ed31ba14610519578063c45a01551461052c578063ca28fcd61461053f578063d2957b8f1461055257600080fd5b80636b35bb6b146104345780638fbc3ecd1461045f5780639e48ff5a146104675780639f8cfade1461047a578063aaf5eb68146104a2578063b5c5f672146104b157600080fd5b806322be3de11161011557806322be3de11461029a57806323c5b952146102d9578063388204651461036c5780634dd0d056146103c0578063546fecae146103e757806355ebb8251461040d57600080fd5b8062bbf1e41461015c57806307e32f0a1461020c57806311f9908614610221578063140240db1461024957806316ada5471461025c57806321b77d6314610273575b600080fd5b6101bb61016a36600461406b565b6004602081905260009182526040909120805460018201546002830154600384015493909401546001600160801b0380841695600160801b948590048216959184169490930463ffffffff16929187565b604080516001600160801b0398891681529688166020880152949096169385019390935263ffffffff919091166060840152608083015260a082015260c081019190915260e0015b60405180910390f35b61021f61021a36600461406b565b610565565b005b61023461022f36600461406b565b61057f565b60405163ffffffff9091168152602001610203565b61021f61025736600461412a565b6105bc565b61026560065481565b604051908152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610203565b61032f6102e736600461406b565b6002602052600090815260409020546001600160801b0381169063ffffffff600160801b8204811691600160a01b8104821691600160c01b8204811691600160e01b90041685565b604080516001600160801b03909616865263ffffffff9485166020870152928416928501929092528216606084015216608082015260a001610203565b6103a061037a366004613ec2565b6003602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6103fa6103f536600461406b565b610614565b604051600f9190910b8152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b610265610442366004613edd565b600560209081526000928352604080842090915290825290205481565b610265607881565b61021f610475366004613fe6565b610798565b61048d610488366004614108565b610912565b60408051928352602083019190915201610203565b610265670de0b6b3a764000081565b61021f6104bf366004613fb3565b610ac3565b6104d76104d2366004614156565b610be5565b60408051938452602084019290925290820152606001610203565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b61021f610527366004614108565b6111d2565b6000546102c1906001600160a01b031681565b61021f61054d366004613f07565b611656565b610265610560366004614084565b611c96565b806006600082825461057791906142c5565b909155505050565b60006001546001146105a457604051635cd4e48360e01b815260040160405180910390fd5b60026001556105b282611f19565b6001805592915050565b60008381526004602052604090206105d383611fc6565b81546001600160801b0319166001600160801b03919091161781556105f782611fc6565b81546001600160801b03918216600160801b029116179055505050565b6000818152600260209081526040808320815160a08101835290546001600160801b038116825263ffffffff600160801b8204811694830194909452600160a01b81048416928201839052600160c01b8104841660608301819052600160e01b909104909316608082015291839161068c919061435d565b6000858152600460208181526040808420815160e08101835281546001600160801b038082168352600160801b9182900481169583019590955260018301549485169382019390935263ffffffff929093048216606084015260028101546080840152600381015460a08401529092015460c08201529293509091829161071e9190670de0b6b3a764000090611fe016565b9150915061078e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000848488600001516001600160801b0316896020015163ffffffff168963ffffffff1661203f565b9695505050505050565b6001546001146107bb57604051635cd4e48360e01b815260040160405180910390fd5b6002600155831580156107cc575082155b156107ea576040516381552f0360e01b815260040160405180910390fd5b6001600160a01b038516600090815260036020526040902061080d90858561208d565b60008085156108215761081e612137565b91505b84156108325761082f61224a565b90505b60405163c536e60560e01b8152339063c536e6059061085b90899089908990899060040161427a565b600060405180830381600087803b15801561087557600080fd5b505af1158015610889573d6000803e3d6000fd5b50505050856000146108a7576108a76108a287846142c5565b612296565b84156108bf576108bf6108ba86836142c5565b6122d1565b60408051878152602081018790526001600160a01b0389169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a35050600180555050505050565b60008060015460011461093857604051635cd4e48360e01b815260040160405180910390fd5b60026001558261095b5760405163e5664db760e01b815260040160405180910390fd5b60008481526004602052604090206001810154600160801b900463ffffffff1661099857604051631d2ad63f60e01b815260040160405180910390fd5b6040805160e08101825282546001600160801b038082168352600160801b918290048116602084015260018501549081169383019390935263ffffffff92048216606082015260028301546080820152600383015460a0820152600483015460c0820152610a08918690611fe016565b3360009081526005602090815260408083208a8452909152812080549396509194508692610a37908490614346565b90915550610a569050838386610a4c60065490565b8593929190612308565b336000908152600360205260409020610a7090848461208d565b6040805184815260208101849052908101859052859033907f59c6598fc34aefe62579a03667748ef83b4682874f311affb26b318095359b0e9060600160405180910390a3506001805590939092509050565b600154600114610ae657604051635cd4e48360e01b815260040160405180910390fd5b600260015581158015610af7575080155b15610b15576040516381552f0360e01b815260040160405180910390fd5b610b21600383836123fa565b508115610b5c57610b5c6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846124b5565b8015610b9657610b966001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836124b5565b60408051838152602081018390526001600160a01b0385169133917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567910160405180910390a350506001805550565b6000806000600154600114610c0d57604051635cd4e48360e01b815260040160405180910390fd5b60026001556040516bffffffffffffffffffffffff193060601b1660208201526001600160801b031960808d901b1660348201526001600160e01b031960e08c811b821660448401528b811b821660488401528a901b16604c8201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060500160408051808303601f19018152918152815160209283012060008181526002909352912054909550600160c01b900463ffffffff1615610d0357604051633651818b60e21b815260040160405180910390fd5b629896808c63ffffffff161180610d20575060018c63ffffffff16105b15610d4b576040516387a2c00160e01b815263ffffffff8d1660048201526024015b60405180910390fd5b6001600160801b038d16610d7d5760405163b3f4bc5560e01b81526001600160801b038e166004820152602401610d42565b7f00000000000000000000000000000000000000000000000000000000000000008811610dc05760405163325951a560e01b815260048101899052602401610d42565b610dd282670de0b6b3a76400006142dd565b891180610ddd575088155b15610dfe576040516323d62a0f60e11b8152600481018a9052602401610d42565b6127108a63ffffffff161180610e1b57506123288a63ffffffff16105b15610e4157604051637ed91fa560e11b815263ffffffff8b166004820152602401610d42565b60006040518060a001604052808f6001600160801b031681526020018e63ffffffff1681526020018d63ffffffff168152602001610e7e60065490565b63ffffffff1681526020018c63ffffffff168152509050806040015163ffffffff16816060015163ffffffff161115610eca5760405163536e15e160e01b815260040160405180910390fd5b600081606001518260400151610ee0919061435d565b9050610f0f600085858e86600001516001600160801b0316876020015163ffffffff168763ffffffff166125c0565b9450670de0b6b3a7640000610f248b8d6142ff565b610f2e91906142dd565b9550670de0b6b3a7640000610f438b876142ff565b610f4d91906142dd565b9450851580610f5a575084155b15610f825760405163492d6d1760e01b81526004810187905260248101869052604401610d42565b6000878152600260209081526040808320855181549387015192870151606088015160808901516001600160801b039093166001600160a01b031990961695909517600160801b63ffffffff958616021767ffffffffffffffff60a01b1916600160a01b9185169190910263ffffffff60c01b191617600160c01b94841694909402939093176001600160e01b0316600160e01b929093169190910291909117905561104e7f00000000000000000000000000000000000000000000000000000000000000008c614346565b3360009081526005602090815260408083208c845290915281208054929350839290919061107d9084906142c5565b9091555050606083015160008981526004602052604090206110a491899089908f90612696565b6000806110af612137565b6110b761224a565b91509150336001600160a01b031663c171d27e8a8a8f8f6040518563ffffffff1660e01b81526004016110ed949392919061427a565b600060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b5050505061112e89836108a291906142c5565b61113b6108ba89836142c5565b60808086015160408088015188516020808b015184516001600160801b03909316835263ffffffff908116918301919091529281018e9052606081018d90529384018790529181169291169033907ff38f2bc2b712352b1d4a9ea95291a1c688835ac9f70a7a9d0aec57712c8b19129060a00160405180910390a45050505050505060018081905550985098509895505050505050565b600082815260046020908152604080832060028352818420825160a08101845290546001600160801b03808216835263ffffffff600160801b808404821697850197909752600160a01b8304811695840195909552600160c01b820485166060840152600160e01b90910490931660808201528154919490938284169392049091169061125e87610614565b905061126986611fc6565b8560000160006101000a8154816001600160801b0302191690836001600160801b031602179055506000611312827f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008a89600001516001600160801b03168a6020015163ffffffff168b606001518c60400151611307919061435d565b63ffffffff166125c0565b905061131d81611fc6565b86546001600160801b03918216600160801b908102918316828117808b559284161792910416600086831161135357600061135d565b61135d8784614346565b90506000878411611377576113728489614346565b61137a565b60005b9050600087841161138c576000611396565b6113968885614346565b905060008885116113b0576113ab858a614346565b6113b3565b60005b60405163a9059cbb60e01b8152336004820152602481018590529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561141e57600080fd5b505af1158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061404e565b506040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156114c557600080fd5b505af11580156114d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fd919061404e565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561156657600080fd5b505af115801561157a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159e919061404e565b506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561160d57600080fd5b505af1158015611621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611645919061404e565b505050505050505050505050505050565b60015460011461167957604051635cd4e48360e01b815260040160405180910390fd5b60026001558561169c57604051631411378d60e11b815260040160405180910390fd5b846116ba5760405163564b486560e01b815260040160405180910390fd5b60006040518061010001604052808b6001600160a01b031681526020018915158152602001861515815260200185151581526020016116f860065490565b63ffffffff1681526020018a815260200188815260200187815250905060006117248260a00151611f19565b9050611737607863ffffffff83166142c5565b826080015163ffffffff1611156117615760405163536e15e160e01b815260040160405180910390fd5b60006117708360a00151610614565b60a08085018051600090815260026020908152604080832081519586018252546001600160801b038116865263ffffffff600160801b8204811687850152600160a01b82048116878401908152600160c01b8304821660608901908152600160e01b9093049091166080880152945184526004909252822090519251949550929390916117fc9161435d565b90506000612710846080015163ffffffff168860c0015161181d91906142ff565b61182791906142dd565b905060008088602001511561187357845461184c9084906001600160801b03166142c5565b855490925061186c908f90600160801b90046001600160801b0316614346565b90506118ac565b8454611889908f906001600160801b0316614346565b85549092506118a9908490600160801b90046001600160801b03166142c5565b90505b60018501546001600160801b03166118cc670de0b6b3a7640000846142ff565b6118d691906142dd565b60018601549092506001600160801b03166118f9670de0b6b3a7640000836142ff565b61190391906142dd565b905060006119737f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085858b600001516001600160801b03168c6020015163ffffffff168b63ffffffff1661203f565b905080600f0b88600f0b13156119aa57604051630cd4424b60e41b8152600f89810b600483015282900b6024820152604401610d42565b6119d38a602001518b60c001518c60e001518d608001518a61275d90949392919063ffffffff16565b50505050505050826020015115611afa57826060015115611a1d5760e083015183516001600160a01b03166000908152600360205260408120611a189290919061208d565b611a58565b825160e0840151611a58916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124b5565b826040015115611a7b5760c0830151611a759060039060006123fa565b50611c0d565b6000611a85612137565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611ab5916000908b908b9060040161427a565b600060405180830381600087803b158015611acf57600080fd5b505af1158015611ae3573d6000803e3d6000fd5b50505050611a758460c00151826108a291906142c5565b826060015115611b325760e083015183516001600160a01b03166000908152600360205260408120611b2d92909161208d565b611b6d565b825160e0840151611b6d916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124b5565b826040015115611b8b5760c0830151611a75906003906000906123fa565b6000611b9561224a565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611bc691600091908b908b9060040161427a565b600060405180830381600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b50505050611c0b8460c00151826108ba91906142c5565b505b8260a0015183600001516001600160a01b0316336001600160a01b03167fe42b42fe878e256d1efbfb2ba292aadeac0228bbaa31f4ef8537522bdfa3ea1986602001518760c001518860e00151604051611c7c9392919092151583526020830191909152604082015260600190565b60405180910390a450506001805550505050505050505050565b6000600154600114611cbb57604051635cd4e48360e01b815260040160405180910390fd5b6002600155851580611ccb575084155b15611ce9576040516381552f0360e01b815260040160405180910390fd5b60008881526004602052604090206001810154600160801b900463ffffffff16611d2657604051631d2ad63f60e01b815260040160405180910390fd5b6000611d3160065490565b825460018401549192506000916001600160801b0391821691611d5591168b6142ff565b611d5f91906142dd565b835460018501549192506000916001600160801b03600160801b909204821691611d8a91168b6142ff565b611d9491906142dd565b9050808210611da35780611da5565b815b945084611dc55760405163e5664db760e01b815260040160405180910390fd5b6001600160a01b038b1660009081526005602090815260408083208f845290915281208054879290611df89084906142c5565b90915550611e0b9050848b8b8887612696565b8715611e2357611e1d60038b8b6123fa565b50611eb5565b600080611e2e612137565b611e3661224a565b6040516302a3517f60e31b81529193509150339063151a8bf890611e64908f908f908e908e9060040161427a565b600060405180830381600087803b158015611e7e57600080fd5b505af1158015611e92573d6000803e3d6000fd5b50505050611ea58c836108a291906142c5565b611eb26108ba8c836142c5565b50505b604080518b8152602081018b90529081018690528c906001600160a01b038d169033907f86e4803447f73017bf832b0ac69cb7afa3333a5fa823ec42a9f6cf8d17b50ecc9060600160405180910390a4505060018055509098975050505050505050565b60008181526002602052604081208054600160c01b900463ffffffff16611f5357604051631d2ad63f60e01b815260040160405180910390fd5b600654815490925063ffffffff600160a01b9091048116908316811015611f78578092505b815463ffffffff60c01b1916600160c01b63ffffffff85160217825560405184907fd69bdb2831892ad6046f30af0f12362aef46cce34d58ed7ad9b3ef8c44b1b46690600090a25050919050565b60006001600160801b03821115611fdc57600080fd5b5090565b6040820151825160009182916001600160801b039182169182916120059116866142ff565b61200f91906142dd565b92508085602001516001600160801b03168561202b91906142ff565b61203591906142dd565b9150509250929050565b60008061205260008a8a8a8989896125c0565b90506000612060828a61287c565b9050600061206e888b61287c565b905061207e600f82900b836128a5565b9b9a5050505050505050505050565b81156120dc5761209c82611fc6565b835484906000906120b79084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8015612132576120eb81611fc6565b8354849060109061210d908490600160801b90046001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b505050565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b906044015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516121bd919061423f565b600060405180830381855afa9150503d80600081146121f8576040519150601f19603f3d011682016040523d82523d6000602084013e6121fd565b606091505b509150915081158061221157508051602014155b1561222f5760405163056a754560e51b815260040160405180910390fd5b8080602001905181019061224391906141fd565b9250505090565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b9060440161217f565b60006122a0612137565b9050818110156122cd57604051634e71911d60e11b81526004810183905260248101829052604401610d42565b5050565b60006122db61224a565b9050818110156122cd5760405163c66162eb60e01b81526004810183905260248101829052604401610d42565b61231285826128e2565b61231b84611fc6565b855486906000906123369084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061236383611fc6565b85548690601090612385908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506123b282611fc6565b6001860180546000906123cf9084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b33600090815260208490526040902082156124585761241883611fc6565b815482906000906124339084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b81156124ae5761246782611fc6565b81548290601090612489908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612511919061423f565b6000604051808303816000865af19150503d806000811461254e576040519150601f19603f3d011682016040523d82523d6000602084013e612553565b606091505b509150915081801561257d57508051158061257d57508080602001905181019061257d919061404e565b6125b95760405162461bcd60e51b815260206004820152600d60248201526c151c985b9cd9995c8819985a5b609a1b6044820152606401610d42565b5050505050565b6000806125cd858861287c565b905060006125db878a61287c565b905060006125ed600160401b836128a5565b905084156126695760006126018787612977565b9050600061261183600f0b6129b4565b90506000612623600f83900b846128a5565b9050600061264e8f61264561263a85600f0b612a6e565b600f8b900b90612b0b565b600f0b90612b41565b905061265e600f82900b8e612b74565b975050505050612688565b61207e8961267f8d612645600f88900b86612b0b565b600f0b90612b74565b505050979650505050505050565b6126a085826128e2565b6126a984611fc6565b855486906000906126c49084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506126f183611fc6565b85548690601090612713908490600160801b90046001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061274082611fc6565b6001860180546000906123cf9084906001600160801b031661429a565b61276785826128e2565b83156128095761277683611fc6565b855486906000906127919084906001600160801b031661429a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506127be82611fc6565b855486906010906127e0908490600160801b90046001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506125b9565b61281282611fc6565b8554869060009061282d9084906001600160801b031661431e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061285a83611fc6565b855486906010906123cf908490600160801b90046001600160801b031661429a565b60008061289183670de0b6b3a76400006142dd565b905061289d8482612b99565b949350505050565b6000600f82810b9084900b0360016001607f1b031981128015906128d0575060016001607f1b038113155b6128d957600080fd5b90505b92915050565b600182015460009061290190600160801b900463ffffffff168361435d565b905063ffffffff81161561213257825460028401805463ffffffff9384166001600160801b038085168202909201909255600386018054600160801b94859004831684020190556001860180546004909701805492881690930290910190915563ffffffff60801b199094169290911602179055565b60008061298e61298684612bd0565b600f0b612be0565b9050600061299b85612c02565b90506129ab600f82900b83612b0b565b95945050505050565b6000600160401b600f83900b1215806129d15750600082600f0b13155b156129f557604051630e59931d60e31b8152600f83900b6004820152602401610d42565b67f999999999999999600f83900b13801590612a1d5750670666666666666666600f83900b12155b15612a2b576128dc82612c10565b670666666666666666600f83900b1215612a48576128dc82612cb7565b6000612a60612a5b600160401b856128a5565b612cb7565b6124ae9061437a565b919050565b600080612a88600f84900b68016a09e667f3bcc908612d81565b90506000612ac6612abb612ab0612aa185600f0b612dd9565b6753dd02a4f5ee2e4690612b0b565b600160401b90612b41565b600160401b90612d81565b90506000612ad48383612e0c565b9050600083600f0b1215612af157612aee81600f0b612edc565b90505b600061078e612b04600160401b84612b41565b6001603f1b905b6000600f83810b9083900b0260401d60016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b6000600f83810b9083900b0160016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b600080612b8983670de0b6b3a76400006142dd565b905061289d600f85900b82612ef7565b600081612ba557600080fd5b6000612bb18484612f5f565b905060016001607f1b036001600160801b03821611156128d957600080fd5b60006128dc826301e18558612b99565b60008082600f0b1215612bf257600080fd5b6128dc604083600f0b901b6130c1565b60006128dc82612710612b99565b600080612c25600f84900b6001603f1b6128a5565b90506000612c37600f83900b83612b0b565b905060006129ab612cac612c9c612c746721d0a04b0e9b94f1612645612c6667c2bf5d74c724e53e1989612b0b565b612645600f8a900b8a612b0b565b612c936726a8f3c1f21b336e6126456787c57e5da70d3c8f1989612b0b565b600f0b90612d81565b68015d71f5721242c78790612b41565b600f85900b90612b0b565b600080612cd9612986612cd1612abb600f87900b87612b0b565b600f0b61322f565b90506000612cfd6707a1e70f720eca436126456801000bf627fa1884101985612b0b565b90506000612d216810aeac93f55267a9a561264568041ed34a256149023686612b0b565b90506000612d5668072c7d592d021fb1db612645612d486808c27b4617f5f800ea88612b0b565b612645600f89900b89612b0b565b90506000612d76612d6b600f85900b84612d81565b600f86900b90612b41565b979650505050505050565b600081600f0b60001415612d9457600080fd5b600082600f0b604085600f0b901b81612daf57612daf6143cd565b05905060016001607f1b031981128015906128d0575060016001607f1b038113156128d957600080fd5b6000600f82900b60016001607f1b03191415612df457600080fd5b600082600f0b12612e0557816128dc565b5060000390565b600080612e5e612cac612e4e612e43612e32600f88900b68010fb844255a12d72e612b0b565b68017401c57014c38f131990612b41565b600f87900b90612b0b565b68016a09e667f3bcc90890612b41565b90506000612e8a612e7b612e436748d4c730f051a5fd1985612b41565b67413c831bb169f87490612b41565b9050600061078e612ed1612ec6612ebb612eb3612eab600f8c900b8c612b0b565b600f0b612edc565b600f0b613269565b600f86900b90612b0b565b600f88900b90612b0b565b600160401b906128a5565b6000600f82900b60016001607f1b03191415612e0557600080fd5b600081612f06575060006128dc565b600083600f0b1215612f1757600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b03811115612f4657600080fd5b60401b8119811115612f5757600080fd5b019392505050565b600081612f6b57600080fd5b60006001600160c01b038411612f965782604085901b81612f8e57612f8e6143cd565b0490506130ad565b60c084811c6401000000008110612faf576020918201911c5b620100008110612fc1576010918201911c5b6101008110612fd2576008918201911c5b60108110612fe2576004918201911c5b60048110612ff2576002918201911c5b60028110613001576001820191505b60bf820360018603901c6001018260ff0387901b81613022576130226143cd565b0492506001600160801b0383111561303957600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613065576001820391505b608084901b9290038281101561307c576001820391505b829003608084901c8214613092576130926143a1565b8881816130a1576130a16143cd565b04870196505050505050505b6001600160801b038111156128d957600080fd5b6000816130d057506000919050565b816001600160801b82106130e95760809190911c9060401b5b600160401b82106130ff5760409190911c9060201b5b64010000000082106131165760209190911c9060101b5b62010000821061312b5760109190911c9060081b5b610100821061313f5760089190911c9060041b5b601082106131525760049190911c9060021b5b6008821061315e5760011b5b600181858161316f5761316f6143cd565b048201901c90506001818581613187576131876143cd565b048201901c9050600181858161319f5761319f6143cd565b048201901c905060018185816131b7576131b76143cd565b048201901c905060018185816131cf576131cf6143cd565b048201901c905060018185816131e7576131e76143cd565b048201901c905060018185816131ff576131ff6143cd565b048201901c90506000818581613217576132176143cd565b04905080821061322757806129ab565b509392505050565b60008082600f0b1361324057600080fd5b608061324b836132be565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b6000600160461b82600f0b1261327e57600080fd5b683fffffffffffffffff1982600f0b121561329b57506000919050565b6128dc608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d613399565b60008082600f0b136132cf57600080fd5b6000600f83900b600160401b81126132e9576040918201911d5b64010000000081126132fd576020918201911d5b62010000811261330f576010918201911d5b6101008112613320576008918201911d5b60108112613330576004918201911d5b60048112613340576002918201911d5b6002811261334f576001820191505b603f19820160401b600f85900b607f8490031b6001603f1b5b600081131561338e5790800260ff81901c8281029390930192607f011c9060011d613368565b509095945050505050565b6000600160461b82600f0b126133ae57600080fd5b683fffffffffffffffff1982600f0b12156133cb57506000919050565b6001607f1b60006001603f1b8416600f0b13156133f95770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315613426577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315613453577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156134805770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b13156134ad577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b13156134da57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156135075770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561353457700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156135605770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561358c577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156135b857700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156135e4577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561361057700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b131561363c5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315613668577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156136945770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156136bf577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156136ea57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156137155770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561374057700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b131561376b5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315613796577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156137c157700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156137ec577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561381657700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156138405770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561386a577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156138945770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156138be577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156138e857700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156139125770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561393c57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156139655770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b131561398e577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156139b757700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156139e0577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b1315613a0957700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b1315613a325770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315613a5b577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b1315613a845770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315613aac577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b1315613ad457700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b1315613afc5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b1315613b2457700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b1315613b4c5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613b74577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b1315613b9c57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b1315613bc4577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b1315613beb57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b1315613c125770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315613c39577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b1315613c605770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315613c87577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b1315613cae57700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b1315613cd55770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b1315613cfc57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b1315613d225770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315613d48577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b1315613d6e57700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613d94577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315613dba57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315613de05770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315613e06577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315613e2c5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156128dc57600080fd5b80356001600160a01b0381168114612a6957600080fd5b60008083601f840112613e7757600080fd5b50813567ffffffffffffffff811115613e8f57600080fd5b602083019150836020828501011115613ea757600080fd5b9250929050565b803563ffffffff81168114612a6957600080fd5b600060208284031215613ed457600080fd5b6124ae82613e4e565b60008060408385031215613ef057600080fd5b613ef983613e4e565b946020939093013593505050565b60008060008060008060008060006101008a8c031215613f2657600080fd5b613f2f8a613e4e565b985060208a0135975060408a0135613f46816143e3565b965060608a0135955060808a0135945060a08a0135613f64816143e3565b935060c08a0135613f74816143e3565b925060e08a013567ffffffffffffffff811115613f9057600080fd5b613f9c8c828d01613e65565b915080935050809150509295985092959850929598565b600080600060608486031215613fc857600080fd5b613fd184613e4e565b95602085013595506040909401359392505050565b600080600080600060808688031215613ffe57600080fd5b61400786613e4e565b94506020860135935060408601359250606086013567ffffffffffffffff81111561403157600080fd5b61403d88828901613e65565b969995985093965092949392505050565b60006020828403121561406057600080fd5b81516128d9816143e3565b60006020828403121561407d57600080fd5b5035919050565b600080600080600080600060c0888a03121561409f57600080fd5b873596506140af60208901613e4e565b9550604088013594506060880135935060808801356140cd816143e3565b925060a088013567ffffffffffffffff8111156140e957600080fd5b6140f58a828b01613e65565b989b979a50959850939692959293505050565b6000806040838503121561411b57600080fd5b50508035926020909101359150565b60008060006060848603121561413f57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060008060e0898b03121561417257600080fd5b88356001600160801b038116811461418957600080fd5b975061419760208a01613eae565b96506141a560408a01613eae565b95506141b360608a01613eae565b94506080890135935060a0890135925060c089013567ffffffffffffffff8111156141dd57600080fd5b6141e98b828c01613e65565b999c989b5096995094979396929594505050565b60006020828403121561420f57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000825160005b818110156142605760208186018101518583015201614246565b8181111561426f576000828501525b509190910192915050565b84815283602082015260606040820152600061078e606083018486614216565b60006001600160801b038083168185168083038211156142bc576142bc6143b7565b01949350505050565b600082198211156142d8576142d86143b7565b500190565b6000826142fa57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614319576143196143b7565b500290565b60006001600160801b038381169083168181101561433e5761433e6143b7565b039392505050565b600082821015614358576143586143b7565b500390565b600063ffffffff8381169083168181101561433e5761433e6143b7565b600081600f0b60016001607f1b0319811415614398576143986143b7565b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b80151581146143f157600080fd5b5056fea2646970667358221220817eed8e2d7d7e5f87762b5f7e09310c5727bbbcb55310e0938de4c255e134dd64736f6c63430008060033",
    "sourceMap": "116:2328:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2858:57:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2858:57:11;;;;-1:-1:-1;;;2858:57:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11392:15:41;;;11374:34;;11444:15;;;11439:2;11424:18;;11417:43;11496:15;;;;11476:18;;;11469:43;;;;11560:10;11548:23;;;;11543:2;11528:18;;11521:51;11603:3;11588:19;;11581:35;11647:3;11632:19;;11625:35;11691:3;11676:19;;11669:35;;;;11308:3;11293:19;2858:57:11;;;;;;;;451:69:40;;;;;;:::i;:::-;;:::i;:::-;;5196:160:11;;;;;;:::i;:::-;;:::i;:::-;;;14529:10:41;14517:23;;;14499:42;;14487:2;14472:18;5196:160:11;14454:93:41;660:303:40;;;;;;:::i;:::-;;:::i;175:23::-;;;;;;;;;12951:25:41;;;12939:2;12924:18;175:23:40;12906:76:41;1998:47:11;;;;;2479:40;;;;;;;;-1:-1:-1;;;;;7882:32:41;;;7864:51;;7852:2;7837:18;2479:40:11;7819:102:41;2649:60:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2649:60:11;;;;-1:-1:-1;;;2649:60:11;;;;;-1:-1:-1;;;2649:60:11;;;;;-1:-1:-1;;;2649:60:11;;;;;-1:-1:-1;;;2649:60:11;;;;;;;;;-1:-1:-1;;;;;12508:47:41;;;12490:66;;12575:10;12621:15;;;12616:2;12601:18;;12594:43;12673:15;;;12653:18;;;12646:43;;;;12725:15;;12720:2;12705:18;;12698:43;12778:15;12772:3;12757:19;;12750:44;12477:3;12462:19;2649:60:11;12444:356:41;2756:55:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2756:55:11;;;;-1:-1:-1;;;2756:55:11;;;;;;;;;-1:-1:-1;;;;;10929:15:41;;;10911:34;;10981:15;;;;10976:2;10961:18;;10954:43;10831:18;2756:55:11;10813:190:41;2189:51:11;;;;;16785:628;;;;;;:::i;:::-;;:::i;:::-;;;9416:2:41;9405:22;;;;9387:41;;9375:2;9360:18;16785:628:11;9342:92:41;2092:50:11;;;;;2962:73;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1898:53;;1940:11;1898:53;;8632:785;;;;;;:::i;:::-;;:::i;11647:704::-;;;;;;:::i;:::-;;:::i;:::-;;;;13560:25:41;;;13616:2;13601:18;;13594:34;;;;13533:18;11647:704:11;13515:119:41;1800:51:11;;1845:6;1800:51;;9467:490;;;;;;:::i;:::-;;:::i;6098:2457::-;;;;;;:::i;:::-;;:::i;:::-;;;;9121:25:41;;;9177:2;9162:18;;9155:34;;;;9205:18;;;9198:34;9109:2;9094:18;6098:2457:11;9076:162:41;2393:39:11;;;;;969:1473:40;;;;;;:::i;:::-;;:::i;2287:31:11:-;;;;;-1:-1:-1;;;;;2287:31:11;;;12638:4075;;;;;;:::i;:::-;;:::i;10037:1560::-;;;;;;:::i;:::-;;:::i;451:69:40:-;511:2;503:4;;:10;;;;;;;:::i;:::-;;;;-1:-1:-1;;;451:69:40:o;5196:160:11:-;5273:20;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;5321:28:::1;5342:6:::0;5321:20:::1;:28::i;:::-;3156:1:::0;3147:10;;5305:44;5196:160;-1:-1:-1;;5196:160:11:o;660:303:40:-;789:24;816:16;;;:8;:16;;;;;861:32;880:12;861:18;:32::i;:::-;842:51;;-1:-1:-1;;;;;;842:51:40;-1:-1:-1;;;;;842:51:40;;;;;;;923:33;942:13;923:18;:33::i;:::-;903:53;;-1:-1:-1;;;;;903:53:40;;;-1:-1:-1;;;903:53:40;;;;;;-1:-1:-1;;;660:303:40:o;16785:628:11:-;16852:16;16905:20;;;:12;:20;;;;;;;;16880:45;;;;;;;;;-1:-1:-1;;;;;16880:45:11;;;;;-1:-1:-1;;;16880:45:11;;;;;;;;;;;-1:-1:-1;;;16880:45:11;;;;;;;;;;-1:-1:-1;;;16880:45:11;;;;;;;;;;-1:-1:-1;;;16880:45:11;;;;;;;;;;;16852:16;;16948:32;;16880:45;16948:32;:::i;:::-;17044:25;17101:16;;;:8;:16;;;;;;;;:27;;;;;;;;;-1:-1:-1;;;;;17101:27:11;;;;;-1:-1:-1;;;17101:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16935:45;;-1:-1:-1;17044:25:11;;;;17101:38;;:27;1845:6;;17101:27;:38;:::i;:::-;17043:96;;;;17179:227;17222:16;17252:17;17283;17314:18;17346:3;:10;;;-1:-1:-1;;;;;17179:227:11;17370:3;:9;;;17179:227;;17393:3;17179:227;;:29;:227::i;:::-;17167:239;16785:628;-1:-1:-1;;;;;;16785:628:11:o;8632:785::-;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;8801:13;;:31;::::1;;;-1:-1:-1::0;8818:14:11;;8801:31:::1;8797:61;;;8841:17;;-1:-1:-1::0;;;8841:17:11::1;;;;;;;;;;;8797:61;-1:-1:-1::0;;;;;8868:18:11;::::1;;::::0;;;:7:::1;:18;::::0;;;;:47:::1;::::0;8895:8;8905:9;8868:26:::1;:47::i;:::-;8942:16;::::0;8999:13;;8995:44:::1;;9025:14;:12;:14::i;:::-;9014:25;;8995:44;9053:14:::0;;9049:47:::1;;9081:15;:13;:15::i;:::-;9069:27;;9049:47;9106:80;::::0;-1:-1:-1;;;9106:80:11;;9132:10:::1;::::0;9106:53:::1;::::0;:80:::1;::::0;9160:8;;9170:9;;9181:4;;;;9106:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9220:8;9232:1;9220:13;9216:57;;9235:38;9253:19;9264:8:::0;9253;:19:::1;:::i;:::-;9235:17;:38::i;:::-;9287:14:::0;;9283:61:::1;;9303:41;9322:21;9334:9:::0;9322;:21:::1;:::i;:::-;9303:18;:41::i;:::-;9359:51;::::0;;13560:25:41;;;13616:2;13601:18;;13594:34;;;-1:-1:-1;;;;;9359:51:11;::::1;::::0;9367:10:::1;::::0;9359:51:::1;::::0;13533:18:41;9359:51:11::1;;;;;;;-1:-1:-1::0;;3156:1:11;3147:10;;-1:-1:-1;;;;;8632:785:11:o;11647:704::-;11765:16;11783:17;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;11820:17;11816:50:::1;;11846:20;;-1:-1:-1::0;;;11846:20:11::1;;;;;;;;;;;11816:50;11876:28;11907:16:::0;;;:8:::1;:16;::::0;;;;11937:22:::1;::::0;::::1;::::0;-1:-1:-1;;;11937:22:11;::::1;;;11933:60;;11973:20;;-1:-1:-1::0;;;11973:20:11::1;;;;;;;;;;;11933:60;12027:18;::::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;12027:18:11;;::::1;::::0;;-1:-1:-1;;;12027:18:11;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;:32:::1;::::0;12046:12;;12027:18:::1;:32;:::i;:::-;12080:10;12070:21;::::0;;;:9:::1;:21;::::0;;;;;;;:29;;;;;;;;:45;;12003:56;;-1:-1:-1;12003:56:11;;-1:-1:-1;12103:12:11;;12070:45:::1;::::0;12103:12;;12070:45:::1;:::i;:::-;::::0;;;-1:-1:-1;12141:68:11::1;::::0;-1:-1:-1;12156:8:11;12166:9;12177:12;12191:17:::1;642:4:40::0;;;526:128;12191:17:11::1;12141:7:::0;;:68;;;:14:::1;:68::i;:::-;12227:10;12219:19;::::0;;;:7:::1;:19;::::0;;;;:48:::1;::::0;12247:8;12257:9;12219:27:::1;:48::i;:::-;12283:61;::::0;;9121:25:41;;;9177:2;9162:18;;9155:34;;;9205:18;;;9198:34;;;12302:6:11;;12290:10:::1;::::0;12283:61:::1;::::0;9109:2:41;9094:18;12283:61:11::1;;;;;;;-1:-1:-1::0;3156:1:11;3147:10;;11647:704;;;;-1:-1:-1;11647:704:11;-1:-1:-1;11647:704:11:o;9467:490::-;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;9608:13;;:31;::::1;;;-1:-1:-1::0;9625:14:11;;9608:31:::1;9604:61;;;9648:17;;-1:-1:-1::0;;;9648:17:11::1;;;;;;;;;;;9604:61;9675:37;:7;9692:8:::0;9702:9;9675:16:::1;:37::i;:::-;-1:-1:-1::0;9742:13:11;;9738:66:::1;;9757:47;-1:-1:-1::0;;;;;9764:5:11::1;9757:26;9784:9:::0;9795:8;9757:26:::1;:47::i;:::-;9818:14:::0;;9814:69:::1;;9834:49;-1:-1:-1::0;;;;;9841:6:11::1;9834:27;9862:9:::0;9873;9834:27:::1;:49::i;:::-;9898:52;::::0;;13560:25:41;;;13616:2;13601:18;;13594:34;;;-1:-1:-1;;;;;9898:52:11;::::1;::::0;9907:10:::1;::::0;9898:52:::1;::::0;13533:18:41;9898:52:11::1;;;;;;;-1:-1:-1::0;;3156:1:11;3147:10;;-1:-1:-1;9467:490:11:o;6098:2457::-;6377:14;6405:16;6435:17;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;6580:63:::1;::::0;-1:-1:-1;;6605:4:11::1;6902:2:41::0;6898:15;6894:53;6580:63:11::1;::::0;::::1;6882:66:41::0;-1:-1:-1;;;;;;6986:3:41;6982:16;;;6978:62;6964:12;;;6957:84;-1:-1:-1;;;;;;7064:3:41;7114:16;;;7110:25;;7096:12;;;7089:47;7170:16;;;7166:25;;7152:12;;;7145:47;7226:16;;;7222:25;7208:12;;;7201:47;6515:16:11::1;::::0;6533:17:::1;::::0;7264:12:41;;6580:63:11::1;::::0;;;;::::1;-1:-1:-1::0;;6580:63:11;;;;;;6570:74;;6580:63:::1;6570:74:::0;;::::1;::::0;6658:20:::1;::::0;;;:12:::1;:20:::0;;;;;:34;6570:74;;-1:-1:-1;;;;6658:34:11;::::1;;;:39:::0;6654:72:::1;;6706:20;;-1:-1:-1::0;;;6706:20:11::1;;;;;;;;;;;6654:72;6748:3;6740:5;:11;;;:24;;;;6763:1;6755:5;:9;;;6740:24;6736:54;;;6773:17;::::0;-1:-1:-1;;;6773:17:11;;14529:10:41;14517:23;;6773:17:11::1;::::0;::::1;14499:42:41::0;14472:18;;6773:17:11::1;;;;;;;;6736:54;-1:-1:-1::0;;;;;6804:11:11;::::1;6800:43;;6824:19;::::0;-1:-1:-1;;;6824:19:11;;-1:-1:-1;;;;;10625:47:41;;6824:19:11::1;::::0;::::1;10607:66:41::0;10580:18;;6824:19:11::1;10562:117:41::0;6800:43:11::1;6873:13;6857:12;:29;6853:73;;6895:31;::::0;-1:-1:-1;;;6895:31:11;;::::1;::::0;::::1;12951:25:41::0;;;12924:18;;6895:31:11::1;12906:76:41::0;6853:73:11::1;6953:19;6965:7:::0;1845:6:::1;6953:19;:::i;:::-;6940:10;:32;:51;;;-1:-1:-1::0;6976:15:11;;6940:51:::1;6936:91;;;7000:27;::::0;-1:-1:-1;;;7000:27:11;;::::1;::::0;::::1;12951:25:41::0;;;12924:18;;7000:27:11::1;12906:76:41::0;6936:91:11::1;500:3:31;7041:5:11;:24;;;:40;;;;7077:4;7069:5;:12;;;7041:40;7037:70;;;7090:17;::::0;-1:-1:-1;;;7090:17:11;;14529:10:41;14517:23;;7090:17:11::1;::::0;::::1;14499:42:41::0;14472:18;;7090:17:11::1;14454:93:41::0;7037:70:11::1;7118:22;7143:181;;;;;;;;7177:6;-1:-1:-1::0;;;;;7143:181:11::1;;;;;7204:5;7143:181;;;;;;7233:8;7143:181;;;;;;7270:17;642:4:40::0;;;526:128;7270:17:11::1;7143:181;;;;;;7308:5;7143:181;;;;::::0;7118:206:::1;;7359:3;:12;;;7339:32;;:3;:17;;;:32;;;7335:63;;;7380:18;;-1:-1:-1::0;;;7380:18:11::1;;;;;;;;;;;7335:63;7408:10;7436:3;:17;;;7421:3;:12;;;:32;;;;:::i;:::-;7408:45;;7496:96;7532:1;7535:7;7544;7553:10;7565:3;:10;;;-1:-1:-1::0;;;;;7496:96:11::1;7577:3;:9;;;7496:96;;7588:3;7496:96;;:35;:96::i;:::-;7484:108:::0;-1:-1:-1;1845:6:11::1;7614:25;7627:12:::0;7614:10;:25:::1;:::i;:::-;7613:39;;;;:::i;:::-;7602:50:::0;-1:-1:-1;1845:6:11::1;7731:24;7743:12:::0;7731:9;:24:::1;:::i;:::-;7730:38;;;;:::i;:::-;7718:50:::0;-1:-1:-1;7782:13:11;;;:31:::1;;-1:-1:-1::0;7799:14:11;;7782:31:::1;7778:81;;;7822:37;::::0;-1:-1:-1;;;7822:37:11;;::::1;::::0;::::1;13560:25:41::0;;;13601:18;;;13594:34;;;13533:18;;7822:37:11::1;13515:119:41::0;7778:81:11::1;7870:20;::::0;;;:12:::1;:20;::::0;;;;;;;:26;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;7870:26:11;;::::1;-1:-1:-1::0;;;;;;7870:26:11;;;;;;;-1:-1:-1;;;7870:26:11::1;::::0;;::::1;;;-1:-1:-1::0;;;;7870:26:11;-1:-1:-1;;;7870:26:11;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;7870:26:11;;-1:-1:-1;;;7870:26:11;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;7870:26:11::1;-1:-1:-1::0;;;7870:26:11;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;7939:28:::1;7954:13;7939:12:::0;:28:::1;:::i;:::-;7987:10;7977:21;::::0;;;:9:::1;:21;::::0;;;;;;;:29;;;;;;;;:39;;7922:45;;-1:-1:-1;7922:45:11;;7977:29;;:21;:39:::1;::::0;7922:45;;7977:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;8132:17:11::1;::::0;::::1;::::0;8071:16:::1;::::0;;;:8:::1;:16;::::0;;;;:79:::1;::::0;8097:8;;8107:9;;8118:12;;8071:25:::1;:79::i;:::-;8178:16;8196:17:::0;8218:14:::1;:12;:14::i;:::-;8234:15;:13;:15::i;:::-;8177:73;;;;8285:10;-1:-1:-1::0;;;;;8260:51:11::1;;8312:8;8322:9;8333:4;;8260:78;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8348:38;8377:8;8366;:19;;;;:::i;8348:38::-;8396:41;8415:21;8427:9:::0;8415;:21:::1;:::i;8396:41::-;8509:9;::::0;;::::1;::::0;8495:12:::1;::::0;;::::1;::::0;8472:10;;8484:9:::1;::::0;;::::1;::::0;8453:95;;-1:-1:-1;;;;;11990:47:41;;;11972:66;;8453:95:11::1;12074:23:41::0;;;12054:18;;;12047:51;;;;12114:18;;;12107:34;;;12172:2;12157:18;;12150:34;;;12200:19;;;12193:35;;;8453:95:11;;::::1;::::0;;::::1;::::0;8460:10:::1;::::0;8453:95:::1;::::0;11959:3:41;11944:19;8453:95:11::1;;;;;;;6467:2088;;;;;;;3156:1:::0;3147:6;:10;;;;6098:2457;;;;;;;;;;;;:::o;969:1473:40:-;1048:24;1075:16;;;:8;:16;;;;;;;;1126:12;:20;;;;;1101:45;;;;;;;;;-1:-1:-1;;;;;1101:45:40;;;;;;-1:-1:-1;;;1101:45:40;;;;;;;;;;;;-1:-1:-1;;;1101:45:40;;;;;;;;;;;-1:-1:-1;;;1101:45:40;;;;;;;;-1:-1:-1;;;1101:45:40;;;;;;;;;;1197:16;;1075;;1101:45;;1197:16;;;;1215:17;;;;;;1262:19;1084:6;1262:11;:19::i;:::-;1243:38;;1310:32;1329:12;1310:18;:32::i;:::-;1291:3;:16;;;:51;;;;;-1:-1:-1;;;;;1291:51:40;;;;;-1:-1:-1;;;;;1291:51:40;;;;;;1352:21;1376:248;1425:9;1448:16;1478:17;1509:12;1535:3;:10;;;-1:-1:-1;;;;;1376:248:40;1559:3;:9;;;1376:248;;1597:3;:17;;;1582:3;:12;;;:32;;;;:::i;:::-;1376:248;;:35;:248::i;:::-;1352:272;;1654:33;1673:13;1654:18;:33::i;:::-;1634:53;;-1:-1:-1;;;;;1634:53:40;;;-1:-1:-1;;;1634:53:40;;;;;;;;;;;;1740:16;;;;;1758:17;;;1634;1824:20;;;:47;;1870:1;1824:47;;;1847:20;1859:8;1847:9;:20;:::i;:::-;1801:70;;1885:20;1920:8;1908:9;:20;:47;;1935:20;1946:9;1935:8;:20;:::i;:::-;1908:47;;;1931:1;1908:47;1885:70;;1970:21;2007:9;1994:10;:22;:51;;2044:1;1994:51;;;2019:22;2032:9;2019:10;:22;:::i;:::-;1970:75;;2059:21;2096:9;2083:10;:22;:51;;2112:22;2124:10;2112:9;:22;:::i;:::-;2083:51;;;2108:1;2083:51;2148:48;;-1:-1:-1;;;2148:48:40;;2171:10;2148:48;;;8480:51:41;8547:18;;;8540:34;;;2059:75:40;;-1:-1:-1;2155:5:40;-1:-1:-1;;;;;2148:22:40;;;;8453:18:41;;2148:48:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2210:67:40;;-1:-1:-1;;;2210:67:40;;2237:10;2210:67;;;8166:34:41;2257:4:40;8216:18:41;;;8209:43;8268:18;;;8261:34;;;2217:5:40;-1:-1:-1;;;;;2210:26:40;;;;8101:18:41;;2210:67:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2292:50:40;;-1:-1:-1;;;2292:50:40;;2316:10;2292:50;;;8480:51:41;8547:18;;;8540:34;;;2299:6:40;-1:-1:-1;;;;;2292:23:40;;;;8453:18:41;;2292:50:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2356:69:40;;-1:-1:-1;;;2356:69:40;;2384:10;2356:69;;;8166:34:41;2404:4:40;8216:18:41;;;8209:43;8268:18;;;8261:34;;;2363:6:40;-1:-1:-1;;;;;2356:27:40;;;;8101:18:41;;2356:69:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1787:649;;;;1038:1404;;;;;;;;969:1473;;:::o;12638:4075:11:-;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;12903:12;12899:39:::1;;12924:14;;-1:-1:-1::0;;;12924:14:11::1;;;;;;;;;;;12899:39;12952:13:::0;12948:41:::1;;12974:15;;-1:-1:-1::0;;;12974:15:11::1;;;;;;;;;;;12948:41;13000:26;13029:301;;;;;;;;13066:9;-1:-1:-1::0;;;;;13029:301:11::1;;;;;13195:14;13029:301;;;;;;13235:10;13029:301;;;;;;13269:8;13029:301;;;;;;13302:17;642:4:40::0;;;526:128;13302:17:11::1;13029:301;;;;;;13097:6;13029:301;;;;13126:7;13029:301;;;;13157:8;13029:301;;::::0;13000:330:::1;;13341:20;13364:36;13385:7;:14;;;13364:20;:36::i;:::-;13341:59:::0;-1:-1:-1;13471:22:11::1;1940:11;13471:22;::::0;::::1;;:::i;:::-;13451:7;:17;;;:42;;;13447:73;;;13502:18;;-1:-1:-1::0;;;13502:18:11::1;;;;;;;;;;;13447:73;13566:19;13588:27;13600:7;:14;;;13588:11;:27::i;:::-;13785:14;::::0;;::::1;::::0;;13747:22:::1;13772:28:::0;;;:12:::1;:28;::::0;;;;;;;13747:53;;;;::::1;::::0;;;-1:-1:-1;;;;;13747:53:11;::::1;::::0;;::::1;-1:-1:-1::0;;;13747:53:11;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;13747:53:11;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;13747:53:11;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;13747:53:11;;::::1;::::0;;::::1;::::0;;;;13854:14;;13845:24;;:8:::1;:24:::0;;;;;13911:17;;13896:12;;13566:49;;-1:-1:-1;13747:53:11;;:22;;13896:32:::1;::::0;::::1;:::i;:::-;13883:45;;13942:22;500:3:31;13986::11;:9;;;13968:27;;:7;:15;;;:27;;;;:::i;:::-;13967:48;;;;:::i;:::-;13942:73;;14054:21;14089:22:::0;14129:7:::1;:22;;;14125:376;;;14195:20:::0;;14187:46:::1;::::0;14219:14;;-1:-1:-1;;;;;14195:20:11::1;14187:46;:::i;:::-;14276:21:::0;;14171:62;;-1:-1:-1;14268:41:11::1;::::0;14301:8;;-1:-1:-1;;;14276:21:11;::::1;-1:-1:-1::0;;;;;14276:21:11::1;14268:41;:::i;:::-;14251:58;;14125:376;;;14372:20:::0;;14364:40:::1;::::0;14396:8;;-1:-1:-1;;;;;14372:20:11::1;14364:40;:::i;:::-;14447:21:::0;;14348:56;;-1:-1:-1;14439:47:11::1;::::0;14472:14;;-1:-1:-1;;;14447:21:11;::::1;-1:-1:-1::0;;;;;14447:21:11::1;14439:47;:::i;:::-;14422:64;;14125:376;14560:17;::::0;::::1;::::0;-1:-1:-1;;;;;14560:17:11::1;14531:25;1845:6;14531:13:::0;:25:::1;:::i;:::-;14530:47;;;;:::i;:::-;14639:17;::::0;::::1;::::0;14514:63;;-1:-1:-1;;;;;;14639:17:11::1;14609:26;1845:6;14609:14:::0;:26:::1;:::i;:::-;14608:48;;;;:::i;:::-;14591:65;;14671:21;14695:251;14742:16;14776:17;14811:13;14842:14;14874:3;:10;;;-1:-1:-1::0;;;;;14695:251:11::1;14902:3;:9;;;14695:251;;14929:3;14695:251;;:29;:251::i;:::-;14671:275;;14980:14;14965:29;;:12;:29;;;14961:86;;;15003:44;::::0;-1:-1:-1;;;15003:44:11;;9638:2:41;9627:22;;;15003:44:11::1;::::0;::::1;9609:41:41::0;9686:22;;;9666:18;;;9659:50;9582:18;;15003:44:11::1;9564:151:41::0;14961:86:11::1;15061:90;15074:7;:22;;;15098:7;:15;;;15115:7;:16;;;15133:7;:17;;;15061:7;:12;;:90;;;;;;;:::i;:::-;13677:1501;;;;;;;15192:7;:22;;;15188:1311;;;15234:7;:16;;;15230:240;;;15308:16;::::0;::::1;::::0;15278:17;;-1:-1:-1;;;;;15270:26:11::1;15305:1;15270:26:::0;;;:7:::1;:26;::::0;;;;:55:::1;::::0;:26;;15305:1;15270:34:::1;:55::i;:::-;15230:240;;;15392:17:::0;;15411:16:::1;::::0;::::1;::::0;15364:64:::1;::::0;-1:-1:-1;;;;;15371:6:11::1;15364:27;::::0;::::1;:64::i;:::-;15488:7;:18;;;15484:359;;;15543:15;::::0;::::1;::::0;15526:36:::1;::::0;:7:::1;::::0;15560:1:::1;15526:16;:36::i;:::-;;15188:1311;;15484:359;15617:16;15636:14;:12;:14::i;:::-;15716:15;::::0;::::1;::::0;15668:73:::1;::::0;-1:-1:-1;;;15668:73:11;;15617:33;;-1:-1:-1;15691:10:11::1;::::0;15668:47:::1;::::0;:73:::1;::::0;15733:1:::1;::::0;15736:4;;;;15668:73:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15783:45;15812:7;:15;;;15801:8;:26;;;;:::i;15188:1311::-;15877:7;:16;;;15873:239;;;15948:16;::::0;::::1;::::0;15921:17;;-1:-1:-1;;;;;15913:26:11::1;15966:1;15913:26:::0;;;:7:::1;:26;::::0;;;;:55:::1;::::0;:26;;:34:::1;:55::i;:::-;15873:239;;;16034:17:::0;;16053:16:::1;::::0;::::1;::::0;16007:63:::1;::::0;-1:-1:-1;;;;;16014:5:11::1;16007:26;::::0;::::1;:63::i;:::-;16130:7;:18;;;16126:363;;;16188:15;::::0;::::1;::::0;16168:36:::1;::::0;:7:::1;::::0;16185:1:::1;::::0;16168:16:::1;:36::i;16126:363::-;16259:17;16279:15;:13;:15::i;:::-;16363;::::0;::::1;::::0;16312:73:::1;::::0;-1:-1:-1;;;16312:73:11;;16259:35;;-1:-1:-1;16335:10:11::1;::::0;16312:47:::1;::::0;:73:::1;::::0;16360:1:::1;::::0;16363:15;16380:4;;;;16312:73:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16427:47;16458:7;:15;;;16446:9;:27;;;;:::i;16427:47::-;16241:248;16126:363;16587:7;:14;;;16556:7;:17;;;-1:-1:-1::0;;;;;16514:192:11::1;16532:10;-1:-1:-1::0;;;;;16514:192:11::1;;16615:7;:22;;;16651:7;:15;;;16680:7;:16;;;16514:192;;;;;;;8806:14:41::0;;8799:22;8781:41;;8853:2;8838:18;;8831:34;;;;8896:2;8881:18;;8874:34;8769:2;8754:18;;8736:178;16514:192:11::1;;;;;;;;-1:-1:-1::0;;3156:1:11;3147:10;;-1:-1:-1;;;;;;;;;;12638:4075:11:o;10037:1560::-;10251:20;3072:6;;3082:1;3072:11;3068:37;;3092:13;;-1:-1:-1;;;3092:13:11;;;;;;;;;;;3068:37;3125:1;3116:6;:10;10287:13;;;:31:::1;;-1:-1:-1::0;10304:14:11;;10287:31:::1;10283:61;;;10327:17;;-1:-1:-1::0;;;10327:17:11::1;;;;;;;;;;;10283:61;10354:28;10385:16:::0;;;:8:::1;:16;::::0;;;;10415:22:::1;::::0;::::1;::::0;-1:-1:-1;;;10415:22:11;::::1;;;10411:60;;10451:20;;-1:-1:-1::0;;;10451:20:11::1;;;;;;;;;;;10411:60;10481:16;10500:17;642:4:40::0;;;526:128;10500:17:11::1;10590:20:::0;;;10561:17;::::1;::::0;10481:36;;-1:-1:-1;10528:18:11::1;::::0;-1:-1:-1;;;;;10590:20:11;;::::1;::::0;10550:28:::1;::::0;10561:17:::1;10550:8:::0;:28:::1;:::i;:::-;10549:62;;;;:::i;:::-;10684:21:::0;;10655:17:::1;::::0;::::1;::::0;10528:83;;-1:-1:-1;10621:18:11::1;::::0;-1:-1:-1;;;;;;;;10684:21:11;;::::1;::::0;::::1;::::0;10643:29:::1;::::0;10655:17:::1;10643:9:::0;:29:::1;:::i;:::-;10642:64;;;;:::i;:::-;10621:85;;10744:10;10731;:23;:49;;10770:10;10731:49;;;10757:10;10731:49;10716:64:::0;-1:-1:-1;10794:17:11;10790:50:::1;;10820:20;;-1:-1:-1::0;;;10820:20:11::1;;;;;;;;;;;10790:50;-1:-1:-1::0;;;;;10851:20:11;::::1;;::::0;;;:9:::1;:20;::::0;;;;;;;:28;;;;;;;;:44;;10883:12;;10851:20;:44:::1;::::0;10883:12;;10851:44:::1;:::i;:::-;::::0;;;-1:-1:-1;10936:62:11::1;::::0;-1:-1:-1;10936:7:11;10953:8;10963:9;10974:12;10988:9;10936:16:::1;:62::i;:::-;11048:10;11044:457;;;11074:37;:7;11091:8:::0;11101:9;11074:16:::1;:37::i;:::-;;11044:457;;;11194:16;11212:17:::0;11234:14:::1;:12;:14::i;:::-;11250:15;:13;:15::i;:::-;11280:83;::::0;-1:-1:-1;;;11280:83:11;;11193:73;;-1:-1:-1;11193:73:11;-1:-1:-1;11308:10:11::1;::::0;11280:56:::1;::::0;:83:::1;::::0;11337:8;;11347:9;;11358:4;;;;11280:83:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11397:38;11426:8;11415;:19;;;;:::i;11397:38::-;11449:41;11468:21;11480:9:::0;11468;:21:::1;:::i;11449:41::-;11179:322;;11044:457;11516:74;::::0;;9121:25:41;;;9177:2;9162:18;;9155:34;;;9205:18;;;9198:34;;;11548:6:11;;-1:-1:-1;;;;;11516:74:11;::::1;::::0;11525:10:::1;::::0;11516:74:::1;::::0;9109:2:41;9094:18;11516:74:11::1;;;;;;;-1:-1:-1::0;;3156:1:11;3147:10;;-1:-1:-1;10037:1560:11;;;-1:-1:-1;;;;;;;;10037:1560:11:o;5544:504::-;5616:20;5674;;;:12;:20;;;;;5708:17;;-1:-1:-1;;;5708:17:11;;;;5704:55;;5739:20;;-1:-1:-1;;;5739:20:11;;;;;;;;;;;5704:55;642:4:40;;5831:12:11;;5770:33;;-1:-1:-1;5831:12:11;-1:-1:-1;;;5831:12:11;;;;;;5857:24;;;-1:-1:-1;5853:54:11;;;5899:8;5883:24;;5853:54;5953:33;;-1:-1:-1;;;;5953:33:11;-1:-1:-1;;;5953:33:11;;;;;;;6014:27;;6034:6;;6014:27;;-1:-1:-1;;6014:27:11;5638:410;;5544:504;;;:::o;212:136:29:-;265:9;-1:-1:-1;;;;;294:22:29;;;286:31;;;;;;-1:-1:-1;339:1:29;212:136::o;4915:356:28:-;5098:17;;;;5161:20;;5025:16;;;;-1:-1:-1;;;;;5090:26:28;;;;;;5138:44;;5153:29;5138:12;:44;:::i;:::-;5137:52;;;;:::i;:::-;5126:63;;5261:3;5235:7;:21;;;-1:-1:-1;;;;;5227:30:28;5212:12;:45;;;;:::i;:::-;5211:53;;;;:::i;:::-;5199:65;;5066:205;4915:356;;;;;:::o;4193:698:27:-;4453:19;4484:14;4501:192;4534:1;4549:16;4579:17;4610;4641:6;4661:5;4680:3;4501:19;:192::i;:::-;4484:209;-1:-1:-1;4703:16:27;4722:36;4484:209;4740:17;4722;:36::i;:::-;4703:55;-1:-1:-1;4768:16:27;4787:48;:18;4817:17;4787:29;:48::i;:::-;4768:67;-1:-1:-1;4860:24:27;:13;;;;4874:9;4860:13;:24::i;:::-;4845:39;4193:698;-1:-1:-1;;;;;;;;;;;4193:698:27:o;753:268:26:-;881:13;;877:62;;919:20;:8;:18;:20::i;:::-;896:43;;:6;;:19;;:43;;;;-1:-1:-1;;;;;896:43:26;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;896:43:26;;;;;-1:-1:-1;;;;;896:43:26;;;;;;877:62;953:14;;949:65;;993:21;:9;:19;:21::i;:::-;969:45;;;;:20;;:45;;;;-1:-1:-1;;;969:45:26;;-1:-1:-1;;;;;969:45:26;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;969:45:26;;;;;-1:-1:-1;;;;;969:45:26;;;;;;949:65;753:268;;;:::o;3618:322:11:-;3749:64;;3807:4;3749:64;;;7864:51:41;3664:7:11;;;;;;-1:-1:-1;;;;;3719:5:11;:16;;-1:-1:-1;;;3772:25:11;7837:18:41;;3749:64:11;;;;-1:-1:-1;;3749:64:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3749:64:11;-1:-1:-1;;;;;;3749:64:11;;;;;;;;;;3719:104;;;;3749:64;3719:104;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3683:140;;;;3838:7;3837:8;:29;;;;3849:4;:11;3864:2;3849:17;;3837:29;3833:56;;;3875:14;;-1:-1:-1;;;3875:14:11;;;;;;;;;;;3833:56;3917:4;3906:27;;;;;;;;;;;;:::i;:::-;3899:34;;;;3618:322;:::o;4000:324::-;4133:64;;4191:4;4133:64;;;7864:51:41;4047:7:11;;;;;;-1:-1:-1;;;;;4102:6:11;:17;;-1:-1:-1;;;4156:25:11;7837:18:41;;4133:64:11;7819:102:41;4404:211:11;4477:19;4499:14;:12;:14::i;:::-;4477:36;;4541:13;4527:11;:27;4523:85;;;4563:45;;-1:-1:-1;;;4563:45:11;;;;;13560:25:41;;;13601:18;;;13594:34;;;13533:18;;4563:45:11;13515:119:41;4523:85:11;4467:148;4404:211;:::o;4695:220::-;4770:20;4793:15;:13;:15::i;:::-;4770:38;;4837:14;4822:12;:29;4818:90;;;4860:48;;-1:-1:-1;;;4860:48:11;;;;;13560:25:41;;;13601:18;;;13594:34;;;13533:18;;4860:48:11;13515:119:41;4095:388:28;4280:31;4287:7;4296:14;4280:6;:31::i;:::-;4345:20;:8;:18;:20::i;:::-;4321:44;;:7;;:20;;:44;;;;-1:-1:-1;;;;;4321:44:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;4321:44:28;;;;;-1:-1:-1;;;;;4321:44:28;;;;;;4400:21;:9;:19;:21::i;:::-;4375:46;;;;:21;;:46;;;;-1:-1:-1;;;4375:46:28;;-1:-1:-1;;;;;4375:46:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;4375:46:28;;;;;-1:-1:-1;;;;;4375:46:28;;;;;;4452:24;:12;:22;:24::i;:::-;4431:17;;;:45;;:17;;:45;;;;-1:-1:-1;;;;;4431:45:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;4431:45:28;;;;;-1:-1:-1;;;;;4431:45:28;;;;;;4095:388;;;;;:::o;1434:358:26:-;1627:10;1579:19;1619;;;;;;;;;;1652:13;;1648:62;;1690:20;:8;:18;:20::i;:::-;1667:43;;:6;;:19;;:43;;;;-1:-1:-1;;;;;1667:43:26;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1667:43:26;;;;;-1:-1:-1;;;;;1667:43:26;;;;;;1648:62;1724:14;;1720:65;;1764:21;:9;:19;:21::i;:::-;1740:45;;;;:20;;:45;;;;-1:-1:-1;;;1740:45:26;;-1:-1:-1;;;;;1740:45:26;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1740:45:26;;;;;-1:-1:-1;;;;;1740:45:26;;;;;;1720:65;1434:358;;;;;:::o;383:367:30:-;570:58;;;-1:-1:-1;;;;;8498:32:41;;;570:58:30;;;8480:51:41;8547:18;;;;8540:34;;;570:58:30;;;;;;;;;;8453:18:41;;;;570:58:30;;;;;;;-1:-1:-1;;;;;570:58:30;-1:-1:-1;;;570:58:30;;;537:101;;-1:-1:-1;;;;537:19:30;;;;:101;;570:58;537:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:143;;;;656:7;:69;;;;-1:-1:-1;668:17:30;;:22;;:56;;;705:10;694:30;;;;;;;;;;;;:::i;:::-;648:95;;;;-1:-1:-1;;;648:95:30;;10321:2:41;648:95:30;;;10303:21:41;10360:2;10340:18;;;10333:30;-1:-1:-1;;;10379:18:41;;;10372:43;10432:18;;648:95:30;10293:163:41;648:95:30;485:265;;383:367;;;:::o;2388:1060:27:-;2651:26;;2708:36;:6;2726:17;2708;:36::i;:::-;2689:55;-1:-1:-1;2754:15:27;2772:46;:17;2801:16;2772:28;:46::i;:::-;2754:64;-1:-1:-1;2861:23:27;2887:21;-1:-1:-1;;;2754:64:27;2887:11;:21::i;:::-;2861:47;-1:-1:-1;2922:8:27;;2918:524;;2946:13;2962:37;2988:5;2995:3;2962:25;:37::i;:::-;2946:53;;3013:10;3026:32;:16;:30;;;:32::i;:::-;3013:45;-1:-1:-1;3072:12:27;3087:15;:7;;;;3095:6;3087:7;:15::i;:::-;3072:30;;3116:16;3135:51;3169:16;3135:29;3149:14;:5;:12;;;:14::i;:::-;3135:13;;;;;;:29::i;:::-;:33;;;;:51::i;:::-;3116:70;-1:-1:-1;3221:41:27;:22;;;;3244:17;3221:22;:41::i;:::-;3200:62;;2932:341;;;;2918:524;;;3314:117;3400:17;3315:53;3351:16;3315:31;:13;;;;3329:16;3315:13;:31::i;:53::-;3314:68;;;;:117::i;2918:524::-;2679:769;;;2388:1060;;;;;;;;;:::o;3233:390:28:-;3420:31;3427:7;3436:14;3420:6;:31::i;:::-;3485:20;:8;:18;:20::i;:::-;3461:44;;:7;;:20;;:44;;;;-1:-1:-1;;;;;3461:44:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3461:44:28;;;;;-1:-1:-1;;;;;3461:44:28;;;;;;3540:21;:9;:19;:21::i;:::-;3515:46;;;;:21;;:46;;;;-1:-1:-1;;;3515:46:28;;-1:-1:-1;;;;;3515:46:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3515:46:28;;;;;-1:-1:-1;;;;;3515:46:28;;;;;;3592:24;:12;:22;:24::i;:::-;3571:17;;;:45;;:17;;:45;;;;-1:-1:-1;;;;;3571:45:28;;:::i;2258:507::-;2438:31;2445:7;2454:14;2438:6;:31::i;:::-;2483:14;2479:280;;;2537:19;:7;:17;:19::i;:::-;2513:43;;:7;;:20;;:43;;;;-1:-1:-1;;;;;2513:43:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2513:43:28;;;;;-1:-1:-1;;;;;2513:43:28;;;;;;2595:20;:8;:18;:20::i;:::-;2570:45;;;;:21;;:45;;;;-1:-1:-1;;;2570:45:28;;-1:-1:-1;;;;;2570:45:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2570:45:28;;;;;-1:-1:-1;;;;;2570:45:28;;;;;;2479:280;;;2670:20;:8;:18;:20::i;:::-;2646:44;;:7;;:20;;:44;;;;-1:-1:-1;;;;;2646:44:28;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2646:44:28;;;;;-1:-1:-1;;;;;2646:44:28;;;;;;2729:19;:7;:17;:19::i;:::-;2704:44;;;;:21;;:44;;;;-1:-1:-1;;;2704:44:28;;-1:-1:-1;;;;;2704:44:28;;:::i;1878:178:31:-;1952:8;;1994:18;2006:6;426:4;1994:18;:::i;:::-;1972:40;-1:-1:-1;2026:23:31;:5;1972:40;2026:10;:23::i;:::-;2022:27;1878:178;-1:-1:-1;;;;1878:178:31:o;4224:244:24:-;4280:6;4338:13;;;;:9;;;;:13;-1:-1:-1;;;;;;4373:19:24;;;;;:42;;-1:-1:-1;;;;;;4396:19:24;;;4373:42;4365:51;;;;;;4444:6;-1:-1:-1;4224:244:24;;;;;:::o;1283:532:28:-;1395:18;;;;1359:16;;1378:35;;-1:-1:-1;;;1395:18:28;;;;1378:14;:35;:::i;:::-;1359:54;-1:-1:-1;1458:14:28;;;;1454:355;;1547:16;;1516:19;;;:60;;1539:37;;;;-1:-1:-1;;;;;1547:16:28;;;1539:37;;1516:60;;;;;;1594:20;;;:62;;-1:-1:-1;;;1626:17:28;;;;;;1618:38;;1594:62;;;-1:-1:-1;1709:13:28;;;;1674:23;;;;:61;;1709:13;;;1701:34;;;1674:61;;;;;;-1:-1:-1;;;;1763:35:28;;;;;;;;;;;1283:532::o;1003:246:27:-;1089:10;1111:17;1131:20;:13;:3;:11;:13::i;:::-;:18;;;:20::i;:::-;1111:40;;1161:15;1179:23;:5;:21;:23::i;:::-;1161:41;-1:-1:-1;1218:24:27;:12;;;;1231:10;1218:12;:24::i;:::-;1212:30;1003:246;-1:-1:-1;;;;;1003:246:27:o;2781:478:25:-;2837:6;-1:-1:-1;;;2859:12:25;;;;;;;:22;;;2880:1;2875;:6;;;;2859:22;2855:56;;;2890:21;;-1:-1:-1;;;2890:21:25;;9416:2:41;9405:22;;;2890:21:25;;;9387:41:41;9360:18;;2890:21:25;9342:92:41;2855:56:25;2480:18;3008:14;;;;;;;;:31;;-1:-1:-1;2413:17:25;3026:13;;;;;;3008:31;3004:249;;;3062:10;3070:1;3062:7;:10::i;3004:249::-;2413:17;3093:12;;;;;3089:164;;;3128:7;3133:1;3128:4;:7::i;3089:164::-;3166:19;3189:20;3194:14;-1:-1:-1;;;3206:1:25;3194:11;:14::i;:::-;3189:4;:20::i;:::-;3188:21;;;:::i;3089:164::-;2781:478;;;:::o;1121:346::-;1170:6;;1199:11;:5;;;;745:19;1199:5;:11::i;:::-;1188:22;;1220:8;1231:43;1243:30;1255:17;1264:7;:1;:5;;;:7::i;:::-;582:18;;1255:8;:17::i;:::-;-1:-1:-1;;;469:19:25;1243:11;:30::i;:::-;-1:-1:-1;;;469:19:25;1231:11;:43::i;:::-;1220:54;;1284:10;1297:22;1314:1;1317;1297:16;:22::i;:::-;1284:35;;1337:1;1333;:5;;;1329:51;;;1360:9;:3;:7;;;:9::i;:::-;1354:15;;1329:51;1389:13;1405:32;1420:16;-1:-1:-1;;;1432:3:25;1420:11;:16::i;:::-;-1:-1:-1;;;2061:18:25;4711:252:24;4767:6;4826:13;:9;;;:13;;;;;4844:2;4825:21;-1:-1:-1;;;;;;4868:19:24;;;;;:42;;-1:-1:-1;;;;;;4891:19:24;;;4860:51;;;;;3751:244;3807:6;3865:13;:9;;;:13;;;;;-1:-1:-1;;;;;;3900:19:24;;;;;:42;;-1:-1:-1;;;;;;3923:19:24;;;3892:51;;;;;2455:180:31;2530:9;;2573:18;2585:6;426:4;2573:18;:::i;:::-;2551:40;-1:-1:-1;2605:23:31;:10;;;;2551:40;2605:10;:23::i;9534:261:24:-;9593:6;9643;9635:15;;;;;;9664:14;9681:11;9687:1;9690;9681:5;:11::i;:::-;9664:28;-1:-1:-1;;;;;;;;;;;9714:28:24;;;;9706:37;;;;;3496:95:31;3547:6;3572:12;:1;326:8;3572:6;:12::i;15772:181:24:-;15819:6;15874:1;15869;:6;;;;15861:15;;;;;;15904:31;15932:2;15925:1;15918:9;;15910:24;;15904:5;:31::i;2993:119:31:-;3057:6;3082:23;:6;500:3;3082:11;:23::i;3383:304:25:-;3433:6;;3462:15;:5;;;;-1:-1:-1;;;3462:5:25;:15::i;:::-;3451:26;-1:-1:-1;3487:8:25;3498;:5;;;;3451:26;3498:5;:8::i;:::-;3487:19;-1:-1:-1;3516:13:25;3532:125;3551:96;3564:82;3601:43;2295:18;3601:29;3614:15;-1:-1:-1;;3487:19:25;3614:12;:15::i;:::-;3601:8;:5;;;;3607:1;3601:5;:8::i;:43::-;3565:29;2119:18;3565:15;-1:-1:-1;;3578:1:25;3565:12;:15::i;:29::-;3564:35;;;;:82::i;:::-;2236:19;;3551:12;:96::i;:::-;3532:5;;;;;;:125::i;4307:358::-;4354:6;;4383:33;:26;:21;4395:8;:5;;;;4401:1;4395:5;:8::i;4383:21::-;:24;;;:26::i;:33::-;4372:44;-1:-1:-1;4426:12:25;4441:19;4050:17;4441:9;-1:-1:-1;;4372:44:25;4441:6;:9::i;:19::-;4426:34;-1:-1:-1;4470:16:25;4489:21;3939:20;4489:11;3995:19;4498:1;4489:8;:11::i;:21::-;4470:40;-1:-1:-1;4520:18:25;4541:31;4101:19;4541:23;4554:9;4154:19;4561:1;4554:6;:9::i;:::-;4541:8;:5;;;;4547:1;4541:5;:8::i;:31::-;4520:52;-1:-1:-1;4582:13:25;4598:37;4608:26;:13;;;;4520:52;4608:13;:26::i;:::-;4598:9;;;;;;:37::i;:::-;4582:53;4307:358;-1:-1:-1;;;;;;;4307:358:25:o;7693:281:24:-;7749:6;7799:1;:6;;7804:1;7799:6;;7791:15;;;;;;7820:13;7856:1;7836:21;;7850:2;7844:1;7837:9;;:15;;7836:21;;;;;:::i;:::-;;;-1:-1:-1;;;;;;;7879:19:24;;;;;:42;;-1:-1:-1;;;;;;7902:19:24;;;7871:51;;;;;10295:163;10341:6;10391:14;;;;-1:-1:-1;;;;;;10391:14:24;;10383:23;;;;;;10431:1;10427;:5;;;:14;;10440:1;10427:14;;;-1:-1:-1;10435:2:24;;;10295:163::o;1708:313:25:-;1777:6;;1810:45;1816:38;1825:28;1831:21;1840:11;:5;;;;856:19;1840:5;:11::i;:::-;-1:-1:-1;;800:20:25;1831:8;:21::i;:::-;1825:5;;;;;;:28::i;:::-;745:19;;1816:8;:38::i;1810:45::-;1795:60;-1:-1:-1;1865:12:25;1880:32;1889:22;1895:15;-1:-1:-1;;1795:60:25;1895:8;:15::i;1889:22::-;636:18;;1880:8;:32::i;:::-;1865:47;-1:-1:-1;1922:13:25;1938:53;1950:40;1956:33;1966:22;1967:14;:8;:5;;;;1973:1;1967:5;:8::i;:::-;:12;;;:14::i;:::-;1966:20;;;:22::i;:::-;1956:9;;;;;;:33::i;:::-;1950:5;;;;;;:40::i;:::-;-1:-1:-1;;;469:19:25;1938:11;:53::i;9969:151:24:-;10015:6;10065:14;;;;-1:-1:-1;;;;;;10065:14:24;;10057:23;;;;;6862:555;6920:7;6967:6;6963:20;;-1:-1:-1;6982:1:24;6975:8;;6963:20;7011:1;7006;:6;;;;6998:15;;;;;;7050:9;;;;-1:-1:-1;;;;;7064:38:24;;7042:61;;7108:2;7041:69;;7164:3;7159:8;;;7137:31;-1:-1:-1;;;;;7191:56:24;;;7183:65;;;;;;7269:2;7262:9;7300:71;;7294:77;;;7286:86;;;;;;7393:7;;6862:555;-1:-1:-1;;;6862:555:24:o;25686:1789::-;25745:7;25796:6;25788:15;;;;;;25818:14;-1:-1:-1;;;;;25851:1:24;:55;25847:1508;;25929:1;25923:2;25918:1;:7;;25917:13;;;;;:::i;:::-;;25908:22;;25847:1508;;;25981:3;26015:8;;;26051:11;26045:17;;26041:104;;26093:2;26117:9;;;;26086;26041:104;26172:7;26166:2;:13;26162:100;;26210:2;26234:9;;;;26203;26162:100;26289:5;26283:2;:11;26279:96;;26325:1;26348:8;;;;26318;26279:96;26402:4;26396:2;:10;26392:95;;26437:1;26460:8;;;;26430;26392:95;26514:3;26508:2;:9;26504:94;;26548:1;26571:8;;;;26541;26504:94;26625:3;26619:2;:9;26615:23;;26637:1;26630:8;;;;26615:23;26738:3;26732;:9;26725:1;26721;:5;26720:22;;26746:1;26719:28;26710:3;26704;:9;26698:1;:16;;26697:51;;;;;:::i;:::-;;26688:60;;-1:-1:-1;;;;;26774:6:24;:44;;26766:53;;;;;;26866:3;26861:8;;;26851:19;;-1:-1:-1;;;;;26911:38:24;;26901:49;;26987:3;26982:8;;;27026:2;27021:7;;;27051;;;27047:20;;;27066:1;27060:7;;;;27047:20;27159:3;27153:9;;;;27085:8;;27184:7;;;27180:20;;;27199:1;27193:7;;;;27180:20;27218:8;;;27301:3;27295:9;;;27289:15;;27282:23;;;;:::i;:::-;27339:1;27334:2;:6;;;;;:::i;:::-;;27324:16;;;;25949:1406;;;;;;25847:1508;-1:-1:-1;;;;;27377:6:24;:44;;27369:53;;;;;27691:1423;27739:7;27786:6;27782:1316;;-1:-1:-1;27801:1:24;;27691:1423;-1:-1:-1;27691:1423:24:o;27782:1316::-;27852:1;27883;-1:-1:-1;;;27906:41:24;;27902:128;;27978:3;27971:10;;;;;28009:2;28003:8;27902:128;-1:-1:-1;;;28051:2:24;:25;28047:111;;28107:2;28100:9;;;;;28137:2;28131:8;28047:111;28185:11;28179:2;:17;28175:103;;28227:2;28220:9;;;;;28257:2;28251:8;28175:103;28305:7;28299:2;:13;28295:98;;28343:2;28336:9;;;;;28373:1;28367:7;28295:98;28420:5;28414:2;:11;28410:95;;28456:1;28449:8;;;;;28485:1;28479:7;28410:95;28532:4;28526:2;:10;28522:94;;28567:1;28560:8;;;;;28596:1;28590:7;28522:94;28643:3;28637:2;:9;28633:63;;28676:1;28670:7;28633:63;28732:1;28726;28722;:5;;;;;:::i;:::-;;28718:1;:9;28717:16;;28713:20;;28770:1;28764;28760;:5;;;;;:::i;:::-;;28756:1;:9;28755:16;;28751:20;;28808:1;28802;28798;:5;;;;;:::i;:::-;;28794:1;:9;28793:16;;28789:20;;28846:1;28840;28836;:5;;;;;:::i;:::-;;28832:1;:9;28831:16;;28827:20;;28884:1;28878;28874;:5;;;;;:::i;:::-;;28870:1;:9;28869:16;;28865:20;;28922:1;28916;28912;:5;;;;;:::i;:::-;;28908:1;:9;28907:16;;28903:20;;28960:1;28954;28950;:5;;;;;:::i;:::-;;28946:1;:9;28945:16;;28941:20;;29016:10;29033:1;29029;:5;;;;;:::i;:::-;;29016:18;;29071:2;29067:1;:6;:15;;29080:2;29067:15;;;-1:-1:-1;29076:1:24;29052:31;-1:-1:-1;;;27691:1423:24:o;17564:227::-;17609:6;17663:1;17659;:5;;;17651:14;;;;;;17769:3;17717:8;17723:1;17717:5;:8::i;:::-;17710:16;;17730:34;17702:62;17701:71;;17680:94;;17564:227;;;:::o;25054:310::-;25100:6;-1:-1:-1;;;25150:1:24;:24;;;25142:33;;;;;;-1:-1:-1;;25206:1:24;:25;;;25202:39;;;-1:-1:-1;25240:1:24;;25054:310;-1:-1:-1;25054:310:24:o;25202:39::-;25276:71;25342:3;25297:1;25290:9;;25302:35;25290:47;25289:56;;25276:5;:71::i;16144:1228::-;16192:6;16246:1;16242;:5;;;16234:14;;;;;;16263:10;16291:13;;;;-1:-1:-1;;;16322:25:24;;16318:100;;16374:2;16394:9;;;;16367;16318:100;16441:11;16435:2;:17;16431:92;;16479:2;16499:9;;;;16472;16431:92;16546:7;16540:2;:13;16536:88;;16580:2;16600:9;;;;16573;16536:88;16647:5;16641:2;:11;16637:84;;16679:1;16698:8;;;;16672;16637:84;16744:4;16738:2;:10;16734:83;;16775:1;16794:8;;;;16768;16734:83;16840:3;16834:2;:9;16830:82;;16870:1;16889:8;;;;16863;16830:82;16935:3;16929:2;:9;16925:23;;16947:1;16940:8;;;;16925:23;-1:-1:-1;;17011:8:24;;17024:2;17010:16;17061:9;;;;17083:3;:9;;;17053:40;-1:-1:-1;;;17107:213:24;17151:1;17145:3;:7;17107:213;;;17183:8;;;17227:3;17221:9;;;17290:15;;;17280:25;;;;;17255:3;:7;17248:14;;17162:1;17154:9;17107:213;;;-1:-1:-1;17348:6:24;;16144:1228;-1:-1:-1;;;;;16144:1228:24:o;17983:6878::-;18031:6;-1:-1:-1;;;18081:1:24;:24;;;18073:33;;;;;;-1:-1:-1;;18137:1:24;:25;;;18133:39;;;-1:-1:-1;18171:1:24;;17983:6878;-1:-1:-1;17983:6878:24:o;18133:39::-;-1:-1:-1;;;18200:14:24;-1:-1:-1;;;18270:22:24;;:26;;;18266:94;;;18317:35;18308:44;18357:3;18307:53;18266:94;18403:1;18378;18382:18;18378:22;:26;;;18374:94;;;18425:35;18416:44;18465:3;18415:53;18374:94;18511:1;18486;18490:18;18486:22;:26;;;18482:94;;;18533:35;18524:44;18573:3;18523:53;18482:94;18619:1;18594;18598:18;18594:22;:26;;;18590:94;;;18641:35;18632:44;18681:3;18631:53;18590:94;18726:1;18702;18706:17;18702:21;:25;;;18698:93;;;18748:35;18739:44;18788:3;18738:53;18698:93;18833:1;18809;18813:17;18809:21;:25;;;18805:93;;;18855:35;18846:44;18895:3;18845:53;18805:93;18940:1;18916;18920:17;18916:21;:25;;;18912:93;;;18962:35;18953:44;19002:3;18952:53;18912:93;19047:1;19023;19027:17;19023:21;:25;;;19019:93;;;19069:35;19060:44;19109:3;19059:53;19019:93;19153:1;19130;19134:16;19130:20;:24;;;19126:92;;;19175:35;19166:44;19215:3;19165:53;19126:92;19259:1;19236;19240:16;19236:20;:24;;;19232:92;;;19281:35;19272:44;19321:3;19271:53;19232:92;19365:1;19342;19346:16;19342:20;:24;;;19338:92;;;19387:35;19378:44;19427:3;19377:53;19338:92;19471:1;19448;19452:16;19448:20;:24;;;19444:92;;;19493:35;19484:44;19533:3;19483:53;19444:92;19576:1;19554;19558:15;19554:19;:23;;;19550:91;;;19598:35;19589:44;19638:3;19588:53;19550:91;19681:1;19659;19663:15;19659:19;:23;;;19655:91;;;19703:35;19694:44;19743:3;19693:53;19655:91;19786:1;19764;19768:15;19764:19;:23;;;19760:91;;;19808:35;19799:44;19848:3;19798:53;19760:91;19891:1;19869;19873:15;19869:19;:23;;;19865:91;;;19913:35;19904:44;19953:3;19903:53;19865:91;19995:1;19974;19978:14;19974:18;:22;;;19970:90;;;20017:35;20008:44;20057:3;20007:53;19970:90;20099:1;20078;20082:14;20078:18;:22;;;20074:90;;;20121:35;20112:44;20161:3;20111:53;20074:90;20203:1;20182;20186:14;20182:18;:22;;;20178:90;;;20225:35;20216:44;20265:3;20215:53;20178:90;20307:1;20286;20290:14;20286:18;:22;;;20282:90;;;20329:35;20320:44;20369:3;20319:53;20282:90;20410:1;20390;20394:13;20390:17;:21;;;20386:89;;;20432:35;20423:44;20472:3;20422:53;20386:89;20513:1;20493;20497:13;20493:17;:21;;;20489:89;;;20535:35;20526:44;20575:3;20525:53;20489:89;20616:1;20596;20600:13;20596:17;:21;;;20592:89;;;20638:35;20629:44;20678:3;20628:53;20592:89;20719:1;20699;20703:13;20699:17;:21;;;20695:89;;;20741:35;20732:44;20781:3;20731:53;20695:89;20821:1;20802;20806:12;20802:16;:20;;;20798:88;;;20843:35;20834:44;20883:3;20833:53;20798:88;20923:1;20904;20908:12;20904:16;:20;;;20900:88;;;20945:35;20936:44;20985:3;20935:53;20900:88;21025:1;21006;21010:12;21006:16;:20;;;21002:88;;;21047:35;21038:44;21087:3;21037:53;21002:88;21127:1;21108;21112:12;21108:16;:20;;;21104:88;;;21149:35;21140:44;21189:3;21139:53;21104:88;21228:1;21210;21214:11;21210:15;:19;;;21206:87;;;21250:35;21241:44;21290:3;21240:53;21206:87;21329:1;21311;21315:11;21311:15;:19;;;21307:87;;;21351:35;21342:44;21391:3;21341:53;21307:87;21430:1;21412;21416:11;21412:15;:19;;;21408:87;;;21452:35;21443:44;21492:3;21442:53;21408:87;21531:1;21513;21517:11;21513:15;:19;;;21509:87;;;21553:35;21544:44;21593:3;21543:53;21509:87;21631:1;21614;21618:10;21614:14;:18;;;21610:86;;;21653:35;21644:44;21693:3;21643:53;21610:86;21731:1;21714;21718:10;21714:14;:18;;;21710:86;;;21753:35;21744:44;21793:3;21743:53;21710:86;21831:1;21814;21818:10;21814:14;:18;;;21810:86;;;21853:35;21844:44;21893:3;21843:53;21810:86;21931:1;21914;21918:10;21914:14;:18;;;21910:86;;;21953:35;21944:44;21993:3;21943:53;21910:86;22030:1;22014;22018:9;22014:13;:17;;;22010:85;;;22052:35;22043:44;22092:3;22042:53;22010:85;22129:1;22113;22117:9;22113:13;:17;;;22109:85;;;22151:35;22142:44;22191:3;22141:53;22109:85;22228:1;22212;22216:9;22212:13;:17;;;22208:85;;;22250:35;22241:44;22290:3;22240:53;22208:85;22327:1;22311;22315:9;22311:13;:17;;;22307:85;;;22349:35;22340:44;22389:3;22339:53;22307:85;22425:1;22410;22414:8;22410:12;:16;;;22406:84;;;22447:35;22438:44;22487:3;22437:53;22406:84;22523:1;22508;22512:8;22508:12;:16;;;22504:84;;;22545:35;22536:44;22585:3;22535:53;22504:84;22621:1;22606;22610:8;22606:12;:16;;;22602:84;;;22643:35;22634:44;22683:3;22633:53;22602:84;22719:1;22704;22708:8;22704:12;:16;;;22700:84;;;22741:35;22732:44;22781:3;22731:53;22700:84;22816:1;22802;22806:7;22802:11;:15;;;22798:83;;;22838:35;22829:44;22878:3;22828:53;22798:83;22913:1;22899;22903:7;22899:11;:15;;;22895:83;;;22935:35;22926:44;22975:3;22925:53;22895:83;23010:1;22996;23000:7;22996:11;:15;;;22992:83;;;23032:35;23023:44;23072:3;23022:53;22992:83;23107:1;23093;23097:7;23093:11;:15;;;23089:83;;;23129:35;23120:44;23169:3;23119:53;23089:83;23203:1;23190;23194:6;23190:10;:14;;;23186:82;;;23225:35;23216:44;23265:3;23215:53;23186:82;23299:1;23286;23290:6;23286:10;:14;;;23282:82;;;23321:35;23312:44;23361:3;23311:53;23282:82;23395:1;23382;23386:6;23382:10;:14;;;23378:82;;;23417:35;23408:44;23457:3;23407:53;23378:82;23491:1;23478;23482:6;23478:10;:14;;;23474:82;;;23513:35;23504:44;23553:3;23503:53;23474:82;23586:1;23574;23578:5;23574:9;:13;;;23570:81;;;23608:35;23599:44;23648:3;23598:53;23570:81;23681:1;23669;23673:5;23669:9;:13;;;23665:81;;;23703:35;23694:44;23743:3;23693:53;23665:81;23776:1;23764;23768:5;23764:9;:13;;;23760:81;;;23798:35;23789:44;23838:3;23788:53;23760:81;23871:1;23859;23863:5;23859:9;:13;;;23855:81;;;23893:35;23884:44;23933:3;23883:53;23855:81;23965:1;23954;23958:4;23954:8;:12;;;23950:80;;;23987:35;23978:44;24027:3;23977:53;23950:80;24059:1;24048;24052:4;24048:8;:12;;;24044:80;;;24081:35;24072:44;24121:3;24071:53;24044:80;24153:1;24142;24146:4;24142:8;:12;;;24138:80;;;24175:35;24166:44;24215:3;24165:53;24138:80;24247:1;24236;24240:4;24236:8;:12;;;24232:80;;;24269:35;24260:44;24309:3;24259:53;24232:80;24340:1;24330;24334:3;24330:7;:11;;;24326:79;;;24362:35;24353:44;24402:3;24352:53;24326:79;24433:1;24423;24427:3;24423:7;:11;;;24419:79;;;24455:35;24446:44;24495:3;24445:53;24419:79;24526:1;24516;24520:3;24516:7;:11;;;24512:79;;;24548:35;24539:44;24588:3;24538:53;24512:79;24619:1;24609;24613:3;24609:7;:11;;;24605:79;;;24641:35;24632:44;24681:3;24631:53;24605:79;24731:7;;;;24736:2;24731:7;24725:2;:14;24718:22;;24699:42;-1:-1:-1;;;;;24763:36:24;;;24755:45;;;;;14:173:41;82:20;;-1:-1:-1;;;;;131:31:41;;121:42;;111:2;;177:1;174;167:12;192:347;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:2;;325:1;322;315:12;274:2;-1:-1:-1;348:20:41;;391:18;380:30;;377:2;;;423:1;420;413:12;377:2;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:2;;;529:1;526;519:12;474:2;264:275;;;;;:::o;544:163::-;611:20;;671:10;660:22;;650:33;;640:2;;697:1;694;687:12;712:186;771:6;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;863:29;882:9;863:29;:::i;903:254::-;971:6;979;1032:2;1020:9;1011:7;1007:23;1003:32;1000:2;;;1048:1;1045;1038:12;1000:2;1071:29;1090:9;1071:29;:::i;:::-;1061:39;1147:2;1132:18;;;;1119:32;;-1:-1:-1;;;990:167:41:o;1162:1091::-;1286:6;1294;1302;1310;1318;1326;1334;1342;1350;1403:3;1391:9;1382:7;1378:23;1374:33;1371:2;;;1420:1;1417;1410:12;1371:2;1443:29;1462:9;1443:29;:::i;:::-;1433:39;;1519:2;1508:9;1504:18;1491:32;1481:42;;1573:2;1562:9;1558:18;1545:32;1586:28;1608:5;1586:28;:::i;:::-;1633:5;-1:-1:-1;1685:2:41;1670:18;;1657:32;;-1:-1:-1;1736:3:41;1721:19;;1708:33;;-1:-1:-1;1793:3:41;1778:19;;1765:33;1807:30;1765:33;1807:30;:::i;:::-;1856:7;-1:-1:-1;1915:3:41;1900:19;;1887:33;1929:30;1887:33;1929:30;:::i;:::-;1978:7;-1:-1:-1;2036:3:41;2021:19;;2008:33;2064:18;2053:30;;2050:2;;;2096:1;2093;2086:12;2050:2;2135:58;2185:7;2176:6;2165:9;2161:22;2135:58;:::i;:::-;2109:84;;2212:8;2202:18;;;2239:8;2229:18;;;1361:892;;;;;;;;;;;:::o;2258:322::-;2335:6;2343;2351;2404:2;2392:9;2383:7;2379:23;2375:32;2372:2;;;2420:1;2417;2410:12;2372:2;2443:29;2462:9;2443:29;:::i;:::-;2433:39;2519:2;2504:18;;2491:32;;-1:-1:-1;2570:2:41;2555:18;;;2542:32;;2362:218;-1:-1:-1;;;2362:218:41:o;2585:620::-;2682:6;2690;2698;2706;2714;2767:3;2755:9;2746:7;2742:23;2738:33;2735:2;;;2784:1;2781;2774:12;2735:2;2807:29;2826:9;2807:29;:::i;:::-;2797:39;;2883:2;2872:9;2868:18;2855:32;2845:42;;2934:2;2923:9;2919:18;2906:32;2896:42;;2989:2;2978:9;2974:18;2961:32;3016:18;3008:6;3005:30;3002:2;;;3048:1;3045;3038:12;3002:2;3087:58;3137:7;3128:6;3117:9;3113:22;3087:58;:::i;:::-;2725:480;;;;-1:-1:-1;2725:480:41;;-1:-1:-1;3164:8:41;;3061:84;2725:480;-1:-1:-1;;;2725:480:41:o;3210:245::-;3277:6;3330:2;3318:9;3309:7;3305:23;3301:32;3298:2;;;3346:1;3343;3336:12;3298:2;3378:9;3372:16;3397:28;3419:5;3397:28;:::i;3460:180::-;3519:6;3572:2;3560:9;3551:7;3547:23;3543:32;3540:2;;;3588:1;3585;3578:12;3540:2;-1:-1:-1;3611:23:41;;3530:110;-1:-1:-1;3530:110:41:o;3645:819::-;3757:6;3765;3773;3781;3789;3797;3805;3858:3;3846:9;3837:7;3833:23;3829:33;3826:2;;;3875:1;3872;3865:12;3826:2;3911:9;3898:23;3888:33;;3940:38;3974:2;3963:9;3959:18;3940:38;:::i;:::-;3930:48;;4025:2;4014:9;4010:18;3997:32;3987:42;;4076:2;4065:9;4061:18;4048:32;4038:42;;4130:3;4119:9;4115:19;4102:33;4144:28;4166:5;4144:28;:::i;:::-;4191:5;-1:-1:-1;4247:3:41;4232:19;;4219:33;4275:18;4264:30;;4261:2;;;4307:1;4304;4297:12;4261:2;4346:58;4396:7;4387:6;4376:9;4372:22;4346:58;:::i;:::-;3816:648;;;;-1:-1:-1;3816:648:41;;-1:-1:-1;3816:648:41;;;;4320:84;;-1:-1:-1;;;3816:648:41:o;4469:248::-;4537:6;4545;4598:2;4586:9;4577:7;4573:23;4569:32;4566:2;;;4614:1;4611;4604:12;4566:2;-1:-1:-1;;4637:23:41;;;4707:2;4692:18;;;4679:32;;-1:-1:-1;4556:161:41:o;4722:316::-;4799:6;4807;4815;4868:2;4856:9;4847:7;4843:23;4839:32;4836:2;;;4884:1;4881;4874:12;4836:2;-1:-1:-1;;4907:23:41;;;4977:2;4962:18;;4949:32;;-1:-1:-1;5028:2:41;5013:18;;;5000:32;;4826:212;-1:-1:-1;4826:212:41:o;5043:954::-;5164:6;5172;5180;5188;5196;5204;5212;5220;5273:3;5261:9;5252:7;5248:23;5244:33;5241:2;;;5290:1;5287;5280:12;5241:2;5329:9;5316:23;-1:-1:-1;;;;;5372:5:41;5368:46;5361:5;5358:57;5348:2;;5429:1;5426;5419:12;5348:2;5452:5;-1:-1:-1;5476:37:41;5509:2;5494:18;;5476:37;:::i;:::-;5466:47;;5532:37;5565:2;5554:9;5550:18;5532:37;:::i;:::-;5522:47;;5588:37;5621:2;5610:9;5606:18;5588:37;:::i;:::-;5578:47;;5672:3;5661:9;5657:19;5644:33;5634:43;;5724:3;5713:9;5709:19;5696:33;5686:43;;5780:3;5769:9;5765:19;5752:33;5808:18;5800:6;5797:30;5794:2;;;5840:1;5837;5830:12;5794:2;5879:58;5929:7;5920:6;5909:9;5905:22;5879:58;:::i;:::-;5231:766;;;;-1:-1:-1;5231:766:41;;-1:-1:-1;5231:766:41;;;;;;5956:8;-1:-1:-1;;;5231:766:41:o;6187:184::-;6257:6;6310:2;6298:9;6289:7;6285:23;6281:32;6278:2;;;6326:1;6323;6316:12;6278:2;-1:-1:-1;6349:16:41;;6268:103;-1:-1:-1;6268:103:41:o;6376:266::-;6464:6;6459:3;6452:19;6516:6;6509:5;6502:4;6497:3;6493:14;6480:43;-1:-1:-1;6568:1:41;6543:16;;;6561:4;6539:27;;;6532:38;;;;6624:2;6603:15;;;-1:-1:-1;;6599:29:41;6590:39;;;6586:50;;6442:200::o;7287:426::-;7416:3;7454:6;7448:13;7479:1;7489:129;7503:6;7500:1;7497:13;7489:129;;;7601:4;7585:14;;;7581:25;;7575:32;7562:11;;;7555:53;7518:12;7489:129;;;7636:6;7633:1;7630:13;7627:2;;;7671:1;7662:6;7657:3;7653:16;7646:27;7627:2;-1:-1:-1;7691:16:41;;;;;7424:289;-1:-1:-1;;7424:289:41:o;9720:394::-;9941:6;9930:9;9923:25;9984:6;9979:2;9968:9;9964:18;9957:34;10027:2;10022;10011:9;10007:18;10000:30;9904:4;10047:61;10104:2;10093:9;10089:18;10081:6;10073;10047:61;:::i;14749:253::-;14789:3;-1:-1:-1;;;;;14878:2:41;14875:1;14871:10;14908:2;14905:1;14901:10;14939:3;14935:2;14931:12;14926:3;14923:21;14920:2;;;14947:18;;:::i;:::-;14983:13;;14797:205;-1:-1:-1;;;;14797:205:41:o;15007:128::-;15047:3;15078:1;15074:6;15071:1;15068:13;15065:2;;;15084:18;;:::i;:::-;-1:-1:-1;15120:9:41;;15055:80::o;15140:217::-;15180:1;15206;15196:2;;15250:10;15245:3;15241:20;15238:1;15231:31;15285:4;15282:1;15275:15;15313:4;15310:1;15303:15;15196:2;-1:-1:-1;15342:9:41;;15186:171::o;15362:168::-;15402:7;15468:1;15464;15460:6;15456:14;15453:1;15450:21;15445:1;15438:9;15431:17;15427:45;15424:2;;;15475:18;;:::i;:::-;-1:-1:-1;15515:9:41;;15414:116::o;15535:246::-;15575:4;-1:-1:-1;;;;;15688:10:41;;;;15658;;15710:12;;;15707:2;;;15725:18;;:::i;:::-;15762:13;;15584:197;-1:-1:-1;;;15584:197:41:o;15786:125::-;15826:4;15854:1;15851;15848:8;15845:2;;;15859:18;;:::i;:::-;-1:-1:-1;15896:9:41;;15835:76::o;15916:221::-;15955:4;15984:10;16044;;;;16014;;16066:12;;;16063:2;;;16081:18;;:::i;16142:213::-;16177:3;16225:5;16221:2;16210:21;-1:-1:-1;;;;;16255:39:41;16246:7;16243:52;16240:2;;;16298:18;;:::i;:::-;16338:1;16334:15;;16185:170;-1:-1:-1;;16185:170:41:o;16360:127::-;16421:10;16416:3;16412:20;16409:1;16402:31;16452:4;16449:1;16442:15;16476:4;16473:1;16466:15;16492:127;16553:10;16548:3;16544:20;16541:1;16534:31;16584:4;16581:1;16574:15;16608:4;16605:1;16598:15;16624:127;16685:10;16680:3;16676:20;16673:1;16666:31;16716:4;16713:1;16706:15;16740:4;16737:1;16730:15;16756:118;16842:5;16835:13;16828:21;16821:5;16818:32;16808:2;;16864:1;16861;16854:12;16808:2;16798:76;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "8599": [
        {
          "start": 632,
          "length": 32
        },
        {
          "start": 3455,
          "length": 32
        },
        {
          "start": 4137,
          "length": 32
        }
      ],
      "8603": [
        {
          "start": 1042,
          "length": 32
        },
        {
          "start": 1831,
          "length": 32
        },
        {
          "start": 3179,
          "length": 32
        },
        {
          "start": 4761,
          "length": 32
        },
        {
          "start": 6412,
          "length": 32
        }
      ],
      "8607": [
        {
          "start": 965,
          "length": 32
        },
        {
          "start": 1864,
          "length": 32
        },
        {
          "start": 3213,
          "length": 32
        },
        {
          "start": 4794,
          "length": 32
        },
        {
          "start": 6445,
          "length": 32
        }
      ],
      "8615": [
        {
          "start": 1271,
          "length": 32
        },
        {
          "start": 2869,
          "length": 32
        },
        {
          "start": 5074,
          "length": 32
        },
        {
          "start": 5241,
          "length": 32
        },
        {
          "start": 6983,
          "length": 32
        },
        {
          "start": 8529,
          "length": 32
        }
      ],
      "8619": [
        {
          "start": 671,
          "length": 32
        },
        {
          "start": 2927,
          "length": 32
        },
        {
          "start": 5402,
          "length": 32
        },
        {
          "start": 5569,
          "length": 32
        },
        {
          "start": 6706,
          "length": 32
        },
        {
          "start": 8804,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BUFFER()": "8fbc3ecd",
    "MIN_LIQUIDITY()": "21b77d63",
    "PRECISION()": "aaf5eb68",
    "advanceTime(uint256)": "07e32f0a",
    "allocate(bytes32,address,uint256,uint256,bool,bytes)": "d2957b8f",
    "calibrations(bytes32)": "23c5b952",
    "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": "be00763a",
    "deposit(address,uint256,uint256,bytes)": "9e48ff5a",
    "factory()": "c45a0155",
    "invariantOf(bytes32)": "546fecae",
    "liquidity(address,bytes32)": "6b35bb6b",
    "margins(address)": "38820465",
    "remove(bytes32,uint256)": "9f8cfade",
    "reserves(bytes32)": "00bbf1e4",
    "risky()": "c08165d4",
    "scaleFactorRisky()": "55ebb825",
    "scaleFactorStable()": "4dd0d056",
    "setReserves(bytes32,uint256,uint256)": "140240db",
    "stable()": "22be3de1",
    "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": "ca28fcd6",
    "time()": "16ada547",
    "updateLastTimestamp(bytes32)": "11f99086",
    "updateReserves(bytes32,uint256)": "c0ed31ba",
    "withdraw(address,uint256,uint256)": "b5c5f672"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_risky\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_scaleFactorRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scaleFactorStable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_min_liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"CalibrationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaInError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaOutError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GammaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"nextInvariant\",\"type\":\"int128\"}],\"name\":\"InvariantError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"value\",\"type\":\"int128\"}],\"name\":\"InverseOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockedError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MinLiquidityError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDuplicateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolExpiredError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"RiskyBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RiskyPerLpError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SigmaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"StableBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"StrikeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDeltasError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidityError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Allocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Remove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"riskyForStable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deltaIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deltaOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"UpdateLastTimestamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"by\",\"type\":\"uint256\"}],\"name\":\"advanceTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fromMargin\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"calibrations\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"riskyPerLp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"invariantOf\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"margins\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balanceRisky\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"balanceStable\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserveRisky\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserveStable\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeStable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"risky\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorRisky\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorStable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"reserveRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveStable\",\"type\":\"uint256\"}],\"name\":\"setReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"riskyForStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deltaIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deltaOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fromMargin\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"toMargin\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"updateLastTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"reserveRisky\",\"type\":\"uint256\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvariantError(int128,int128)\":[{\"details\":\"Most important check as it verifies the validity of a desired swap\",\"params\":{\"invariant\":\"Pre-swap invariant updated with new tau\",\"nextInvariant\":\"Post-swap invariant after the swap amounts are applied to reserves\"}}],\"RiskyBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual risky balance\",\"expected\":\"Expected risky balance\"}}],\"StableBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual stable balance\",\"expected\":\"Expected stable balance\"}}]},\"kind\":\"dev\",\"methods\":{\"allocate(bytes32,address,uint256,uint256,bool,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the allocateCallback function\",\"delRisky\":\"Amount of risky tokens to add\",\"delStable\":\"Amount of stable tokens to add\",\"fromMargin\":\"Whether the `msg.sender` pays with their margin balance, or must send tokens\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\",\"recipient\":\"Address to give the allocated liquidity to\"},\"returns\":{\"delLiquidity\":\"Amount of liquidity given to `recipient`\"}},\"create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the createCallback function\",\"delLiquidity\":\"Amount of liquidity units to allocate to the curve, wei value with 18 decimals of precision\",\"gamma\":\"Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)\",\"maturity\":\"Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]\",\"riskyPerLp\":\"Risky reserve per liq. with risky decimals, = 1 - N(d1), d1 = (ln(S/K)+(r*\\u03c3^2/2))/\\u03c3\\u221a\\u03c4, valid for [0, 1e^(risky token decimals))\",\"sigma\":\"AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)\",\"strike\":\"Marginal price of the pool's risky token at maturity, with the same decimals as the stable token, valid [0, 2^128-1]\"},\"returns\":{\"delRisky\":\"   Total amount of risky tokens provided to reserves\",\"delStable\":\"  Total amount of stable tokens provided to reserves\",\"poolId\":\"     Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"}},\"deposit(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the depositCallback function\",\"delRisky\":\"Amount of risky tokens to deposit\",\"delStable\":\"Amount of stable tokens to deposit\",\"recipient\":\"Recipient margin account of the deposited tokens\"}},\"invariantOf(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"invariant\":\"  Signed fixed point 64.64 number, invariant of `poolId`\"}},\"remove(bytes32,uint256)\":{\"params\":{\"delLiquidity\":\"Amount of liquidity to remove\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"delRisky\":\"     Amount of risky tokens received from removed liquidity\",\"delStable\":\"    Amount of stable tokens received from removed liquidity\"}},\"swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the swapCallback function\",\"deltaIn\":\"Amount of tokens to swap in\",\"deltaOut\":\"Amount of tokens to swap out\",\"fromMargin\":\"Whether the `msg.sender` uses their margin balance, or must send tokens\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\",\"recipient\":\"Address that receives output token `deltaOut` amount\",\"riskyForStable\":\"If true, swap risky to stable, else swap stable to risky\",\"toMargin\":\"Whether the `deltaOut` amount is transferred or deposited into margin\"}},\"updateLastTimestamp(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"lastTimestamp\":\"Timestamp loaded into the state of the pool's Calibration.lastTimestamp\"}},\"withdraw(address,uint256,uint256)\":{\"params\":{\"delRisky\":\"Amount of risky tokens to withdraw\",\"delStable\":\"Amount of stable tokens to withdraw\",\"recipient\":\"Address that tokens are transferred to\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BalanceError()\":[{\"notice\":\"Thrown when the balanceOf function is not successful and does not return data\"}],\"CalibrationError(uint256,uint256)\":[{\"notice\":\"Thrown when the parameters of a new pool are invalid, causing initial reserves to be 0\"}],\"DeltaInError()\":[{\"notice\":\"Thrown when the deltaIn parameter is 0\"}],\"DeltaOutError()\":[{\"notice\":\"Thrown when the deltaOut parameter is 0\"}],\"GammaError(uint256)\":[{\"notice\":\"Thrown when gamma, equal to 1 - fee %, is outside its bounds: 9_000 <= gamma <= 10_000; 1_000 = 10% fee\"}],\"InvariantError(int128,int128)\":[{\"notice\":\"Thrown when the invariant check fails\"}],\"InverseOutOfBounds(int128)\":[{\"notice\":\"Thrown on passing an arg that is out of the input range for these math functions\"}],\"LockedError()\":[{\"notice\":\"Thrown on attempted re-entrancy on a function with a re-entrancy guard\"}],\"MinLiquidityError(uint256)\":[{\"notice\":\"Thrown when liquidity is lower than or equal to the minimum amount of liquidity\"}],\"PoolDuplicateError()\":[{\"notice\":\"Thrown in create when a pool with computed poolId already exists\"}],\"PoolExpiredError()\":[{\"notice\":\"Thrown when calling an expired pool, where block.timestamp > maturity, + BUFFER if swap\"}],\"RiskyBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected risky balance is less than the actual balance\"}],\"RiskyPerLpError(uint256)\":[{\"notice\":\"Thrown when riskyPerLp is outside the range of acceptable values, 0 < riskyPerLp <= 1eRiskyDecimals\"}],\"SigmaError(uint256)\":[{\"notice\":\"Thrown when sigma is outside the range of acceptable values, 1 <= sigma <= 1e7 with 4 precision\"}],\"StableBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected stable balance is less than the actual balance\"}],\"StrikeError(uint256)\":[{\"notice\":\"Thrown when strike is not valid, i.e. equal to 0 or greater than 2^128\"}],\"UninitializedError()\":[{\"notice\":\"Thrown when the pool with poolId has not been created\"}],\"ZeroDeltasError()\":[{\"notice\":\"Thrown when the risky or stable amount is 0\"}],\"ZeroLiquidityError()\":[{\"notice\":\"Thrown when the liquidity parameter is 0\"}]},\"events\":{\"Allocate(address,address,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity of risky and stable tokens to a specified `poolId`\"},\"Create(address,uint128,uint32,uint32,uint32,uint256,uint256,uint256)\":{\"notice\":\"Creates a pool with liquidity\"},\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Added stable and/or risky tokens to a margin account\"},\"Remove(address,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity of risky and stable tokens to a specified `poolId`\"},\"Swap(address,address,bytes32,bool,uint256,uint256)\":{\"notice\":\"Swaps between `risky` and `stable` assets\"},\"UpdateLastTimestamp(bytes32)\":{\"notice\":\"Updates the time until expiry of the pool with `poolId`\"},\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Removes stable and/or risky from a margin account\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes32,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Allocates risky and stable tokens to a specific curve with `poolId`\"},\"calibrations(bytes32)\":{\"notice\":\"Fetches `Calibration` pool parameters\"},\"create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)\":{\"notice\":\"Initializes a curve with parameters in the `calibrations` storage mapping in the Engine\"},\"deposit(address,uint256,uint256,bytes)\":{\"notice\":\"Adds risky and/or stable tokens to a `recipient`'s internal balance account\"},\"invariantOf(bytes32)\":{\"notice\":\"Fetches the current invariant, notation is usually `k`, based on risky and stable token reserves of pool with `poolId`\"},\"liquidity(address,bytes32)\":{\"notice\":\"Fetches position liquidity an account address and poolId\"},\"margins(address)\":{\"notice\":\"Fetches the margin balances of `account`\"},\"remove(bytes32,uint256)\":{\"notice\":\"Unallocates risky and stable tokens from a specific curve with `poolId`\"},\"reserves(bytes32)\":{\"notice\":\"Fetches the global reserve state for a pool with `poolId`\"},\"swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)\":{\"notice\":\"Swaps between `risky` and `stable` tokens\"},\"updateLastTimestamp(bytes32)\":{\"notice\":\"Updates the time until expiry of the pool by setting its last timestamp value\"},\"withdraw(address,uint256,uint256)\":{\"notice\":\"Removes risky and/or stable tokens from a `msg.sender`'s internal balance account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/engine/EchidnaMockEngine.sol\":\"EchidnaMockEngine\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/crytic/EchidnaPrimitiveEngine.sol\":{\"keccak256\":\"0x946897aa269a19ba9d481cf57c1e4920a1acb1bd5a5320f87c74a972e1b16bda\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://55f4e5546a496f88f9d2c12083f14d5936307c680e7ace35ea5997049e728dea\",\"dweb:/ipfs/QmUhqPckKqQgdvQwujsvvS2BPDapwwzZN4SGA2wfGivVfF\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x5d2e1e3e7508d8fc9654c530210945dfebe4f91e0f5d0505997d963abe1a39fb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://afd23d240486fcd9d6769ee83f3e5cf6a4d77eb4e9c5b5f9e8da41470361db2f\",\"dweb:/ipfs/QmSmVuE5fiswzp7424Vvs8SAAEagdFKvXnHMU6eREuqYAs\"]},\"contracts/interfaces/IPrimitiveEngine.sol\":{\"keccak256\":\"0x9cc8c6aac249fc77128f5e08db6cfb3e0dc177e1aed7899071482ed09c01408a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2ba58232a71722a24c26c79cb905b826245883e95727e1051e15b57dc1a4dd9b\",\"dweb:/ipfs/QmYjsz2qkMTwkbdqRZVw8fN1q1vWDDxFazM43A8MmKa3fW\"]},\"contracts/interfaces/IPrimitiveFactory.sol\":{\"keccak256\":\"0x592ff2be55e3c6f4af4ae1bb83dd251f925e275422720e8e7f1a82a4d7cf1272\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://eb94aa54cb726e85b726a4201f5c2255e402132cfd7d9fe90f3d191fa9aa8f98\",\"dweb:/ipfs/QmQsZoxSdjEiKcRJeQvgEV9uPcr7jpuQCizsfM2QSwyNG9\"]},\"contracts/interfaces/callback/IPrimitiveCreateCallback.sol\":{\"keccak256\":\"0x341936b1b976c4a29bf9c112546ec9a7ea14a87024ae2d7c480df88bf4075a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5bacd19b1aa1d2a80b731babab6c0108dac1624687946b65af2904593eaa1028\",\"dweb:/ipfs/QmYVYbRghxEQxFWioSuF2LmjBoC9eSmE1Hs1DZyFxYtymU\"]},\"contracts/interfaces/callback/IPrimitiveDepositCallback.sol\":{\"keccak256\":\"0x2989c446863ccd94e254ccc14a1a57f672d637291da197aab8e43536168cf773\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://22a1480de8d7869632d24341502264dbc4683b94a2c78e832f802d2e269a6c19\",\"dweb:/ipfs/QmSo6aWGBGGB51YCtcQtYsuiLUfNPGEQ8uxzNZusmGUQyy\"]},\"contracts/interfaces/callback/IPrimitiveLiquidityCallback.sol\":{\"keccak256\":\"0xb713edb4de7ad4c940c90fe6e120ad8f817c7c9eade89a656f52758ed46a80cf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://68a7889d0e94663413b649df045e1ac7f9706b37246cff04fe01ac821055273d\",\"dweb:/ipfs/QmcFs41eWR4CwxCyr6sRRdAXA1Rd8r7a7zbdow8JNJR4f3\"]},\"contracts/interfaces/callback/IPrimitiveSwapCallback.sol\":{\"keccak256\":\"0x5c3a3859edaef8a6ddcedfd537c53080b7e2477c134439a970c1eadfcf71af05\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://546a24d7a219f0e674d4f154957d75fcdc46c70c4acf868cebd77473f3969f8e\",\"dweb:/ipfs/QmfKNRNS3kasfyPmusqoVAw3S2tqE1km9r5HbSiArZvRXE\"]},\"contracts/interfaces/engine/IPrimitiveEngineActions.sol\":{\"keccak256\":\"0xa534fb3dae12b3ecfd9611c901b1a85c4a135fe4553facecb0d71505c797cb51\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ff9b683f47b666070d714721cf1718e63df7c54d8197e1641fb4988c90c1ad3b\",\"dweb:/ipfs/QmT2wHLTMhGGBsHGo8wmg9U3gggfr5XzbUR92mFmH84vX1\"]},\"contracts/interfaces/engine/IPrimitiveEngineErrors.sol\":{\"keccak256\":\"0x86bbde924956e7901b893c6f5175f0020b2766a7a8f3defb376bc1ee956ea5b1\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d9865859c64ab77b4f3031451221acc576e6b960f1633f70a782163639442caa\",\"dweb:/ipfs/QmYCQEBxx3FiGkVuXRuEcrr4sbC9UKuFwDNj84tyq2jKag\"]},\"contracts/interfaces/engine/IPrimitiveEngineEvents.sol\":{\"keccak256\":\"0x9c76cc12c8bb1703c33d77f1fa36808e4cb02108d932e7af5abeba2315c0831f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ff617561f5d14f3343e86fb363f03515c9d386ec13e60f09db3761a4d60a7225\",\"dweb:/ipfs/QmWi8XFiSBPgRbxvDf3135mcGFM8MWWJjEGC6pypQn6sWT\"]},\"contracts/interfaces/engine/IPrimitiveEngineView.sol\":{\"keccak256\":\"0xb1482c66ce10ddf51a64240e1888b0e1b86f2ef0d0ca56caa5d16b11ae39cf5c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9651c0db965e64e349342b46c0919b20d219cf9d50c1ffb8e6ef6b5f3498ca96\",\"dweb:/ipfs/QmdhWP4kfPs3KLBaEfx3VY44kvP5Jv3uexYx4jBzH8Ny1p\"]},\"contracts/libraries/ABDKMath64x64.sol\":{\"keccak256\":\"0xd85419c9bcc9e2586b2481fbfbe28177043ec22a43a28ea766825f8a46edab4c\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://1843d731ed2f4bf3a31f68213a762c4e8b6783f7efb1477bc16ea14420e3eb64\",\"dweb:/ipfs/QmWZLhqYLeyn6xkqVrdzS5ViRXmdJyDRdQUxPscUEwhhto\"]},\"contracts/libraries/CumulativeNormalDistribution.sol\":{\"keccak256\":\"0x9d64bf869a519bd1c31a68a12ad4e8b86784d97ba16173bd409805068b21a2eb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7e1febddefd7863f7995e8be0c1cc20dbba32ea002d913e2a8d5842aa8c9288c\",\"dweb:/ipfs/QmTPud4egEKTUr8826Fpxm5W5oYzk5UbLLfZeoLLH2sNrL\"]},\"contracts/libraries/Margin.sol\":{\"keccak256\":\"0xdcf24a0bcc499362b723c4d37a3ebc13b3b97b57ce7b11b506d41df5ae4db006\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e25ec976009b6b486ca98882f8d4adba2b50790b0303df7e46e9dfc14391cc92\",\"dweb:/ipfs/QmYnRgpHzRKNG6H5cBHoETwp25VtGeYBXqPhSEgAGWNzY3\"]},\"contracts/libraries/ReplicationMath.sol\":{\"keccak256\":\"0xb2c664ef1c8d26977ad7f4d2fd30113118e4805174271169d72c3c8d830c425e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fafbebfcb9f13095c71c95aad9661003fb4c384ec29eac9eec315d94dca1e4aa\",\"dweb:/ipfs/QmVUwieHiTjoxb5GnVhJJiNFat2bgKizXB1NWkFp9VDiU2\"]},\"contracts/libraries/Reserve.sol\":{\"keccak256\":\"0x5ff07d4f9dc34770b99fd84ae4586b162d9a2730bc973d17ffe48b52165a87c9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e2058eddfc544888af4f7966391262df12a4d516c960a75a6ed1a95bfb6a40e4\",\"dweb:/ipfs/QmWKD8Y4YmEEaJYc9AUnb3j8iLT62XHpGhLSzbNar9BB9d\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xaf262b2cd8a8f60a75aa8e448a0e1975c9b0c909fa0286eab477a4f7f04b4f73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://74ccabbebc05c33fa395505e6d2ddc481e6d3e50abac53df23a3bac5582aa4d2\",\"dweb:/ipfs/QmPptwoz1MFxSd8RxY9vX4fLUBHKiTHH9RUZds7QfHdGH9\"]},\"contracts/libraries/Transfers.sol\":{\"keccak256\":\"0x05aaac8b18c0ce27c5e7c42bfddb5f44d91b1fba4fdd62046ab6119c0ee19ca3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d420a7ce251ed9b3bd8395c9e0ddd0b876e55c68112c6fadd660e63179329c84\",\"dweb:/ipfs/QmU8V9c2s5mhyY6vLTnjKVX9ELD2Rz4rD8DbiyCtyN4U5E\"]},\"contracts/libraries/Units.sol\":{\"keccak256\":\"0x96617fcf76c03a63f5239fb5228a11cdc4b3906af2f22342ae5dbfd12fc63148\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://385fcd235af2a3e71938d751ec9c24fbf77716a79b10154699341396c6ac49fa\",\"dweb:/ipfs/QmZ4ReHsiZAja6nzpMjHWChxap9UQMd1h8jsNkqTT9GUgi\"]},\"contracts/test/engine/EchidnaMockEngine.sol\":{\"keccak256\":\"0x29a53e99ce42c450edcdc49dacede3107b197abb3b90a0c62cbe36fff42f9ac9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://782cbfb442977c65282e3cc2e0134829d5fc2bc48801952f35df04cb6289e75e\",\"dweb:/ipfs/QmeiWPpsRBdGh6z1yMhNqdYwMD1XjGy9mEj5vsaiBoKxTG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.6+commit.11564f7e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_risky",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stable",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_scaleFactorRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scaleFactorStable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_min_liquidity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CalibrationError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeltaInError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeltaOutError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "GammaError"
        },
        {
          "inputs": [
            {
              "internalType": "int128",
              "name": "invariant",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "nextInvariant",
              "type": "int128"
            }
          ],
          "type": "error",
          "name": "InvariantError"
        },
        {
          "inputs": [
            {
              "internalType": "int128",
              "name": "value",
              "type": "int128"
            }
          ],
          "type": "error",
          "name": "InverseOutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LockedError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinLiquidityError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolDuplicateError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolExpiredError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RiskyBalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RiskyPerLpError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SigmaError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StableBalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrikeError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroDeltasError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroLiquidityError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Allocate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Create",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Remove",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "riskyForStable",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deltaIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deltaOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateLastTimestamp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUFFER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_LIQUIDITY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "by",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "advanceTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fromMargin",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calibrations",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "riskyPerLp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "invariantOf",
          "outputs": [
            {
              "internalType": "int128",
              "name": "invariant",
              "type": "int128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "margins",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "balanceRisky",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "balanceStable",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reserves",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "reserveRisky",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reserveStable",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "blockTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeStable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeLiquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "risky",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaleFactorRisky",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaleFactorStable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "reserveRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveStable",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReserves"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stable",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "riskyForStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deltaIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deltaOut",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fromMargin",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "toMargin",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "time",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateLastTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "reserveRisky",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateReserves"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate(bytes32,address,uint256,uint256,bool,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the allocateCallback function",
              "delRisky": "Amount of risky tokens to add",
              "delStable": "Amount of stable tokens to add",
              "fromMargin": "Whether the `msg.sender` pays with their margin balance, or must send tokens",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma",
              "recipient": "Address to give the allocated liquidity to"
            },
            "returns": {
              "delLiquidity": "Amount of liquidity given to `recipient`"
            }
          },
          "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the createCallback function",
              "delLiquidity": "Amount of liquidity units to allocate to the curve, wei value with 18 decimals of precision",
              "gamma": "Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)",
              "maturity": "Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]",
              "riskyPerLp": "Risky reserve per liq. with risky decimals, = 1 - N(d1), d1 = (ln(S/K)+(r*σ^2/2))/σ√τ, valid for [0, 1e^(risky token decimals))",
              "sigma": "AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)",
              "strike": "Marginal price of the pool's risky token at maturity, with the same decimals as the stable token, valid [0, 2^128-1]"
            },
            "returns": {
              "delRisky": "   Total amount of risky tokens provided to reserves",
              "delStable": "  Total amount of stable tokens provided to reserves",
              "poolId": "     Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            }
          },
          "deposit(address,uint256,uint256,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the depositCallback function",
              "delRisky": "Amount of risky tokens to deposit",
              "delStable": "Amount of stable tokens to deposit",
              "recipient": "Recipient margin account of the deposited tokens"
            }
          },
          "invariantOf(bytes32)": {
            "params": {
              "poolId": "Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "invariant": "  Signed fixed point 64.64 number, invariant of `poolId`"
            }
          },
          "remove(bytes32,uint256)": {
            "params": {
              "delLiquidity": "Amount of liquidity to remove",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "delRisky": "     Amount of risky tokens received from removed liquidity",
              "delStable": "    Amount of stable tokens received from removed liquidity"
            }
          },
          "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the swapCallback function",
              "deltaIn": "Amount of tokens to swap in",
              "deltaOut": "Amount of tokens to swap out",
              "fromMargin": "Whether the `msg.sender` uses their margin balance, or must send tokens",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma",
              "recipient": "Address that receives output token `deltaOut` amount",
              "riskyForStable": "If true, swap risky to stable, else swap stable to risky",
              "toMargin": "Whether the `deltaOut` amount is transferred or deposited into margin"
            }
          },
          "updateLastTimestamp(bytes32)": {
            "params": {
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "lastTimestamp": "Timestamp loaded into the state of the pool's Calibration.lastTimestamp"
            }
          },
          "withdraw(address,uint256,uint256)": {
            "params": {
              "delRisky": "Amount of risky tokens to withdraw",
              "delStable": "Amount of stable tokens to withdraw",
              "recipient": "Address that tokens are transferred to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allocate(bytes32,address,uint256,uint256,bool,bytes)": {
            "notice": "Allocates risky and stable tokens to a specific curve with `poolId`"
          },
          "calibrations(bytes32)": {
            "notice": "Fetches `Calibration` pool parameters"
          },
          "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": {
            "notice": "Initializes a curve with parameters in the `calibrations` storage mapping in the Engine"
          },
          "deposit(address,uint256,uint256,bytes)": {
            "notice": "Adds risky and/or stable tokens to a `recipient`'s internal balance account"
          },
          "invariantOf(bytes32)": {
            "notice": "Fetches the current invariant, notation is usually `k`, based on risky and stable token reserves of pool with `poolId`"
          },
          "liquidity(address,bytes32)": {
            "notice": "Fetches position liquidity an account address and poolId"
          },
          "margins(address)": {
            "notice": "Fetches the margin balances of `account`"
          },
          "remove(bytes32,uint256)": {
            "notice": "Unallocates risky and stable tokens from a specific curve with `poolId`"
          },
          "reserves(bytes32)": {
            "notice": "Fetches the global reserve state for a pool with `poolId`"
          },
          "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": {
            "notice": "Swaps between `risky` and `stable` tokens"
          },
          "updateLastTimestamp(bytes32)": {
            "notice": "Updates the time until expiry of the pool by setting its last timestamp value"
          },
          "withdraw(address,uint256,uint256)": {
            "notice": "Removes risky and/or stable tokens from a `msg.sender`'s internal balance account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/engine/EchidnaMockEngine.sol": "EchidnaMockEngine"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/crytic/EchidnaPrimitiveEngine.sol": {
        "keccak256": "0x946897aa269a19ba9d481cf57c1e4920a1acb1bd5a5320f87c74a972e1b16bda",
        "urls": [
          "bzz-raw://55f4e5546a496f88f9d2c12083f14d5936307c680e7ace35ea5997049e728dea",
          "dweb:/ipfs/QmUhqPckKqQgdvQwujsvvS2BPDapwwzZN4SGA2wfGivVfF"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0x5d2e1e3e7508d8fc9654c530210945dfebe4f91e0f5d0505997d963abe1a39fb",
        "urls": [
          "bzz-raw://afd23d240486fcd9d6769ee83f3e5cf6a4d77eb4e9c5b5f9e8da41470361db2f",
          "dweb:/ipfs/QmSmVuE5fiswzp7424Vvs8SAAEagdFKvXnHMU6eREuqYAs"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPrimitiveEngine.sol": {
        "keccak256": "0x9cc8c6aac249fc77128f5e08db6cfb3e0dc177e1aed7899071482ed09c01408a",
        "urls": [
          "bzz-raw://2ba58232a71722a24c26c79cb905b826245883e95727e1051e15b57dc1a4dd9b",
          "dweb:/ipfs/QmYjsz2qkMTwkbdqRZVw8fN1q1vWDDxFazM43A8MmKa3fW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPrimitiveFactory.sol": {
        "keccak256": "0x592ff2be55e3c6f4af4ae1bb83dd251f925e275422720e8e7f1a82a4d7cf1272",
        "urls": [
          "bzz-raw://eb94aa54cb726e85b726a4201f5c2255e402132cfd7d9fe90f3d191fa9aa8f98",
          "dweb:/ipfs/QmQsZoxSdjEiKcRJeQvgEV9uPcr7jpuQCizsfM2QSwyNG9"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveCreateCallback.sol": {
        "keccak256": "0x341936b1b976c4a29bf9c112546ec9a7ea14a87024ae2d7c480df88bf4075a8f",
        "urls": [
          "bzz-raw://5bacd19b1aa1d2a80b731babab6c0108dac1624687946b65af2904593eaa1028",
          "dweb:/ipfs/QmYVYbRghxEQxFWioSuF2LmjBoC9eSmE1Hs1DZyFxYtymU"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveDepositCallback.sol": {
        "keccak256": "0x2989c446863ccd94e254ccc14a1a57f672d637291da197aab8e43536168cf773",
        "urls": [
          "bzz-raw://22a1480de8d7869632d24341502264dbc4683b94a2c78e832f802d2e269a6c19",
          "dweb:/ipfs/QmSo6aWGBGGB51YCtcQtYsuiLUfNPGEQ8uxzNZusmGUQyy"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveLiquidityCallback.sol": {
        "keccak256": "0xb713edb4de7ad4c940c90fe6e120ad8f817c7c9eade89a656f52758ed46a80cf",
        "urls": [
          "bzz-raw://68a7889d0e94663413b649df045e1ac7f9706b37246cff04fe01ac821055273d",
          "dweb:/ipfs/QmcFs41eWR4CwxCyr6sRRdAXA1Rd8r7a7zbdow8JNJR4f3"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveSwapCallback.sol": {
        "keccak256": "0x5c3a3859edaef8a6ddcedfd537c53080b7e2477c134439a970c1eadfcf71af05",
        "urls": [
          "bzz-raw://546a24d7a219f0e674d4f154957d75fcdc46c70c4acf868cebd77473f3969f8e",
          "dweb:/ipfs/QmfKNRNS3kasfyPmusqoVAw3S2tqE1km9r5HbSiArZvRXE"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineActions.sol": {
        "keccak256": "0xa534fb3dae12b3ecfd9611c901b1a85c4a135fe4553facecb0d71505c797cb51",
        "urls": [
          "bzz-raw://ff9b683f47b666070d714721cf1718e63df7c54d8197e1641fb4988c90c1ad3b",
          "dweb:/ipfs/QmT2wHLTMhGGBsHGo8wmg9U3gggfr5XzbUR92mFmH84vX1"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineErrors.sol": {
        "keccak256": "0x86bbde924956e7901b893c6f5175f0020b2766a7a8f3defb376bc1ee956ea5b1",
        "urls": [
          "bzz-raw://d9865859c64ab77b4f3031451221acc576e6b960f1633f70a782163639442caa",
          "dweb:/ipfs/QmYCQEBxx3FiGkVuXRuEcrr4sbC9UKuFwDNj84tyq2jKag"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineEvents.sol": {
        "keccak256": "0x9c76cc12c8bb1703c33d77f1fa36808e4cb02108d932e7af5abeba2315c0831f",
        "urls": [
          "bzz-raw://ff617561f5d14f3343e86fb363f03515c9d386ec13e60f09db3761a4d60a7225",
          "dweb:/ipfs/QmWi8XFiSBPgRbxvDf3135mcGFM8MWWJjEGC6pypQn6sWT"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineView.sol": {
        "keccak256": "0xb1482c66ce10ddf51a64240e1888b0e1b86f2ef0d0ca56caa5d16b11ae39cf5c",
        "urls": [
          "bzz-raw://9651c0db965e64e349342b46c0919b20d219cf9d50c1ffb8e6ef6b5f3498ca96",
          "dweb:/ipfs/QmdhWP4kfPs3KLBaEfx3VY44kvP5Jv3uexYx4jBzH8Ny1p"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/ABDKMath64x64.sol": {
        "keccak256": "0xd85419c9bcc9e2586b2481fbfbe28177043ec22a43a28ea766825f8a46edab4c",
        "urls": [
          "bzz-raw://1843d731ed2f4bf3a31f68213a762c4e8b6783f7efb1477bc16ea14420e3eb64",
          "dweb:/ipfs/QmWZLhqYLeyn6xkqVrdzS5ViRXmdJyDRdQUxPscUEwhhto"
        ],
        "license": "BSD-4-Clause"
      },
      "contracts/libraries/CumulativeNormalDistribution.sol": {
        "keccak256": "0x9d64bf869a519bd1c31a68a12ad4e8b86784d97ba16173bd409805068b21a2eb",
        "urls": [
          "bzz-raw://7e1febddefd7863f7995e8be0c1cc20dbba32ea002d913e2a8d5842aa8c9288c",
          "dweb:/ipfs/QmTPud4egEKTUr8826Fpxm5W5oYzk5UbLLfZeoLLH2sNrL"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Margin.sol": {
        "keccak256": "0xdcf24a0bcc499362b723c4d37a3ebc13b3b97b57ce7b11b506d41df5ae4db006",
        "urls": [
          "bzz-raw://e25ec976009b6b486ca98882f8d4adba2b50790b0303df7e46e9dfc14391cc92",
          "dweb:/ipfs/QmYnRgpHzRKNG6H5cBHoETwp25VtGeYBXqPhSEgAGWNzY3"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/ReplicationMath.sol": {
        "keccak256": "0xb2c664ef1c8d26977ad7f4d2fd30113118e4805174271169d72c3c8d830c425e",
        "urls": [
          "bzz-raw://fafbebfcb9f13095c71c95aad9661003fb4c384ec29eac9eec315d94dca1e4aa",
          "dweb:/ipfs/QmVUwieHiTjoxb5GnVhJJiNFat2bgKizXB1NWkFp9VDiU2"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Reserve.sol": {
        "keccak256": "0x5ff07d4f9dc34770b99fd84ae4586b162d9a2730bc973d17ffe48b52165a87c9",
        "urls": [
          "bzz-raw://e2058eddfc544888af4f7966391262df12a4d516c960a75a6ed1a95bfb6a40e4",
          "dweb:/ipfs/QmWKD8Y4YmEEaJYc9AUnb3j8iLT62XHpGhLSzbNar9BB9d"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/SafeCast.sol": {
        "keccak256": "0xaf262b2cd8a8f60a75aa8e448a0e1975c9b0c909fa0286eab477a4f7f04b4f73",
        "urls": [
          "bzz-raw://74ccabbebc05c33fa395505e6d2ddc481e6d3e50abac53df23a3bac5582aa4d2",
          "dweb:/ipfs/QmPptwoz1MFxSd8RxY9vX4fLUBHKiTHH9RUZds7QfHdGH9"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Transfers.sol": {
        "keccak256": "0x05aaac8b18c0ce27c5e7c42bfddb5f44d91b1fba4fdd62046ab6119c0ee19ca3",
        "urls": [
          "bzz-raw://d420a7ce251ed9b3bd8395c9e0ddd0b876e55c68112c6fadd660e63179329c84",
          "dweb:/ipfs/QmU8V9c2s5mhyY6vLTnjKVX9ELD2Rz4rD8DbiyCtyN4U5E"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Units.sol": {
        "keccak256": "0x96617fcf76c03a63f5239fb5228a11cdc4b3906af2f22342ae5dbfd12fc63148",
        "urls": [
          "bzz-raw://385fcd235af2a3e71938d751ec9c24fbf77716a79b10154699341396c6ac49fa",
          "dweb:/ipfs/QmZ4ReHsiZAja6nzpMjHWChxap9UQMd1h8jsNkqTT9GUgi"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/test/engine/EchidnaMockEngine.sol": {
        "keccak256": "0x29a53e99ce42c450edcdc49dacede3107b197abb3b90a0c62cbe36fff42f9ac9",
        "urls": [
          "bzz-raw://782cbfb442977c65282e3cc2e0134829d5fc2bc48801952f35df04cb6289e75e",
          "dweb:/ipfs/QmeiWPpsRBdGh6z1yMhNqdYwMD1XjGy9mEj5vsaiBoKxTG"
        ],
        "license": "GPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/engine/EchidnaMockEngine.sol",
    "id": 21997,
    "exportedSymbols": {
      "ABDKMath64x64": [
        18300
      ],
      "CumulativeNormalDistribution": [
        18711
      ],
      "EchidnaMockEngine": [
        21996
      ],
      "EchidnaPrimitiveEngine": [
        10044
      ],
      "IERC20": [
        14871
      ],
      "IPrimitiveCreateCallback": [
        14964
      ],
      "IPrimitiveDepositCallback": [
        14978
      ],
      "IPrimitiveEngine": [
        14887
      ],
      "IPrimitiveEngineActions": [
        15114
      ],
      "IPrimitiveEngineErrors": [
        15198
      ],
      "IPrimitiveEngineEvents": [
        15291
      ],
      "IPrimitiveEngineView": [
        15405
      ],
      "IPrimitiveFactory": [
        14950
      ],
      "IPrimitiveLiquidityCallback": [
        14992
      ],
      "IPrimitiveSwapCallback": [
        15006
      ],
      "Margin": [
        18808
      ],
      "ReplicationMath": [
        19020
      ],
      "Reserve": [
        19303
      ],
      "SafeCast": [
        19333
      ],
      "Transfers": [
        19388
      ],
      "Units": [
        19518
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:2404:40",
    "nodes": [
      {
        "id": 21731,
        "nodeType": "PragmaDirective",
        "src": "41:22:40",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 21732,
        "nodeType": "ImportDirective",
        "src": "65:49:40",
        "nodes": [],
        "absolutePath": "contracts/crytic/EchidnaPrimitiveEngine.sol",
        "file": "../../crytic/EchidnaPrimitiveEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21997,
        "sourceUnit": 10045,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21996,
        "nodeType": "ContractDefinition",
        "src": "116:2328:40",
        "nodes": [
          {
            "id": 21737,
            "nodeType": "VariableDeclaration",
            "src": "175:23:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "16ada547",
            "mutability": "mutable",
            "name": "time",
            "nameLocation": "190:4:40",
            "scope": 21996,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21735,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 21736,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "197:1:40",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 21758,
            "nodeType": "FunctionDefinition",
            "src": "205:240:40",
            "nodes": [],
            "body": {
              "id": 21757,
              "nodeType": "Block",
              "src": "443:2:40",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 21750,
                    "name": "_risky",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21739,
                    "src": "359:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 21751,
                    "name": "_stable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21741,
                    "src": "367:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 21752,
                    "name": "_scaleFactorRisky",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21743,
                    "src": "376:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 21753,
                    "name": "_scaleFactorStable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21745,
                    "src": "395:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 21754,
                    "name": "_min_liquidity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21747,
                    "src": "415:14:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 21755,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21749,
                  "name": "EchidnaPrimitiveEngine",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10044,
                  "src": "336:22:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "336:94:40"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21739,
                  "mutability": "mutable",
                  "name": "_risky",
                  "nameLocation": "225:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21758,
                  "src": "217:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21741,
                  "mutability": "mutable",
                  "name": "_stable",
                  "nameLocation": "241:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21758,
                  "src": "233:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21743,
                  "mutability": "mutable",
                  "name": "_scaleFactorRisky",
                  "nameLocation": "258:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21758,
                  "src": "250:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21745,
                  "mutability": "mutable",
                  "name": "_scaleFactorStable",
                  "nameLocation": "285:18:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21758,
                  "src": "277:26:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21747,
                  "mutability": "mutable",
                  "name": "_min_liquidity",
                  "nameLocation": "313:14:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21758,
                  "src": "305:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "216:112:40"
            },
            "returnParameters": {
              "id": 21756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:0:40"
            },
            "scope": 21996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21768,
            "nodeType": "FunctionDefinition",
            "src": "451:69:40",
            "nodes": [],
            "body": {
              "id": 21767,
              "nodeType": "Block",
              "src": "493:27:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21763,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21737,
                      "src": "503:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 21764,
                      "name": "by",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21760,
                      "src": "511:2:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "503:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21766,
                  "nodeType": "ExpressionStatement",
                  "src": "503:10:40"
                }
              ]
            },
            "functionSelector": "07e32f0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "advanceTime",
            "nameLocation": "460:11:40",
            "parameters": {
              "id": 21761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21760,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "480:2:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21768,
                  "src": "472:10:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:12:40"
            },
            "returnParameters": {
              "id": 21762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "493:0:40"
            },
            "scope": 21996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21782,
            "nodeType": "FunctionDefinition",
            "src": "526:128:40",
            "nodes": [],
            "body": {
              "id": 21781,
              "nodeType": "Block",
              "src": "608:46:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21774,
                      "name": "blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21772,
                      "src": "618:14:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21777,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21737,
                          "src": "642:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 21776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "635:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 21775,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:6:40",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:12:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "618:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 21780,
                  "nodeType": "ExpressionStatement",
                  "src": "618:29:40"
                }
              ]
            },
            "baseFunctions": [
              8851
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blockTimestamp",
            "nameLocation": "535:15:40",
            "overrides": {
              "id": 21770,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "567:8:40"
            },
            "parameters": {
              "id": 21769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:2:40"
            },
            "returnParameters": {
              "id": 21773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21772,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "592:14:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21782,
                  "src": "585:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 21771,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:23:40"
            },
            "scope": 21996,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21819,
            "nodeType": "FunctionDefinition",
            "src": "660:303:40",
            "nodes": [],
            "body": {
              "id": 21818,
              "nodeType": "Block",
              "src": "779:184:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    21795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21795,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "810:3:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21818,
                      "src": "789:24:40",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                        "typeString": "struct Reserve.Data"
                      },
                      "typeName": {
                        "id": 21794,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21793,
                          "name": "Reserve.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19042,
                          "src": "789:12:40"
                        },
                        "referencedDeclaration": 19042,
                        "src": "789:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21799,
                  "initialValue": {
                    "baseExpression": {
                      "id": 21796,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8644,
                      "src": "816:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Data_$19042_storage_$",
                        "typeString": "mapping(bytes32 => struct Reserve.Data storage ref)"
                      }
                    },
                    "id": 21798,
                    "indexExpression": {
                      "id": 21797,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21784,
                      "src": "825:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "816:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$19042_storage",
                      "typeString": "struct Reserve.Data storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "789:43:40"
                },
                {
                  "expression": {
                    "id": 21807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 21800,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21795,
                        "src": "842:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 21802,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19029,
                      "src": "842:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21805,
                          "name": "reserveRisky",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21786,
                          "src": "880:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 21803,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19333,
                          "src": "861:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$19333_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 21804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19332,
                        "src": "861:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 21806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:32:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "842:51:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 21808,
                  "nodeType": "ExpressionStatement",
                  "src": "842:51:40"
                },
                {
                  "expression": {
                    "id": 21816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 21809,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21795,
                        "src": "903:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 21811,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveStable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19031,
                      "src": "903:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21814,
                          "name": "reserveStable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21788,
                          "src": "942:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 21812,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19333,
                          "src": "923:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$19333_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 21813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19332,
                        "src": "923:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 21815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "923:33:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "903:53:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 21817,
                  "nodeType": "ExpressionStatement",
                  "src": "903:53:40"
                }
              ]
            },
            "functionSelector": "140240db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReserves",
            "nameLocation": "669:11:40",
            "parameters": {
              "id": 21789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21784,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "698:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21819,
                  "src": "690:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21783,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21786,
                  "mutability": "mutable",
                  "name": "reserveRisky",
                  "nameLocation": "722:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21819,
                  "src": "714:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21788,
                  "mutability": "mutable",
                  "name": "reserveStable",
                  "nameLocation": "752:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21819,
                  "src": "744:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:91:40"
            },
            "returnParameters": {
              "id": 21790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:40"
            },
            "scope": 21996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21995,
            "nodeType": "FunctionDefinition",
            "src": "969:1473:40",
            "nodes": [],
            "body": {
              "id": 21994,
              "nodeType": "Block",
              "src": "1038:1404:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    21830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21830,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "1069:3:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1048:24:40",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                        "typeString": "struct Reserve.Data"
                      },
                      "typeName": {
                        "id": 21829,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21828,
                          "name": "Reserve.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19042,
                          "src": "1048:12:40"
                        },
                        "referencedDeclaration": 19042,
                        "src": "1048:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21834,
                  "initialValue": {
                    "baseExpression": {
                      "id": 21831,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8644,
                      "src": "1075:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Data_$19042_storage_$",
                        "typeString": "mapping(bytes32 => struct Reserve.Data storage ref)"
                      }
                    },
                    "id": 21833,
                    "indexExpression": {
                      "id": 21832,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21821,
                      "src": "1084:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1075:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$19042_storage",
                      "typeString": "struct Reserve.Data storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1048:43:40"
                },
                {
                  "assignments": [
                    21837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21837,
                      "mutability": "mutable",
                      "name": "cal",
                      "nameLocation": "1120:3:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1101:22:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Calibration_$8583_memory_ptr",
                        "typeString": "struct EchidnaPrimitiveEngine.Calibration"
                      },
                      "typeName": {
                        "id": 21836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21835,
                          "name": "Calibration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8583,
                          "src": "1101:11:40"
                        },
                        "referencedDeclaration": 8583,
                        "src": "1101:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Calibration_$8583_storage_ptr",
                          "typeString": "struct EchidnaPrimitiveEngine.Calibration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21841,
                  "initialValue": {
                    "baseExpression": {
                      "id": 21838,
                      "name": "calibrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8630,
                      "src": "1126:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Calibration_$8583_storage_$",
                        "typeString": "mapping(bytes32 => struct EchidnaPrimitiveEngine.Calibration storage ref)"
                      }
                    },
                    "id": 21840,
                    "indexExpression": {
                      "id": 21839,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21821,
                      "src": "1139:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:20:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Calibration_$8583_storage",
                      "typeString": "struct EchidnaPrimitiveEngine.Calibration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1101:45:40"
                },
                {
                  "assignments": [
                    21843,
                    21845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21843,
                      "mutability": "mutable",
                      "name": "curRisky",
                      "nameLocation": "1165:8:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1157:16:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1157:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21845,
                      "mutability": "mutable",
                      "name": "curStable",
                      "nameLocation": "1183:9:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1175:17:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21844,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1175:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21851,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 21846,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21830,
                          "src": "1197:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 21847,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveRisky",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19029,
                        "src": "1197:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 21848,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21830,
                          "src": "1215:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 21849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveStable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19031,
                        "src": "1215:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "id": 21850,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1196:37:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1156:77:40"
                },
                {
                  "assignments": [
                    21853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21853,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "1250:9:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1243:16:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 21852,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1243:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21857,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21855,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21821,
                        "src": "1274:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 21854,
                      "name": "invariantOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10043,
                      "src": "1262:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_int128_$",
                        "typeString": "function (bytes32) view returns (int128)"
                      }
                    },
                    "id": 21856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1243:38:40"
                },
                {
                  "expression": {
                    "id": 21865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 21858,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21830,
                        "src": "1291:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 21860,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19029,
                      "src": "1291:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21863,
                          "name": "reserveRisky",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21823,
                          "src": "1329:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 21861,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19333,
                          "src": "1310:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$19333_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 21862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19332,
                        "src": "1310:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 21864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1310:32:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1291:51:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 21866,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:51:40"
                },
                {
                  "assignments": [
                    21868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21868,
                      "mutability": "mutable",
                      "name": "reserveStable",
                      "nameLocation": "1360:13:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1352:21:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21867,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1352:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21885,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21871,
                        "name": "invariant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21853,
                        "src": "1425:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 21872,
                        "name": "scaleFactorRisky",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8603,
                        "src": "1448:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21873,
                        "name": "scaleFactorStable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8607,
                        "src": "1478:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21874,
                        "name": "reserveRisky",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "1509:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 21875,
                          "name": "cal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21837,
                          "src": "1535:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Calibration_$8583_memory_ptr",
                            "typeString": "struct EchidnaPrimitiveEngine.Calibration memory"
                          }
                        },
                        "id": 21876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8574,
                        "src": "1535:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 21877,
                          "name": "cal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21837,
                          "src": "1559:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Calibration_$8583_memory_ptr",
                            "typeString": "struct EchidnaPrimitiveEngine.Calibration memory"
                          }
                        },
                        "id": 21878,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sigma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8576,
                        "src": "1559:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 21883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21879,
                            "name": "cal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21837,
                            "src": "1582:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Calibration_$8583_memory_ptr",
                              "typeString": "struct EchidnaPrimitiveEngine.Calibration memory"
                            }
                          },
                          "id": 21880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maturity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8578,
                          "src": "1582:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 21881,
                            "name": "cal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21837,
                            "src": "1597:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Calibration_$8583_memory_ptr",
                              "typeString": "struct EchidnaPrimitiveEngine.Calibration memory"
                            }
                          },
                          "id": 21882,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8580,
                          "src": "1597:17:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "1582:32:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 21869,
                        "name": "ReplicationMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19020,
                        "src": "1376:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationMath_$19020_$",
                          "typeString": "type(library ReplicationMath)"
                        }
                      },
                      "id": 21870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStableGivenRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18965,
                      "src": "1376:35:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int128_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (int128,uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 21884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:248:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1352:272:40"
                },
                {
                  "expression": {
                    "id": 21893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 21886,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21830,
                        "src": "1634:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 21888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveStable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19031,
                      "src": "1634:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21891,
                          "name": "reserveStable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21868,
                          "src": "1673:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 21889,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19333,
                          "src": "1654:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$19333_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 21890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19332,
                        "src": "1654:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 21892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1654:33:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1634:53:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 21894,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:53:40"
                },
                {
                  "assignments": [
                    21896,
                    21898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21896,
                      "mutability": "mutable",
                      "name": "nextRisky",
                      "nameLocation": "1706:9:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1698:17:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1698:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21898,
                      "mutability": "mutable",
                      "name": "nextStable",
                      "nameLocation": "1725:10:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 21994,
                      "src": "1717:18:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21904,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 21899,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21830,
                          "src": "1740:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 21900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveRisky",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19029,
                        "src": "1740:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 21901,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21830,
                          "src": "1758:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$19042_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 21902,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveStable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19031,
                        "src": "1758:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "id": 21903,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1739:37:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1697:79:40"
                },
                {
                  "id": 21993,
                  "nodeType": "Block",
                  "src": "1787:649:40",
                  "statements": [
                    {
                      "assignments": [
                        21906
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 21906,
                          "mutability": "mutable",
                          "name": "riskyDeficit",
                          "nameLocation": "1809:12:40",
                          "nodeType": "VariableDeclaration",
                          "scope": 21993,
                          "src": "1801:20:40",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 21905,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1801:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 21915,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21907,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21896,
                            "src": "1824:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 21908,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21843,
                            "src": "1836:8:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1824:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 21913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1870:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 21914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1824:47:40",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21910,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21896,
                            "src": "1847:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21911,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21843,
                            "src": "1859:8:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1847:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1801:70:40"
                    },
                    {
                      "assignments": [
                        21917
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 21917,
                          "mutability": "mutable",
                          "name": "riskySurplus",
                          "nameLocation": "1893:12:40",
                          "nodeType": "VariableDeclaration",
                          "scope": 21993,
                          "src": "1885:20:40",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 21916,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1885:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 21926,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21918,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21896,
                            "src": "1908:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 21919,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21843,
                            "src": "1920:8:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1908:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21922,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21843,
                            "src": "1935:8:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21923,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21896,
                            "src": "1946:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1935:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1908:47:40",
                        "trueExpression": {
                          "hexValue": "30",
                          "id": 21921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1931:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1885:70:40"
                    },
                    {
                      "assignments": [
                        21928
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 21928,
                          "mutability": "mutable",
                          "name": "stableDeficit",
                          "nameLocation": "1978:13:40",
                          "nodeType": "VariableDeclaration",
                          "scope": 21993,
                          "src": "1970:21:40",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 21927,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1970:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 21937,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21929,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21898,
                            "src": "1994:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 21930,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21845,
                            "src": "2007:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1994:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 21935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2044:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 21936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1994:51:40",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21932,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21898,
                            "src": "2019:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21933,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21845,
                            "src": "2032:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2019:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1970:75:40"
                    },
                    {
                      "assignments": [
                        21939
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 21939,
                          "mutability": "mutable",
                          "name": "stableSurplus",
                          "nameLocation": "2067:13:40",
                          "nodeType": "VariableDeclaration",
                          "scope": 21993,
                          "src": "2059:21:40",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 21938,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2059:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 21948,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21940,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21898,
                            "src": "2083:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 21941,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21845,
                            "src": "2096:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2083:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21944,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21845,
                            "src": "2112:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21945,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21898,
                            "src": "2124:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2112:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2083:51:40",
                        "trueExpression": {
                          "hexValue": "30",
                          "id": 21943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2059:75:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21953,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2171:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2171:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21955,
                            "name": "riskySurplus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21917,
                            "src": "2183:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 21950,
                                "name": "risky",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8615,
                                "src": "2155:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 21949,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14871,
                              "src": "2148:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14871_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 21951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2148:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14871",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 21952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14820,
                          "src": "2148:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 21956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2148:48:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21957,
                      "nodeType": "ExpressionStatement",
                      "src": "2148:48:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21962,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2237:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2237:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 21966,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2257:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EchidnaMockEngine_$21996",
                                  "typeString": "contract EchidnaMockEngine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EchidnaMockEngine_$21996",
                                  "typeString": "contract EchidnaMockEngine"
                                }
                              ],
                              "id": 21965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2249:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2249:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2249:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21968,
                            "name": "riskyDeficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21906,
                            "src": "2264:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 21959,
                                "name": "risky",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8615,
                                "src": "2217:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 21958,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14871,
                              "src": "2210:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14871_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 21960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2210:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14871",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 21961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14849,
                          "src": "2210:26:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 21969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2210:67:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21970,
                      "nodeType": "ExpressionStatement",
                      "src": "2210:67:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21975,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2316:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2316:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21977,
                            "name": "stableSurplus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21939,
                            "src": "2328:13:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 21972,
                                "name": "stable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8619,
                                "src": "2299:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 21971,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14871,
                              "src": "2292:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14871_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 21973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2292:14:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14871",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 21974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14820,
                          "src": "2292:23:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 21978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2292:50:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21979,
                      "nodeType": "ExpressionStatement",
                      "src": "2292:50:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2384:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2384:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 21988,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2404:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EchidnaMockEngine_$21996",
                                  "typeString": "contract EchidnaMockEngine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EchidnaMockEngine_$21996",
                                  "typeString": "contract EchidnaMockEngine"
                                }
                              ],
                              "id": 21987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2396:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21986,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2396:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2396:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21990,
                            "name": "stableDeficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21928,
                            "src": "2411:13:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 21981,
                                "name": "stable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8619,
                                "src": "2363:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 21980,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14871,
                              "src": "2356:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14871_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 21982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2356:14:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14871",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 21983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14849,
                          "src": "2356:27:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 21991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2356:69:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21992,
                      "nodeType": "ExpressionStatement",
                      "src": "2356:69:40"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "c0ed31ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReserves",
            "nameLocation": "978:14:40",
            "parameters": {
              "id": 21824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21821,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1001:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21995,
                  "src": "993:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21820,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21823,
                  "mutability": "mutable",
                  "name": "reserveRisky",
                  "nameLocation": "1017:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 21995,
                  "src": "1009:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:38:40"
            },
            "returnParameters": {
              "id": 21825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1038:0:40"
            },
            "scope": 21996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21733,
              "name": "EchidnaPrimitiveEngine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10044,
              "src": "146:22:40"
            },
            "id": 21734,
            "nodeType": "InheritanceSpecifier",
            "src": "146:22:40"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21996,
          10044,
          14887,
          15198,
          15405,
          15291,
          15114
        ],
        "name": "EchidnaMockEngine",
        "nameLocation": "125:17:40",
        "scope": 21997,
        "usedErrors": [
          15120,
          15123,
          15126,
          15129,
          15134,
          15139,
          15144,
          15149,
          15154,
          15161,
          15168,
          15175,
          15178,
          15181,
          15184,
          15187,
          15190,
          15197,
          18315
        ]
      }
    ],
    "license": "GPL-3.0-only"
  },
  "id": 40
}