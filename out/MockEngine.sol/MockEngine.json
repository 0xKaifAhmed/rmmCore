{
  "abi": [
    {
      "inputs": [],
      "name": "BalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "CalibrationError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeltaInError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeltaOutError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GammaError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "invariant",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "nextInvariant",
          "type": "int128"
        }
      ],
      "name": "InvariantError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "value",
          "type": "int128"
        }
      ],
      "name": "InverseOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LockedError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinLiquidityError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolDuplicateError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolExpiredError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "RiskyBalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RiskyPerLpError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SigmaError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "StableBalanceError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "StrikeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UninitializedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroDeltasError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroLiquidityError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Allocate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "Remove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "riskyForStable",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deltaIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deltaOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "UpdateLastTimestamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BUFFER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_LIQUIDITY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "by",
          "type": "uint256"
        }
      ],
      "name": "advanceTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fromMargin",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "allocate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "calibrations",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "strike",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "sigma",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "gamma",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "riskyPerLp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "invariantOf",
      "outputs": [
        {
          "internalType": "int128",
          "name": "invariant",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "margins",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "balanceRisky",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "balanceStable",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delLiquidity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "reserves",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "reserveRisky",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "reserveStable",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "blockTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeStable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cumulativeLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "risky",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaleFactorRisky",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaleFactorStable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "reserveRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveStable",
          "type": "uint256"
        }
      ],
      "name": "setReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stable",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "riskyForStable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deltaIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deltaOut",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fromMargin",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "toMargin",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "updateLastTimestamp",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "reserveRisky",
          "type": "uint256"
        }
      ],
      "name": "updateReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delRisky",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delStable",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610140604052600160005560016005553480156200001c57600080fd5b50336001600160a01b0316634e9b75b66040518163ffffffff1660e01b815260040160c06040518083038186803b1580156200005757600080fd5b505afa1580156200006c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000929190620000e3565b60805260c05260a0526001600160601b0319606091821b81166101205291811b8216610100529190911b1660e05262000149565b80516001600160a01b0381168114620000de57600080fd5b919050565b60008060008060008060c08789031215620000fd57600080fd5b6200010887620000c6565b95506200011860208801620000c6565b94506200012860408801620000c6565b9350606087015192506080870151915060a087015190509295509295509295565b60805160a05160c05160e05160601c6101005160601c6101205160601c6144436200022e6000396000818161029f01528181610b8601528181611532015281816115d901528181611a4a015261227d0152600081816104f701528181610b4c015281816113ea0152818161149101528181611b5f015261216a015260006105310152600081816103c50152818161075d01528181610ca4015281816112d201526119450152600081816104120152818161073c01528181610c82015281816112b1015261192401526000818161027801528181610d96015261104001526144436000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80636b35bb6b116100c3578063be00763a1161007c578063be00763a146104c4578063c08165d4146104f2578063c0ed31ba14610519578063c45a01551461052c578063ca28fcd614610553578063d2957b8f1461056657600080fd5b80636b35bb6b146104345780638fbc3ecd1461045f5780639e48ff5a146104675780639f8cfade1461047a578063aaf5eb68146104a2578063b5c5f672146104b157600080fd5b806322be3de11161011557806322be3de11461029a57806323c5b952146102d9578063388204651461036c5780634dd0d056146103c0578063546fecae146103e757806355ebb8251461040d57600080fd5b8062bbf1e41461015c57806307e32f0a1461020c57806311f9908614610221578063140240db1461024957806316ada5471461025c57806321b77d6314610273575b600080fd5b6101bb61016a366004614084565b6003602081905260009182526040909120805460018201546002830154938301546004909301546001600160801b0380841695600160801b948590048216959184169490930463ffffffff16929187565b604080516001600160801b0398891681529688166020880152949096169385019390935263ffffffff919091166060840152608083015260a082015260c081019190915260e0015b60405180910390f35b61021f61021a366004614084565b610579565b005b61023461022f366004614084565b610593565b60405163ffffffff9091168152602001610203565b61021f610257366004614143565b6105d0565b61026560055481565b604051908152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610203565b61032f6102e7366004614084565b6001602052600090815260409020546001600160801b0381169063ffffffff600160801b8204811691600160a01b8104821691600160c01b8204811691600160e01b90041685565b604080516001600160801b03909616865263ffffffff9485166020870152928416928501929092528216606084015216608082015260a001610203565b6103a061037a366004613edb565b6002602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b6103fa6103f5366004614084565b610628565b604051600f9190910b8152602001610203565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b610265610442366004613ef6565b600460209081526000928352604080842090915290825290205481565b610265607881565b61021f610475366004613fff565b6107ad565b61048d610488366004614121565b610928565b60408051928352602083019190915201610203565b610265670de0b6b3a764000081565b61021f6104bf366004613fcc565b610ada565b6104d76104d236600461416f565b610bfd565b60408051938452602084019290925290820152606001610203565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b61021f610527366004614121565b6111ea565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b61021f610561366004613f20565b61166e565b61026561057436600461409d565b611caf565b806005600082825461058b91906142de565b909155505050565b600080546001146105b757604051635cd4e48360e01b815260040160405180910390fd5b60026000556105c582611f32565b600160005592915050565b60008381526003602052604090206105e783611fdf565b81546001600160801b0319166001600160801b039190911617815561060b82611fdf565b81546001600160801b03918216600160801b029116179055505050565b6000818152600160209081526040808320815160a08101835290546001600160801b038116825263ffffffff600160801b8204811694830194909452600160a01b81048416928201839052600160c01b8104841660608301819052600160e01b90910490931660808201529183916106a09190614376565b6000858152600360208181526040808420815160e08101835281546001600160801b038082168352600160801b9182900481169583019590955260018301549485169382019390935263ffffffff9290930482166060840152600281015460808401529283015460a083015260049092015460c0820152929350909182916107339190670de0b6b3a764000090611ff916565b915091506107a37f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000848488600001516001600160801b0316896020015163ffffffff168963ffffffff16612058565b9695505050505050565b6000546001146107d057604051635cd4e48360e01b815260040160405180910390fd5b6002600055831580156107e1575082155b156107ff576040516381552f0360e01b815260040160405180910390fd5b6001600160a01b03851660009081526002602052604090206108229085856120a6565b600080851561083657610833612150565b91505b841561084757610844612263565b90505b60405163c536e60560e01b8152339063c536e60590610870908990899089908990600401614293565b600060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b50505050856000146108bc576108bc6108b787846142de565b6122af565b84156108d4576108d46108cf86836142de565b6122ea565b60408051878152602081018790526001600160a01b0389169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3505060016000555050505050565b60008060005460011461094e57604051635cd4e48360e01b815260040160405180910390fd5b6002600055826109715760405163e5664db760e01b815260040160405180910390fd5b60008481526003602052604090206001810154600160801b900463ffffffff166109ae57604051631d2ad63f60e01b815260040160405180910390fd5b6040805160e08101825282546001600160801b038082168352600160801b918290048116602084015260018501549081169383019390935263ffffffff92048216606082015260028301546080820152600383015460a0820152600483015460c0820152610a1e918690611ff916565b3360009081526004602090815260408083208a8452909152812080549396509194508692610a4d90849061435f565b90915550610a6c9050838386610a6260055490565b8593929190612321565b336000908152600260205260409020610a869084846120a6565b6040805184815260208101849052908101859052859033907f59c6598fc34aefe62579a03667748ef83b4682874f311affb26b318095359b0e9060600160405180910390a350600160005590939092509050565b600054600114610afd57604051635cd4e48360e01b815260040160405180910390fd5b600260005581158015610b0e575080155b15610b2c576040516381552f0360e01b815260040160405180910390fd5b610b3860028383612413565b508115610b7357610b736001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846124ce565b8015610bad57610bad6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836124ce565b60408051838152602081018390526001600160a01b0385169133917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567910160405180910390a35050600160005550565b60008060008054600114610c2457604051635cd4e48360e01b815260040160405180910390fd5b60026000556040516bffffffffffffffffffffffff193060601b1660208201526001600160801b031960808d901b1660348201526001600160e01b031960e08c811b821660448401528b811b821660488401528a901b16604c8201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060500160408051808303601f19018152918152815160209283012060008181526001909352912054909550600160c01b900463ffffffff1615610d1a57604051633651818b60e21b815260040160405180910390fd5b629896808c63ffffffff161180610d37575060018c63ffffffff16105b15610d62576040516387a2c00160e01b815263ffffffff8d1660048201526024015b60405180910390fd5b6001600160801b038d16610d945760405163b3f4bc5560e01b81526001600160801b038e166004820152602401610d59565b7f00000000000000000000000000000000000000000000000000000000000000008811610dd75760405163325951a560e01b815260048101899052602401610d59565b610de982670de0b6b3a76400006142f6565b891180610df4575088155b15610e15576040516323d62a0f60e11b8152600481018a9052602401610d59565b6127108a63ffffffff161180610e3257506123288a63ffffffff16105b15610e5857604051637ed91fa560e11b815263ffffffff8b166004820152602401610d59565b60006040518060a001604052808f6001600160801b031681526020018e63ffffffff1681526020018d63ffffffff168152602001610e9560055490565b63ffffffff1681526020018c63ffffffff168152509050806040015163ffffffff16816060015163ffffffff161115610ee15760405163536e15e160e01b815260040160405180910390fd5b600081606001518260400151610ef79190614376565b9050610f26600085858e86600001516001600160801b0316876020015163ffffffff168763ffffffff166125d9565b9450670de0b6b3a7640000610f3b8b8d614318565b610f4591906142f6565b9550670de0b6b3a7640000610f5a8b87614318565b610f6491906142f6565b9450851580610f71575084155b15610f995760405163492d6d1760e01b81526004810187905260248101869052604401610d59565b6000878152600160209081526040808320855181549387015192870151606088015160808901516001600160801b039093166001600160a01b031990961695909517600160801b63ffffffff958616021767ffffffffffffffff60a01b1916600160a01b9185169190910263ffffffff60c01b191617600160c01b94841694909402939093176001600160e01b0316600160e01b92909316919091029190911790556110657f00000000000000000000000000000000000000000000000000000000000000008c61435f565b3360009081526004602090815260408083208c84529091528120805492935083929091906110949084906142de565b9091555050606083015160008981526003602052604090206110bb91899089908f906126af565b6000806110c6612150565b6110ce612263565b91509150336001600160a01b031663c171d27e8a8a8f8f6040518563ffffffff1660e01b81526004016111049493929190614293565b600060405180830381600087803b15801561111e57600080fd5b505af1158015611132573d6000803e3d6000fd5b5050505061114589836108b791906142de565b6111526108cf89836142de565b60808086015160408088015188516020808b015184516001600160801b03909316835263ffffffff908116918301919091529281018e9052606081018d90529384018790529181169291169033907ff38f2bc2b712352b1d4a9ea95291a1c688835ac9f70a7a9d0aec57712c8b19129060a00160405180910390a4505050505050506001600081905550985098509895505050505050565b600082815260036020908152604080832060018352818420825160a08101845290546001600160801b03808216835263ffffffff600160801b808404821697850197909752600160a01b8304811695840195909552600160c01b820485166060840152600160e01b90910490931660808201528154919490938284169392049091169061127687610628565b905061128186611fdf565b8560000160006101000a8154816001600160801b0302191690836001600160801b03160217905550600061132a827f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008a89600001516001600160801b03168a6020015163ffffffff168b606001518c6040015161131f9190614376565b63ffffffff166125d9565b905061133581611fdf565b86546001600160801b03918216600160801b908102918316828117808b559284161792910416600086831161136b576000611375565b611375878461435f565b9050600087841161138f5761138a848961435f565b611392565b60005b905060008784116113a45760006113ae565b6113ae888561435f565b905060008885116113c8576113c3858a61435f565b6113cb565b60005b60405163a9059cbb60e01b8152336004820152602481018590529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561143657600080fd5b505af115801561144a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146e9190614067565b506040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156114dd57600080fd5b505af11580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115159190614067565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b69190614067565b506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561162557600080fd5b505af1158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190614067565b505050505050505050505050505050565b60005460011461169157604051635cd4e48360e01b815260040160405180910390fd5b6002600055856116b457604051631411378d60e11b815260040160405180910390fd5b846116d25760405163564b486560e01b815260040160405180910390fd5b60006040518061010001604052808b6001600160a01b0316815260200189151581526020018615158152602001851515815260200161171060055490565b63ffffffff1681526020018a8152602001888152602001878152509050600061173c8260a00151611f32565b905061174f607863ffffffff83166142de565b826080015163ffffffff1611156117795760405163536e15e160e01b815260040160405180910390fd5b60006117888360a00151610628565b60a08085018051600090815260016020908152604080832081519586018252546001600160801b038116865263ffffffff600160801b8204811687850152600160a01b82048116878401908152600160c01b8304821660608901908152600160e01b90930490911660808801529451845260039092528220905192519495509293909161181491614376565b90506000612710846080015163ffffffff168860c001516118359190614318565b61183f91906142f6565b905060008088602001511561188b5784546118649084906001600160801b03166142de565b8554909250611884908f90600160801b90046001600160801b031661435f565b90506118c4565b84546118a1908f906001600160801b031661435f565b85549092506118c1908490600160801b90046001600160801b03166142de565b90505b60018501546001600160801b03166118e4670de0b6b3a764000084614318565b6118ee91906142f6565b60018601549092506001600160801b0316611911670de0b6b3a764000083614318565b61191b91906142f6565b9050600061198b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085858b600001516001600160801b03168c6020015163ffffffff168b63ffffffff16612058565b905080600f0b88600f0b13156119c257604051630cd4424b60e41b8152600f89810b600483015282900b6024820152604401610d59565b6119eb8a602001518b60c001518c60e001518d608001518a61277690949392919063ffffffff16565b50505050505050826020015115611b1257826060015115611a355760e083015183516001600160a01b03166000908152600260205260408120611a30929091906120a6565b611a70565b825160e0840151611a70916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124ce565b826040015115611a935760c0830151611a8d906002906000612413565b50611c25565b6000611a9d612150565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611acd916000908b908b90600401614293565b600060405180830381600087803b158015611ae757600080fd5b505af1158015611afb573d6000803e3d6000fd5b50505050611a8d8460c00151826108b791906142de565b826060015115611b4a5760e083015183516001600160a01b03166000908152600260205260408120611b459290916120a6565b611b85565b825160e0840151611b85916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916124ce565b826040015115611ba35760c0830151611a8d90600290600090612413565b6000611bad612263565b60c085015160405163491dc51560e11b8152919250339163923b8a2a91611bde91600091908b908b90600401614293565b600060405180830381600087803b158015611bf857600080fd5b505af1158015611c0c573d6000803e3d6000fd5b50505050611c238460c00151826108cf91906142de565b505b8260a0015183600001516001600160a01b0316336001600160a01b03167fe42b42fe878e256d1efbfb2ba292aadeac0228bbaa31f4ef8537522bdfa3ea1986602001518760c001518860e00151604051611c949392919092151583526020830191909152604082015260600190565b60405180910390a45050600160005550505050505050505050565b60008054600114611cd357604051635cd4e48360e01b815260040160405180910390fd5b6002600055851580611ce3575084155b15611d01576040516381552f0360e01b815260040160405180910390fd5b60008881526003602052604090206001810154600160801b900463ffffffff16611d3e57604051631d2ad63f60e01b815260040160405180910390fd5b6000611d4960055490565b825460018401549192506000916001600160801b0391821691611d6d91168b614318565b611d7791906142f6565b835460018501549192506000916001600160801b03600160801b909204821691611da291168b614318565b611dac91906142f6565b9050808210611dbb5780611dbd565b815b945084611ddd5760405163e5664db760e01b815260040160405180910390fd5b6001600160a01b038b1660009081526004602090815260408083208f845290915281208054879290611e109084906142de565b90915550611e239050848b8b88876126af565b8715611e3b57611e3560028b8b612413565b50611ecd565b600080611e46612150565b611e4e612263565b6040516302a3517f60e31b81529193509150339063151a8bf890611e7c908f908f908e908e90600401614293565b600060405180830381600087803b158015611e9657600080fd5b505af1158015611eaa573d6000803e3d6000fd5b50505050611ebd8c836108b791906142de565b611eca6108cf8c836142de565b50505b604080518b8152602081018b90529081018690528c906001600160a01b038d169033907f86e4803447f73017bf832b0ac69cb7afa3333a5fa823ec42a9f6cf8d17b50ecc9060600160405180910390a450506001600055509098975050505050505050565b60008181526001602052604081208054600160c01b900463ffffffff16611f6c57604051631d2ad63f60e01b815260040160405180910390fd5b600554815490925063ffffffff600160a01b9091048116908316811015611f91578092505b815463ffffffff60c01b1916600160c01b63ffffffff85160217825560405184907fd69bdb2831892ad6046f30af0f12362aef46cce34d58ed7ad9b3ef8c44b1b46690600090a25050919050565b60006001600160801b03821115611ff557600080fd5b5090565b6040820151825160009182916001600160801b0391821691829161201e911686614318565b61202891906142f6565b92508085602001516001600160801b0316856120449190614318565b61204e91906142f6565b9150509250929050565b60008061206b60008a8a8a8989896125d9565b90506000612079828a612895565b90506000612087888b612895565b9050612097600f82900b836128be565b9b9a5050505050505050505050565b81156120f5576120b582611fdf565b835484906000906120d09084906001600160801b03166142b3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b801561214b5761210481611fdf565b83548490601090612126908490600160801b90046001600160801b03166142b3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b505050565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b906044015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516121d69190614258565b600060405180830381855afa9150503d8060008114612211576040519150601f19603f3d011682016040523d82523d6000602084013e612216565b606091505b509150915081158061222a57508051602014155b156122485760405163056a754560e51b815260040160405180910390fd5b8080602001905181019061225c9190614216565b9250505090565b604051306024820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823160e01b90604401612198565b60006122b9612150565b9050818110156122e657604051634e71911d60e11b81526004810183905260248101829052604401610d59565b5050565b60006122f4612263565b9050818110156122e65760405163c66162eb60e01b81526004810183905260248101829052604401610d59565b61232b85826128fb565b61233484611fdf565b8554869060009061234f9084906001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061237c83611fdf565b8554869060109061239e908490600160801b90046001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506123cb82611fdf565b6001860180546000906123e89084906001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b33600090815260208490526040902082156124715761243183611fdf565b8154829060009061244c9084906001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b81156124c75761248082611fdf565b815482906010906124a2908490600160801b90046001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161252a9190614258565b6000604051808303816000865af19150503d8060008114612567576040519150601f19603f3d011682016040523d82523d6000602084013e61256c565b606091505b50915091508180156125965750805115806125965750808060200190518101906125969190614067565b6125d25760405162461bcd60e51b815260206004820152600d60248201526c151c985b9cd9995c8819985a5b609a1b6044820152606401610d59565b5050505050565b6000806125e68588612895565b905060006125f4878a612895565b90506000612606600160401b836128be565b9050841561268257600061261a8787612990565b9050600061262a83600f0b6129cd565b9050600061263c600f83900b846128be565b905060006126678f61265e61265385600f0b612a87565b600f8b900b90612b24565b600f0b90612b5a565b9050612677600f82900b8e612b8d565b9750505050506126a1565b612097896126988d61265e600f88900b86612b24565b600f0b90612b8d565b505050979650505050505050565b6126b985826128fb565b6126c284611fdf565b855486906000906126dd9084906001600160801b03166142b3565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061270a83611fdf565b8554869060109061272c908490600160801b90046001600160801b03166142b3565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061275982611fdf565b6001860180546000906123e89084906001600160801b03166142b3565b61278085826128fb565b83156128225761278f83611fdf565b855486906000906127aa9084906001600160801b03166142b3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506127d782611fdf565b855486906010906127f9908490600160801b90046001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506125d2565b61282b82611fdf565b855486906000906128469084906001600160801b0316614337565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061287383611fdf565b855486906010906123e8908490600160801b90046001600160801b03166142b3565b6000806128aa83670de0b6b3a76400006142f6565b90506128b68482612bb2565b949350505050565b6000600f82810b9084900b0360016001607f1b031981128015906128e9575060016001607f1b038113155b6128f257600080fd5b90505b92915050565b600182015460009061291a90600160801b900463ffffffff1683614376565b905063ffffffff81161561214b57825460028401805463ffffffff9384166001600160801b038085168202909201909255600386018054600160801b94859004831684020190556001860180546004909701805492881690930290910190915563ffffffff60801b199094169290911602179055565b6000806129a761299f84612be9565b600f0b612bf9565b905060006129b485612c1b565b90506129c4600f82900b83612b24565b95945050505050565b6000600160401b600f83900b1215806129ea5750600082600f0b13155b15612a0e57604051630e59931d60e31b8152600f83900b6004820152602401610d59565b67f999999999999999600f83900b13801590612a365750670666666666666666600f83900b12155b15612a44576128f582612c29565b670666666666666666600f83900b1215612a61576128f582612cd0565b6000612a79612a74600160401b856128be565b612cd0565b6124c790614393565b919050565b600080612aa1600f84900b68016a09e667f3bcc908612d9a565b90506000612adf612ad4612ac9612aba85600f0b612df2565b6753dd02a4f5ee2e4690612b24565b600160401b90612b5a565b600160401b90612d9a565b90506000612aed8383612e25565b9050600083600f0b1215612b0a57612b0781600f0b612ef5565b90505b60006107a3612b1d600160401b84612b5a565b6001603f1b905b6000600f83810b9083900b0260401d60016001607f1b031981128015906128e9575060016001607f1b038113156128f257600080fd5b6000600f83810b9083900b0160016001607f1b031981128015906128e9575060016001607f1b038113156128f257600080fd5b600080612ba283670de0b6b3a76400006142f6565b90506128b6600f85900b82612f10565b600081612bbe57600080fd5b6000612bca8484612f78565b905060016001607f1b036001600160801b03821611156128f257600080fd5b60006128f5826301e18558612bb2565b60008082600f0b1215612c0b57600080fd5b6128f5604083600f0b901b6130da565b60006128f582612710612bb2565b600080612c3e600f84900b6001603f1b6128be565b90506000612c50600f83900b83612b24565b905060006129c4612cc5612cb5612c8d6721d0a04b0e9b94f161265e612c7f67c2bf5d74c724e53e1989612b24565b61265e600f8a900b8a612b24565b612cac6726a8f3c1f21b336e61265e6787c57e5da70d3c8f1989612b24565b600f0b90612d9a565b68015d71f5721242c78790612b5a565b600f85900b90612b24565b600080612cf261299f612cea612ad4600f87900b87612b24565b600f0b613248565b90506000612d166707a1e70f720eca4361265e6801000bf627fa1884101985612b24565b90506000612d3a6810aeac93f55267a9a561265e68041ed34a256149023686612b24565b90506000612d6f68072c7d592d021fb1db61265e612d616808c27b4617f5f800ea88612b24565b61265e600f89900b89612b24565b90506000612d8f612d84600f85900b84612d9a565b600f86900b90612b5a565b979650505050505050565b600081600f0b60001415612dad57600080fd5b600082600f0b604085600f0b901b81612dc857612dc86143e6565b05905060016001607f1b031981128015906128e9575060016001607f1b038113156128f257600080fd5b6000600f82900b60016001607f1b03191415612e0d57600080fd5b600082600f0b12612e1e57816128f5565b5060000390565b600080612e77612cc5612e67612e5c612e4b600f88900b68010fb844255a12d72e612b24565b68017401c57014c38f131990612b5a565b600f87900b90612b24565b68016a09e667f3bcc90890612b5a565b90506000612ea3612e94612e5c6748d4c730f051a5fd1985612b5a565b67413c831bb169f87490612b5a565b905060006107a3612eea612edf612ed4612ecc612ec4600f8c900b8c612b24565b600f0b612ef5565b600f0b613282565b600f86900b90612b24565b600f88900b90612b24565b600160401b906128be565b6000600f82900b60016001607f1b03191415612e1e57600080fd5b600081612f1f575060006128f5565b600083600f0b1215612f3057600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b03811115612f5f57600080fd5b60401b8119811115612f7057600080fd5b019392505050565b600081612f8457600080fd5b60006001600160c01b038411612faf5782604085901b81612fa757612fa76143e6565b0490506130c6565b60c084811c6401000000008110612fc8576020918201911c5b620100008110612fda576010918201911c5b6101008110612feb576008918201911c5b60108110612ffb576004918201911c5b6004811061300b576002918201911c5b6002811061301a576001820191505b60bf820360018603901c6001018260ff0387901b8161303b5761303b6143e6565b0492506001600160801b0383111561305257600080fd5b608085901c83026001600160801b038616840260c088901c604089901b8281101561307e576001820391505b608084901b92900382811015613095576001820391505b829003608084901c82146130ab576130ab6143ba565b8881816130ba576130ba6143e6565b04870196505050505050505b6001600160801b038111156128f257600080fd5b6000816130e957506000919050565b816001600160801b82106131025760809190911c9060401b5b600160401b82106131185760409190911c9060201b5b640100000000821061312f5760209190911c9060101b5b6201000082106131445760109190911c9060081b5b61010082106131585760089190911c9060041b5b6010821061316b5760049190911c9060021b5b600882106131775760011b5b6001818581613188576131886143e6565b048201901c905060018185816131a0576131a06143e6565b048201901c905060018185816131b8576131b86143e6565b048201901c905060018185816131d0576131d06143e6565b048201901c905060018185816131e8576131e86143e6565b048201901c90506001818581613200576132006143e6565b048201901c90506001818581613218576132186143e6565b048201901c90506000818581613230576132306143e6565b04905080821061324057806129c4565b509392505050565b60008082600f0b1361325957600080fd5b6080613264836132d7565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b6000600160461b82600f0b1261329757600080fd5b683fffffffffffffffff1982600f0b12156132b457506000919050565b6128f5608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d6133b2565b60008082600f0b136132e857600080fd5b6000600f83900b600160401b8112613302576040918201911d5b6401000000008112613316576020918201911d5b620100008112613328576010918201911d5b6101008112613339576008918201911d5b60108112613349576004918201911d5b60048112613359576002918201911d5b60028112613368576001820191505b603f19820160401b600f85900b607f8490031b6001603f1b5b60008113156133a75790800260ff81901c8281029390930192607f011c9060011d613381565b509095945050505050565b6000600160461b82600f0b126133c757600080fd5b683fffffffffffffffff1982600f0b12156133e457506000919050565b6001607f1b60006001603f1b8416600f0b13156134125770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b131561343f577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b131561346c577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156134995770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b13156134c6577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b13156134f357700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156135205770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561354d57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156135795770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b13156135a5577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156135d157700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156135fd577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561362957700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156136555770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315613681577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156136ad5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156136d8577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b131561370357700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b131561372e5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561375957700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156137845770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b13156137af577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156137da57700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b1315613805577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561382f57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156138595770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b1315613883577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156138ad5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156138d7577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b131561390157700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b131561392b5770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561395557700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b131561397e5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b13156139a7577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156139d057700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156139f9577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b1315613a2257700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b1315613a4b5770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315613a74577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b1315613a9d5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315613ac5577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b1315613aed57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b1315613b155770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b1315613b3d57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b1315613b655770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613b8d577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b1315613bb557700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b1315613bdd577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b1315613c0457700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b1315613c2b5770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315613c52577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b1315613c795770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315613ca0577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b1315613cc757700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b1315613cee5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b1315613d1557700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b1315613d3b5770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315613d61577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b1315613d8757700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613dad577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315613dd357700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315613df95770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315613e1f577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315613e455770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156128f557600080fd5b80356001600160a01b0381168114612a8257600080fd5b60008083601f840112613e9057600080fd5b50813567ffffffffffffffff811115613ea857600080fd5b602083019150836020828501011115613ec057600080fd5b9250929050565b803563ffffffff81168114612a8257600080fd5b600060208284031215613eed57600080fd5b6124c782613e67565b60008060408385031215613f0957600080fd5b613f1283613e67565b946020939093013593505050565b60008060008060008060008060006101008a8c031215613f3f57600080fd5b613f488a613e67565b985060208a0135975060408a0135613f5f816143fc565b965060608a0135955060808a0135945060a08a0135613f7d816143fc565b935060c08a0135613f8d816143fc565b925060e08a013567ffffffffffffffff811115613fa957600080fd5b613fb58c828d01613e7e565b915080935050809150509295985092959850929598565b600080600060608486031215613fe157600080fd5b613fea84613e67565b95602085013595506040909401359392505050565b60008060008060006080868803121561401757600080fd5b61402086613e67565b94506020860135935060408601359250606086013567ffffffffffffffff81111561404a57600080fd5b61405688828901613e7e565b969995985093965092949392505050565b60006020828403121561407957600080fd5b81516128f2816143fc565b60006020828403121561409657600080fd5b5035919050565b600080600080600080600060c0888a0312156140b857600080fd5b873596506140c860208901613e67565b9550604088013594506060880135935060808801356140e6816143fc565b925060a088013567ffffffffffffffff81111561410257600080fd5b61410e8a828b01613e7e565b989b979a50959850939692959293505050565b6000806040838503121561413457600080fd5b50508035926020909101359150565b60008060006060848603121561415857600080fd5b505081359360208301359350604090920135919050565b60008060008060008060008060e0898b03121561418b57600080fd5b88356001600160801b03811681146141a257600080fd5b97506141b060208a01613ec7565b96506141be60408a01613ec7565b95506141cc60608a01613ec7565b94506080890135935060a0890135925060c089013567ffffffffffffffff8111156141f657600080fd5b6142028b828c01613e7e565b999c989b5096995094979396929594505050565b60006020828403121561422857600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000825160005b81811015614279576020818601810151858301520161425f565b81811115614288576000828501525b509190910192915050565b8481528360208201526060604082015260006107a360608301848661422f565b60006001600160801b038083168185168083038211156142d5576142d56143d0565b01949350505050565b600082198211156142f1576142f16143d0565b500190565b60008261431357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614332576143326143d0565b500290565b60006001600160801b0383811690831681811015614357576143576143d0565b039392505050565b600082821015614371576143716143d0565b500390565b600063ffffffff83811690831681811015614357576143576143d0565b600081600f0b60016001607f1b03198114156143b1576143b16143d0565b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b801515811461440a57600080fd5b5056fea2646970667358221220b45d5e499617f2be8d2b5b6e5a1844e5da311207b29caf60b8b2791f00b7829164736f6c63430008060033",
    "sourceMap": "102:2068:20:-:0;;;2563:1:0;2538:26;;169:1:20;147:23;;102:2068;;;;;;;;;;3327:10:0;-1:-1:-1;;;;;3309:47:0;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3230:128;;;;;;-1:-1:-1;;;3230:128:0;;;;;;;;;;;;;;;;;;;;;102:2068:20;;14:177:29;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:564::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:2;;;421:1;418;411:12;372:2;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;660:2;649:9;645:18;639:25;629:35;;704:3;693:9;689:19;683:26;673:36;;749:3;738:9;734:19;728:26;718:36;;362:398;;;;;;;;:::o;:::-;102:2068:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "102:2068:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2820:57:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2820:57:0;;;;-1:-1:-1;;;2820:57:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11392:15:29;;;11374:34;;11444:15;;;11439:2;11424:18;;11417:43;11496:15;;;;11476:18;;;11469:43;;;;11560:10;11548:23;;;;11543:2;11528:18;;11521:51;-1:-1:-1;11588:19:29;;11581:35;11647:3;11632:19;;11625:35;11691:3;11676:19;;11669:35;;;;11308:3;11293:19;2820:57:0;;;;;;;;177:69:20;;;;;;:::i;:::-;;:::i;:::-;;5002:160:0;;;;;;:::i;:::-;;:::i;:::-;;;14529:10:29;14517:23;;;14499:42;;14487:2;14472:18;5002:160:0;14454:93:29;386:303:20;;;;;;:::i;:::-;;:::i;147:23::-;;;;;;;;;12951:25:29;;;12939:2;12924:18;147:23:20;12906:76:29;1978:47:0;;;;;2441:40;;;;;;;;-1:-1:-1;;;;;7882:32:29;;;;7864:51;;7852:2;7837:18;2441:40:0;7819:102:29;2611:60:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2611:60:0;;;;-1:-1:-1;;;2611:60:0;;;;;-1:-1:-1;;;2611:60:0;;;;;-1:-1:-1;;;2611:60:0;;;;;-1:-1:-1;;;2611:60:0;;;;;;;;;-1:-1:-1;;;;;12508:47:29;;;;12490:66;;12575:10;12621:15;;;12616:2;12601:18;;12594:43;12673:15;;;12653:18;;;12646:43;;;;12725:15;;12720:2;12705:18;;12698:43;12778:15;-1:-1:-1;12757:19:29;;12750:44;12477:3;12462:19;2611:60:0;12444:356:29;2718:55:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2718:55:0;;;;-1:-1:-1;;;2718:55:0;;;;;;;;;-1:-1:-1;;;;;10929:15:29;;;10911:34;;10981:15;;;;10976:2;10961:18;;10954:43;10831:18;2718:55:0;10813:190:29;2169:51:0;;;;;16591:628;;;;;;:::i;:::-;;:::i;:::-;;;9416:2:29;9405:22;;;;9387:41;;9375:2;9360:18;16591:628:0;9342:92:29;2072:50:0;;;;;2924:73;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1878:53;;1920:11;1878:53;;8438:785;;;;;;:::i;:::-;;:::i;11453:704::-;;;;;;:::i;:::-;;:::i;:::-;;;;13560:25:29;;;13616:2;13601:18;;13594:34;;;;13533:18;11453:704:0;13515:119:29;1780:51:0;;1825:6;1780:51;;9273:490;;;;;;:::i;:::-;;:::i;5904:2457::-;;;;;;:::i;:::-;;:::i;:::-;;;;9121:25:29;;;9177:2;9162:18;;9155:34;;;;9205:18;;;9198:34;9109:2;9094:18;5904:2457:0;9076:162:29;2355:39:0;;;;;695:1473:20;;;;;;:::i;:::-;;:::i;2267:41:0:-;;;;;12444:4075;;;;;;:::i;:::-;;:::i;9843:1560::-;;;;;;:::i;:::-;;:::i;177:69:20:-;237:2;229:4;;:10;;;;;;;:::i;:::-;;;;-1:-1:-1;;;177:69:20:o;5002:160:0:-;5079:20;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;5127:28:::1;5148:6:::0;5127:20:::1;:28::i;:::-;3118:1:::0;3109:6;:10;5111:44;5002:160;-1:-1:-1;;5002:160:0:o;386:303:20:-;515:24;542:16;;;:8;:16;;;;;587:32;606:12;587:18;:32::i;:::-;568:51;;-1:-1:-1;;;;;;568:51:20;-1:-1:-1;;;;;568:51:20;;;;;;;649:33;668:13;649:18;:33::i;:::-;629:53;;-1:-1:-1;;;;;629:53:20;;;;;-1:-1:-1;;;629:53:20;;;;-1:-1:-1;;;386:303:20:o;16591:628:0:-;16658:16;16711:20;;;:12;:20;;;;;;;;16686:45;;;;;;;;;-1:-1:-1;;;;;16686:45:0;;;;;-1:-1:-1;;;16686:45:0;;;;;;;;;;;-1:-1:-1;;;16686:45:0;;;;;;;;;;-1:-1:-1;;;16686:45:0;;;;;;;;;;-1:-1:-1;;;16686:45:0;;;;;;-1:-1:-1;16686:45:0;;;;16658:16;;16754:32;;16686:45;16754:32;:::i;:::-;16850:25;16907:16;;;:8;:16;;;;;;;;:27;;;;;;;;;-1:-1:-1;;;;;16907:27:0;;;;;-1:-1:-1;;;16907:27:0;;;;;;;;;;;;;-1:-1:-1;16907:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16907:27:0;;;;;;;;;;;;;;;;;;;;16741:45;;-1:-1:-1;16850:25:0;;;;16907:38;;:27;1825:6;;16907:27;:38;:::i;:::-;16849:96;;;;16985:227;17028:16;17058:17;17089;17120:18;17152:3;:10;;;-1:-1:-1;;;;;16985:227:0;17176:3;:9;;;16985:227;;17199:3;16985:227;;:29;:227::i;:::-;16973:239;16591:628;-1:-1:-1;;;;;;16591:628:0:o;8438:785::-;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;8607:13;;:31;::::1;;;-1:-1:-1::0;8624:14:0;;8607:31:::1;8603:61;;;8647:17;;-1:-1:-1::0;;;8647:17:0::1;;;;;;;;;;;8603:61;-1:-1:-1::0;;;;;8674:18:0;::::1;;::::0;;;:7:::1;:18;::::0;;;;:47:::1;::::0;8701:8;8711:9;8674:26:::1;:47::i;:::-;8748:16;::::0;8805:13;;8801:44:::1;;8831:14;:12;:14::i;:::-;8820:25;;8801:44;8859:14:::0;;8855:47:::1;;8887:15;:13;:15::i;:::-;8875:27;;8855:47;8912:80;::::0;-1:-1:-1;;;8912:80:0;;8938:10:::1;::::0;-1:-1:-1;;8912:80:0::1;::::0;8966:8;;8976:9;;8987:4;;;;8912:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9026:8;9038:1;9026:13;9022:57;;9041:38;9059:19;9070:8:::0;9059;:19:::1;:::i;:::-;9041:17;:38::i;:::-;9093:14:::0;;9089:61:::1;;9109:41;9128:21;9140:9:::0;9128;:21:::1;:::i;:::-;9109:18;:41::i;:::-;9165:51;::::0;;13560:25:29;;;13616:2;13601:18;;13594:34;;;9165:51:0;;-1:-1:-1;;;;;9165:51:0;::::1;::::0;9173:10:::1;::::0;9165:51:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;;3118:1:0;3109:6;:10;-1:-1:-1;;;;;8438:785:0:o;11453:704::-;11571:16;11589:17;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;11626:17;11622:50:::1;;11652:20;;-1:-1:-1::0;;;11652:20:0::1;;;;;;;;;;;11622:50;11682:28;11713:16:::0;;;:8:::1;:16;::::0;;;;11743:22:::1;::::0;::::1;::::0;-1:-1:-1;;;11743:22:0;::::1;;;11739:60;;11779:20;;-1:-1:-1::0;;;11779:20:0::1;;;;;;;;;;;11739:60;11833:18;::::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;11833:18:0;;::::1;::::0;;-1:-1:-1;;;11833:18:0;;;::::1;::::0;::::1;;::::0;::::1;::::0;-1:-1:-1;11833:18:0;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;11833:18:0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;:32:::1;::::0;11852:12;;11833:18:::1;:32;:::i;:::-;11886:10;11876:21;::::0;;;:9:::1;:21;::::0;;;;;;;:29;;;;;;;;:45;;11809:56;;-1:-1:-1;11809:56:0;;-1:-1:-1;11909:12:0;;11876:45:::1;::::0;11909:12;;11876:45:::1;:::i;:::-;::::0;;;-1:-1:-1;11947:68:0::1;::::0;-1:-1:-1;11962:8:0;11972:9;11983:12;11997:17:::1;368:4:20::0;;;252:128;11997:17:0::1;11947:7:::0;;:68;;;:14:::1;:68::i;:::-;12033:10;12025:19;::::0;;;:7:::1;:19;::::0;;;;:48:::1;::::0;12053:8;12063:9;12025:27:::1;:48::i;:::-;12089:61;::::0;;9121:25:29;;;9177:2;9162:18;;9155:34;;;9205:18;;;9198:34;;;12108:6:0;;12096:10:::1;::::0;12089:61:::1;::::0;9109:2:29;9094:18;12089:61:0::1;;;;;;;-1:-1:-1::0;3118:1:0;3109:6;:10;11453:704;;;;-1:-1:-1;11453:704:0;-1:-1:-1;11453:704:0:o;9273:490::-;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;9414:13;;:31;::::1;;;-1:-1:-1::0;9431:14:0;;9414:31:::1;9410:61;;;9454:17;;-1:-1:-1::0;;;9454:17:0::1;;;;;;;;;;;9410:61;9481:37;:7;9498:8:::0;9508:9;9481:16:::1;:37::i;:::-;-1:-1:-1::0;9548:13:0;;9544:66:::1;;9563:47;9570:5;-1:-1:-1::0;;;;;9563:26:0::1;9590:9:::0;9601:8;9563:26:::1;:47::i;:::-;9624:14:::0;;9620:69:::1;;9640:49;9647:6;-1:-1:-1::0;;;;;9640:27:0::1;9668:9:::0;9679;9640:27:::1;:49::i;:::-;9704:52;::::0;;13560:25:29;;;13616:2;13601:18;;13594:34;;;9704:52:0;;-1:-1:-1;;;;;9704:52:0;::::1;::::0;9713:10:::1;::::0;9704:52:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;;3118:1:0;3109:6;:10;-1:-1:-1;9273:490:0:o;5904:2457::-;6183:14;6211:16;6241:17;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;;;6386:63:::1;::::0;;6411:4:::1;6902:2:29::0;6898:15;-1:-1:-1;;6894:53:29;6386:63:0::1;::::0;;::::1;6882:66:29::0;;;;-1:-1:-1;6982:16:29;;;-1:-1:-1;;;;;;6978:62:29;6964:12;;;6957:84;-1:-1:-1;7114:16:29;;;-1:-1:-1;;;;;;7110:25:29;;;7096:12;;;7089:47;7170:16;;;7166:25;;7152:12;;;7145:47;7226:16;;;;7222:25;7208:12;;;7201:47;6386:63:0;;;;;;;;;7264:12:29;;;;6386:63:0;;6376:74;;;;::::1;::::0;;;;6464:20;;;-1:-1:-1;6464:20:0;;;;;:34;6376:74;;-1:-1:-1;6321:16:0::1;::::0;6339:17:::1;::::0;6464:34:::1;-1:-1:-1::0;;;6464:34:0;;::::1;;:39:::0;6460:72:::1;;6512:20;;-1:-1:-1::0;;;6512:20:0::1;;;;;;;;;;;6460:72;6554:3;6546:5;:11;;;:24;;;;6569:1;6561:5;:9;;;6546:24;6542:54;;;6579:17;::::0;-1:-1:-1;;;6579:17:0;;14529:10:29;14517:23;;6579:17:0::1;::::0;::::1;14499:42:29::0;14472:18;;6579:17:0::1;;;;;;;;6542:54;-1:-1:-1::0;;;;;6610:11:0;::::1;6606:43;;6630:19;::::0;-1:-1:-1;;;6630:19:0;;-1:-1:-1;;;;;10625:47:29;;6630:19:0::1;::::0;::::1;10607:66:29::0;10580:18;;6630:19:0::1;10562:117:29::0;6606:43:0::1;6679:13;6663:12;:29;6659:73;;6701:31;::::0;-1:-1:-1;;;6701:31:0;;::::1;::::0;::::1;12951:25:29::0;;;12924:18;;6701:31:0::1;12906:76:29::0;6659:73:0::1;6759:19;6771:7:::0;1825:6:::1;6759:19;:::i;:::-;6746:10;:32;:51;;;-1:-1:-1::0;6782:15:0;;6746:51:::1;6742:91;;;6806:27;::::0;-1:-1:-1;;;6806:27:0;;::::1;::::0;::::1;12951:25:29::0;;;12924:18;;6806:27:0::1;12906:76:29::0;6742:91:0::1;500:3:19;6847:5:0;:24;;;:40;;;;6883:4;6875:5;:12;;;6847:40;6843:70;;;6896:17;::::0;-1:-1:-1;;;6896:17:0;;14529:10:29;14517:23;;6896:17:0::1;::::0;::::1;14499:42:29::0;14472:18;;6896:17:0::1;14454:93:29::0;6843:70:0::1;6924:22;6949:181;;;;;;;;6983:6;-1:-1:-1::0;;;;;6949:181:0::1;;;;;7010:5;6949:181;;;;;;7039:8;6949:181;;;;;;7076:17;368:4:20::0;;;252:128;7076:17:0::1;6949:181;;;;;;7114:5;6949:181;;;;::::0;6924:206:::1;;7165:3;:12;;;7145:32;;:3;:17;;;:32;;;7141:63;;;7186:18;;-1:-1:-1::0;;;7186:18:0::1;;;;;;;;;;;7141:63;7214:10;7242:3;:17;;;7227:3;:12;;;:32;;;;:::i;:::-;7214:45;;7302:96;7338:1;7341:7;7350;7359:10;7371:3;:10;;;-1:-1:-1::0;;;;;7302:96:0::1;7383:3;:9;;;7302:96;;7394:3;7302:96;;:35;:96::i;:::-;7290:108:::0;-1:-1:-1;1825:6:0::1;7420:25;7433:12:::0;7420:10;:25:::1;:::i;:::-;7419:39;;;;:::i;:::-;7408:50:::0;-1:-1:-1;1825:6:0::1;7537:24;7549:12:::0;7537:9;:24:::1;:::i;:::-;7536:38;;;;:::i;:::-;7524:50:::0;-1:-1:-1;7588:13:0;;;:31:::1;;-1:-1:-1::0;7605:14:0;;7588:31:::1;7584:81;;;7628:37;::::0;-1:-1:-1;;;7628:37:0;;::::1;::::0;::::1;13560:25:29::0;;;13601:18;;;13594:34;;;13533:18;;7628:37:0::1;13515:119:29::0;7584:81:0::1;7676:20;::::0;;;:12:::1;:20;::::0;;;;;;;:26;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;7676:26:0;;::::1;-1:-1:-1::0;;;;;;7676:26:0;;;;;;;-1:-1:-1;;;7676:26:0::1;::::0;;::::1;;;-1:-1:-1::0;;;;7676:26:0;-1:-1:-1;;;7676:26:0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;7676:26:0;;-1:-1:-1;;;7676:26:0;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;7676:26:0::1;-1:-1:-1::0;;;7676:26:0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;7745:28:::1;7760:13;7745:12:::0;:28:::1;:::i;:::-;7793:10;7783:21;::::0;;;:9:::1;:21;::::0;;;;;;;:29;;;;;;;;:39;;7728:45;;-1:-1:-1;7728:45:0;;7783:29;;:21;:39:::1;::::0;7728:45;;7783:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;7938:17:0::1;::::0;::::1;::::0;7877:16:::1;::::0;;;:8:::1;:16;::::0;;;;:79:::1;::::0;7903:8;;7913:9;;7924:12;;7877:25:::1;:79::i;:::-;7984:16;8002:17:::0;8024:14:::1;:12;:14::i;:::-;8040:15;:13;:15::i;:::-;7983:73;;;;8091:10;-1:-1:-1::0;;;;;8066:51:0::1;;8118:8;8128:9;8139:4;;8066:78;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8154:38;8183:8;8172;:19;;;;:::i;8154:38::-;8202:41;8221:21;8233:9:::0;8221;:21:::1;:::i;8202:41::-;8315:9;::::0;;::::1;::::0;8301:12:::1;::::0;;::::1;::::0;8278:10;;8290:9:::1;::::0;;::::1;::::0;8259:95;;-1:-1:-1;;;;;11990:47:29;;;11972:66;;8259:95:0::1;12074:23:29::0;;;12054:18;;;12047:51;;;;12114:18;;;12107:34;;;12172:2;12157:18;;12150:34;;;12200:19;;;12193:35;;;8259:95:0;;;;::::1;::::0;::::1;::::0;8266:10:::1;::::0;8259:95:::1;::::0;;;;;11959:3:29;8259:95:0;;::::1;6273:2088;;;;;;;3118:1:::0;3109:6;:10;;;;5904:2457;;;;;;;;;;;;:::o;695:1473:20:-;774:24;801:16;;;:8;:16;;;;;;;;852:12;:20;;;;;827:45;;;;;;;;;-1:-1:-1;;;;;827:45:20;;;;;;-1:-1:-1;;;827:45:20;;;;;;;;;;;;-1:-1:-1;;;827:45:20;;;;;;;;;;;-1:-1:-1;;;827:45:20;;;;;;;;-1:-1:-1;;;827:45:20;;;;;;-1:-1:-1;827:45:20;;;923:16;;801;;827:45;;923:16;;;;941:17;;;;;;988:19;801:16;988:11;:19::i;:::-;969:38;;1036:32;1055:12;1036:18;:32::i;:::-;1017:51;;-1:-1:-1;;;;;;1017:51:20;-1:-1:-1;;;;;1017:51:20;;;;;;1261:10;;1285:9;;;;1323:17;;;;1308:12;;;;-1:-1:-1;;1102:248:20;;1151:9;;1174:16;;1204:17;;1235:12;;1102:248;;;;;;;;;;1308:32;;1323:17;1308:32;:::i;:::-;1102:248;;:35;:248::i;:::-;1078:272;;1380:33;1399:13;1380:18;:33::i;:::-;1360:53;;-1:-1:-1;;;;;;;;1360:53:20;;;;;;;;;;;;;;1466:16;;;;;1484:17;;;-1:-1:-1;1550:20:20;;;:47;;1596:1;1550:47;;;1573:20;1585:8;1573:9;:20;:::i;:::-;1527:70;;1611:20;1646:8;1634:9;:20;:47;;1661:20;1672:9;1661:8;:20;:::i;:::-;1634:47;;;1657:1;1634:47;1611:70;;1696:21;1733:9;1720:10;:22;:51;;1770:1;1720:51;;;1745:22;1758:9;1745:10;:22;:::i;:::-;1696:75;;1785:21;1822:9;1809:10;:22;:51;;1838:22;1850:10;1838:9;:22;:::i;:::-;1809:51;;;1834:1;1809:51;1874:48;;-1:-1:-1;;;1874:48:20;;1897:10;1874:48;;;8480:51:29;8547:18;;;8540:34;;;1785:75:20;;-1:-1:-1;1881:5:20;-1:-1:-1;;;;;1874:22:20;;;;8453:18:29;;1874:48:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1936:67:20;;-1:-1:-1;;;1936:67:20;;1963:10;1936:67;;;8166:34:29;1983:4:20;8216:18:29;;;8209:43;8268:18;;;8261:34;;;1943:5:20;-1:-1:-1;;;;;1936:26:20;;;;8101:18:29;;1936:67:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2018:50:20;;-1:-1:-1;;;2018:50:20;;2042:10;2018:50;;;8480:51:29;8547:18;;;8540:34;;;2025:6:20;-1:-1:-1;;;;;2018:23:20;;;;8453:18:29;;2018:50:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2082:69:20;;-1:-1:-1;;;2082:69:20;;2110:10;2082:69;;;8166:34:29;2130:4:20;8216:18:29;;;8209:43;8268:18;;;8261:34;;;2089:6:20;-1:-1:-1;;;;;2082:27:20;;;;8101:18:29;;2082:69:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1513:649;;;;764:1404;;;;;;;;695:1473;;:::o;12444:4075:0:-;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;12709:12;12705:39:::1;;12730:14;;-1:-1:-1::0;;;12730:14:0::1;;;;;;;;;;;12705:39;12758:13:::0;12754:41:::1;;12780:15;;-1:-1:-1::0;;;12780:15:0::1;;;;;;;;;;;12754:41;12806:26;12835:301;;;;;;;;12872:9;-1:-1:-1::0;;;;;12835:301:0::1;;;;;13001:14;12835:301;;;;;;13041:10;12835:301;;;;;;13075:8;12835:301;;;;;;13108:17;368:4:20::0;;;252:128;13108:17:0::1;12835:301;;;;;;12903:6;12835:301;;;;12932:7;12835:301;;;;12963:8;12835:301;;::::0;12806:330:::1;;13147:20;13170:36;13191:7;:14;;;13170:20;:36::i;:::-;13147:59:::0;-1:-1:-1;13277:22:0::1;1920:11;13277:22;::::0;::::1;;:::i;:::-;13257:7;:17;;;:42;;;13253:73;;;13308:18;;-1:-1:-1::0;;;13308:18:0::1;;;;;;;;;;;13253:73;13372:19;13394:27;13406:7;:14;;;13394:11;:27::i;:::-;13591:14;::::0;;::::1;::::0;;13553:22:::1;13578:28:::0;;;:12:::1;:28;::::0;;;;;;;13553:53;;;;::::1;::::0;;;-1:-1:-1;;;;;13553:53:0;::::1;::::0;;::::1;-1:-1:-1::0;;;13553:53:0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;13553:53:0;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;13553:53:0;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;;;13553:53:0;;::::1;::::0;;::::1;-1:-1:-1::0;13553:53:0;;;13660:14;;13651:24;;:8:::1;:24:::0;;;;;13717:17;;13702:12;;13372:49;;-1:-1:-1;13553:53:0;;:22;;13702:32:::1;::::0;::::1;:::i;:::-;13689:45;;13748:22;500:3:19;13792::0;:9;;;13774:27;;:7;:15;;;:27;;;;:::i;:::-;13773:48;;;;:::i;:::-;13748:73;;13860:21;13895:22:::0;13935:7:::1;:22;;;13931:376;;;14001:20:::0;;13993:46:::1;::::0;14025:14;;-1:-1:-1;;;;;14001:20:0::1;13993:46;:::i;:::-;14082:21:::0;;13977:62;;-1:-1:-1;14074:41:0::1;::::0;14107:8;;-1:-1:-1;;;14082:21:0;::::1;-1:-1:-1::0;;;;;14082:21:0::1;14074:41;:::i;:::-;14057:58;;13931:376;;;14178:20:::0;;14170:40:::1;::::0;14202:8;;-1:-1:-1;;;;;14178:20:0::1;14170:40;:::i;:::-;14253:21:::0;;14154:56;;-1:-1:-1;14245:47:0::1;::::0;14278:14;;-1:-1:-1;;;14253:21:0;::::1;-1:-1:-1::0;;;;;14253:21:0::1;14245:47;:::i;:::-;14228:64;;13931:376;14366:17;::::0;::::1;::::0;-1:-1:-1;;;;;14366:17:0::1;14337:25;1825:6;14337:13:::0;:25:::1;:::i;:::-;14336:47;;;;:::i;:::-;14445:17;::::0;::::1;::::0;14320:63;;-1:-1:-1;;;;;;14445:17:0::1;14415:26;1825:6;14415:14:::0;:26:::1;:::i;:::-;14414:48;;;;:::i;:::-;14397:65;;14477:21;14501:251;14548:16;14582:17;14617:13;14648:14;14680:3;:10;;;-1:-1:-1::0;;;;;14501:251:0::1;14708:3;:9;;;14501:251;;14735:3;14501:251;;:29;:251::i;:::-;14477:275;;14786:14;14771:29;;:12;:29;;;14767:86;;;14809:44;::::0;-1:-1:-1;;;14809:44:0;;9638:2:29;9627:22;;;14809:44:0::1;::::0;::::1;9609:41:29::0;9686:22;;;9666:18;;;9659:50;9582:18;;14809:44:0::1;9564:151:29::0;14767:86:0::1;14867:90;14880:7;:22;;;14904:7;:15;;;14921:7;:16;;;14939:7;:17;;;14867:7;:12;;:90;;;;;;;:::i;:::-;13483:1501;;;;;;;14998:7;:22;;;14994:1311;;;15040:7;:16;;;15036:240;;;15114:16;::::0;::::1;::::0;15084:17;;-1:-1:-1;;;;;15076:26:0::1;15111:1;15076:26:::0;;;:7:::1;:26;::::0;;;;:55:::1;::::0;:26;;15111:1;15076:34:::1;:55::i;:::-;15036:240;;;15198:17:::0;;15217:16:::1;::::0;::::1;::::0;15170:64:::1;::::0;15177:6:::1;-1:-1:-1::0;;;;;15170:27:0::1;::::0;::::1;:64::i;:::-;15294:7;:18;;;15290:359;;;15349:15;::::0;::::1;::::0;15332:36:::1;::::0;:7:::1;::::0;15366:1:::1;15332:16;:36::i;:::-;;14994:1311;;15290:359;15423:16;15442:14;:12;:14::i;:::-;15522:15;::::0;::::1;::::0;15474:73:::1;::::0;-1:-1:-1;;;15474:73:0;;15423:33;;-1:-1:-1;15497:10:0::1;::::0;15474:47:::1;::::0;:73:::1;::::0;15539:1:::1;::::0;15542:4;;;;15474:73:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15589:45;15618:7;:15;;;15607:8;:26;;;;:::i;14994:1311::-;15683:7;:16;;;15679:239;;;15754:16;::::0;::::1;::::0;15727:17;;-1:-1:-1;;;;;15719:26:0::1;15772:1;15719:26:::0;;;:7:::1;:26;::::0;;;;:55:::1;::::0;:26;;:34:::1;:55::i;:::-;15679:239;;;15840:17:::0;;15859:16:::1;::::0;::::1;::::0;15813:63:::1;::::0;15820:5:::1;-1:-1:-1::0;;;;;15813:26:0::1;::::0;::::1;:63::i;:::-;15936:7;:18;;;15932:363;;;15994:15;::::0;::::1;::::0;15974:36:::1;::::0;:7:::1;::::0;15991:1:::1;::::0;15974:16:::1;:36::i;15932:363::-;16065:17;16085:15;:13;:15::i;:::-;16169;::::0;::::1;::::0;16118:73:::1;::::0;-1:-1:-1;;;16118:73:0;;16065:35;;-1:-1:-1;16141:10:0::1;::::0;16118:47:::1;::::0;:73:::1;::::0;16166:1:::1;::::0;16169:15;16186:4;;;;16118:73:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16233:47;16264:7;:15;;;16252:9;:27;;;;:::i;16233:47::-;16047:248;15932:363;16393:14;::::0;::::1;::::0;16362:17;;16421:22:::1;::::0;;::::1;::::0;16457:15:::1;::::0;::::1;::::0;16486:16:::1;::::0;::::1;::::0;16320:192:::1;::::0;;8806:14:29;;8799:22;8781:41;;8838:18;;;8831:34;;;;8881:18;;;8874:34;16320:192:0;;-1:-1:-1;;;;;16320:192:0;;::::1;::::0;16338:10:::1;::::0;16320:192:::1;::::0;;;;;8769:2:29;16320:192:0;;::::1;-1:-1:-1::0;;3118:1:0;3109:6;:10;-1:-1:-1;;;;;;;;;;12444:4075:0:o;9843:1560::-;10057:20;3034:6;;3044:1;3034:11;3030:37;;3054:13;;-1:-1:-1;;;3054:13:0;;;;;;;;;;;3030:37;3087:1;3078:6;:10;10093:13;;;:31:::1;;-1:-1:-1::0;10110:14:0;;10093:31:::1;10089:61;;;10133:17;;-1:-1:-1::0;;;10133:17:0::1;;;;;;;;;;;10089:61;10160:28;10191:16:::0;;;:8:::1;:16;::::0;;;;10221:22:::1;::::0;::::1;::::0;-1:-1:-1;;;10221:22:0;::::1;;;10217:60;;10257:20;;-1:-1:-1::0;;;10257:20:0::1;;;;;;;;;;;10217:60;10287:16;10306:17;368:4:20::0;;;252:128;10306:17:0::1;10396:20:::0;;;10367:17;::::1;::::0;10287:36;;-1:-1:-1;10334:18:0::1;::::0;-1:-1:-1;;;;;10396:20:0;;::::1;::::0;10356:28:::1;::::0;10367:17:::1;10356:8:::0;:28:::1;:::i;:::-;10355:62;;;;:::i;:::-;10490:21:::0;;10461:17:::1;::::0;::::1;::::0;10334:83;;-1:-1:-1;10427:18:0::1;::::0;-1:-1:-1;;;;;;;;10490:21:0;;::::1;::::0;::::1;::::0;10449:29:::1;::::0;10461:17:::1;10449:9:::0;:29:::1;:::i;:::-;10448:64;;;;:::i;:::-;10427:85;;10550:10;10537;:23;:49;;10576:10;10537:49;;;10563:10;10537:49;10522:64:::0;-1:-1:-1;10600:17:0;10596:50:::1;;10626:20;;-1:-1:-1::0;;;10626:20:0::1;;;;;;;;;;;10596:50;-1:-1:-1::0;;;;;10657:20:0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;;;:28;;;;;;;;:44;;10689:12;;10657:20;:44:::1;::::0;10689:12;;10657:44:::1;:::i;:::-;::::0;;;-1:-1:-1;10742:62:0::1;::::0;-1:-1:-1;10742:7:0;10759:8;10769:9;10780:12;10794:9;10742:16:::1;:62::i;:::-;10854:10;10850:457;;;10880:37;:7;10897:8:::0;10907:9;10880:16:::1;:37::i;:::-;;10850:457;;;11000:16;11018:17:::0;11040:14:::1;:12;:14::i;:::-;11056:15;:13;:15::i;:::-;11086:83;::::0;-1:-1:-1;;;11086:83:0;;10999:73;;-1:-1:-1;10999:73:0;-1:-1:-1;11114:10:0::1;::::0;11086:56:::1;::::0;:83:::1;::::0;11143:8;;11153:9;;11164:4;;;;11086:83:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11203:38;11232:8;11221;:19;;;;:::i;11203:38::-;11255:41;11274:21;11286:9:::0;11274;:21:::1;:::i;11255:41::-;10985:322;;10850:457;11322:74;::::0;;9121:25:29;;;9177:2;9162:18;;9155:34;;;9205:18;;;9198:34;;;11322:74:0;;11354:6;;-1:-1:-1;;;;;11322:74:0;::::1;::::0;11331:10:::1;::::0;11322:74:::1;::::0;;;;;9109:2:29;11322:74:0;;::::1;-1:-1:-1::0;;3118:1:0;3109:6;:10;-1:-1:-1;9843:1560:0;;;-1:-1:-1;;;;;;;;9843:1560:0:o;5350:504::-;5422:20;5480;;;:12;:20;;;;;5514:17;;-1:-1:-1;;;5514:17:0;;;;5510:55;;5545:20;;-1:-1:-1;;;5545:20:0;;;;;;;;;;;5510:55;368:4:20;;5637:12:0;;368:4:20;;-1:-1:-1;;;;5637:12:0;;;;;;;5663:24;;-1:-1:-1;;5659:54:0;;;5705:8;5689:24;;5659:54;5759:33;;-1:-1:-1;;;;5759:33:0;-1:-1:-1;;;;5759:33:0;;;;;;5820:27;;5840:6;;5820:27;;-1:-1:-1;;5820:27:0;5444:410;;5350:504;;;:::o;212:136:17:-;265:9;-1:-1:-1;;;;;294:22:17;;;286:31;;;;;;-1:-1:-1;339:1:17;212:136::o;4915:356:16:-;5098:17;;;;5161:20;;5025:16;;;;-1:-1:-1;;;;;5090:26:16;;;;;;5138:44;;5153:29;5138:12;:44;:::i;:::-;5137:52;;;;:::i;:::-;5235:21;;;;5126:63;;-1:-1:-1;5261:3:16;;5212:45;;-1:-1:-1;;;;;5227:30:16;5212:12;:45;:::i;:::-;5211:53;;;;:::i;:::-;5199:65;;5066:205;4915:356;;;;;:::o;4193:698:15:-;4453:19;4484:14;4501:192;4534:1;4549:16;4579:17;4610;4641:6;4661:5;4680:3;4501:19;:192::i;:::-;4484:209;-1:-1:-1;4703:16:15;4722:36;4484:209;4740:17;4722;:36::i;:::-;4703:55;-1:-1:-1;4768:16:15;4787:48;:18;4817:17;4787:29;:48::i;:::-;4768:67;-1:-1:-1;4860:24:15;:13;;;;4874:9;4860:13;:24::i;:::-;4845:39;4193:698;-1:-1:-1;;;;;;;;;;;4193:698:15:o;753:268:14:-;881:13;;877:62;;919:20;:8;:18;:20::i;:::-;896:43;;;;:19;;:43;;;;-1:-1:-1;;;;;896:43:14;;:::i;:::-;;;-1:-1:-1;;;;;896:43:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;877:62:14;953:14;;949:65;;993:21;:9;:19;:21::i;:::-;969:45;;;;:20;;:45;;;;-1:-1:-1;;;969:45:14;;-1:-1:-1;;;;;969:45:14;;:::i;:::-;;;-1:-1:-1;;;;;969:45:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;949:65:14;753:268;;;:::o;3424:322:0:-;3555:64;;3613:4;3555:64;;;7864:51:29;3470:7:0;;;;;;3525:5;-1:-1:-1;;;;;3525:16:0;;-1:-1:-1;;;;7837:18:29;;3555:64:0;;;;-1:-1:-1;;3555:64:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3555:64:0;-1:-1:-1;;;;;;3555:64:0;;;;;;;;;;;3525:104;;;;3555:64;3525:104;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:140;;;;3644:7;3643:8;:29;;;;3655:4;:11;3670:2;3655:17;;3643:29;3639:56;;;3681:14;;-1:-1:-1;;;3681:14:0;;;;;;;;;;;3639:56;3723:4;3712:27;;;;;;;;;;;;:::i;:::-;3705:34;;;;3424:322;:::o;3806:324::-;3939:64;;3997:4;3939:64;;;7864:51:29;3853:7:0;;;;;;3908:6;-1:-1:-1;;;;;3908:17:0;;-1:-1:-1;;;;7837:18:29;;3939:64:0;7819:102:29;4210:211:0;4283:19;4305:14;:12;:14::i;:::-;4283:36;;4347:13;4333:11;:27;4329:85;;;4369:45;;-1:-1:-1;;;4369:45:0;;;;;13560:25:29;;;13601:18;;;13594:34;;;13533:18;;4369:45:0;13515:119:29;4329:85:0;4273:148;4210:211;:::o;4501:220::-;4576:20;4599:15;:13;:15::i;:::-;4576:38;;4643:14;4628:12;:29;4624:90;;;4666:48;;-1:-1:-1;;;4666:48:0;;;;;13560:25:29;;;13601:18;;;13594:34;;;13533:18;;4666:48:0;13515:119:29;4095:388:16;4280:31;4287:7;4296:14;4280:6;:31::i;:::-;4345:20;:8;:18;:20::i;:::-;4321:44;;;;:20;;:44;;;;-1:-1:-1;;;;;4321:44:16;;:::i;:::-;;;-1:-1:-1;;;;;4321:44:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4400:21:16;:9;:19;:21::i;:::-;4375:46;;;;:21;;:46;;;;-1:-1:-1;;;4375:46:16;;-1:-1:-1;;;;;4375:46:16;;:::i;:::-;;;-1:-1:-1;;;;;4375:46:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:16;:12;:22;:24::i;:::-;4431:17;;;:45;;:17;;:45;;;;-1:-1:-1;;;;;4431:45:16;;:::i;:::-;;;-1:-1:-1;;;;;4431:45:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4095:388:16:o;1434:358:14:-;1627:10;1579:19;1619;;;;;;;;;;1652:13;;1648:62;;1690:20;:8;:18;:20::i;:::-;1667:43;;;;:19;;:43;;;;-1:-1:-1;;;;;1667:43:14;;:::i;:::-;;;-1:-1:-1;;;;;1667:43:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1648:62:14;1724:14;;1720:65;;1764:21;:9;:19;:21::i;:::-;1740:45;;;;:20;;:45;;;;-1:-1:-1;;;1740:45:14;;-1:-1:-1;;;;;1740:45:14;;:::i;:::-;;;-1:-1:-1;;;;;1740:45:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:65:14;1434:358;;;;;:::o;383:367:18:-;570:58;;;-1:-1:-1;;;;;8498:32:29;;;570:58:18;;;8480:51:29;8547:18;;;;8540:34;;;570:58:18;;;;;;;;;;8453:18:29;;;;570:58:18;;;;;;;-1:-1:-1;;;;;570:58:18;-1:-1:-1;;;570:58:18;;;537:101;;-1:-1:-1;;;;537:19:18;;;;:101;;570:58;537:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:143;;;;656:7;:69;;;;-1:-1:-1;668:17:18;;:22;;:56;;;705:10;694:30;;;;;;;;;;;;:::i;:::-;648:95;;;;-1:-1:-1;;;648:95:18;;10321:2:29;648:95:18;;;10303:21:29;10360:2;10340:18;;;10333:30;-1:-1:-1;;;10379:18:29;;;10372:43;10432:18;;648:95:18;10293:163:29;648:95:18;485:265;;383:367;;;:::o;2388:1060:15:-;2651:26;;2708:36;:6;2726:17;2708;:36::i;:::-;2689:55;-1:-1:-1;2754:15:15;2772:46;:17;2801:16;2772:28;:46::i;:::-;2754:64;-1:-1:-1;2861:23:15;2887:21;-1:-1:-1;;;2754:64:15;2887:11;:21::i;:::-;2861:47;-1:-1:-1;2922:8:15;;2918:524;;2946:13;2962:37;2988:5;2995:3;2962:25;:37::i;:::-;2946:53;;3013:10;3026:32;:16;:30;;;:32::i;:::-;3013:45;-1:-1:-1;3072:12:15;3087:15;:7;;;;3095:6;3087:7;:15::i;:::-;3072:30;;3116:16;3135:51;3169:16;3135:29;3149:14;:5;:12;;;:14::i;:::-;3135:13;;;;;;:29::i;:::-;:33;;;;:51::i;:::-;3116:70;-1:-1:-1;3221:41:15;:22;;;;3244:17;3221:22;:41::i;:::-;3200:62;;2932:341;;;;2918:524;;;3314:117;3400:17;3315:53;3351:16;3315:31;:13;;;;3329:16;3315:13;:31::i;:53::-;3314:68;;;;:117::i;2918:524::-;2679:769;;;2388:1060;;;;;;;;;:::o;3233:390:16:-;3420:31;3427:7;3436:14;3420:6;:31::i;:::-;3485:20;:8;:18;:20::i;:::-;3461:44;;;;:20;;:44;;;;-1:-1:-1;;;;;3461:44:16;;:::i;:::-;;;-1:-1:-1;;;;;3461:44:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3540:21:16;:9;:19;:21::i;:::-;3515:46;;;;:21;;:46;;;;-1:-1:-1;;;3515:46:16;;-1:-1:-1;;;;;3515:46:16;;:::i;:::-;;;-1:-1:-1;;;;;3515:46:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3592:24:16;:12;:22;:24::i;:::-;3571:17;;;:45;;:17;;:45;;;;-1:-1:-1;;;;;3571:45:16;;:::i;2258:507::-;2438:31;2445:7;2454:14;2438:6;:31::i;:::-;2483:14;2479:280;;;2537:19;:7;:17;:19::i;:::-;2513:43;;;;:20;;:43;;;;-1:-1:-1;;;;;2513:43:16;;:::i;:::-;;;-1:-1:-1;;;;;2513:43:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2595:20:16;:8;:18;:20::i;:::-;2570:45;;;;:21;;:45;;;;-1:-1:-1;;;2570:45:16;;-1:-1:-1;;;;;2570:45:16;;:::i;:::-;;;-1:-1:-1;;;;;2570:45:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2479:280:16;;;2670:20;:8;:18;:20::i;:::-;2646:44;;;;:20;;:44;;;;-1:-1:-1;;;;;2646:44:16;;:::i;:::-;;;-1:-1:-1;;;;;2646:44:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2729:19:16;:7;:17;:19::i;:::-;2704:44;;;;:21;;:44;;;;-1:-1:-1;;;2704:44:16;;-1:-1:-1;;;;;2704:44:16;;:::i;1878:178:19:-;1952:8;;1994:18;2006:6;426:4;1994:18;:::i;:::-;1972:40;-1:-1:-1;2026:23:19;:5;1972:40;2026:10;:23::i;:::-;2022:27;1878:178;-1:-1:-1;;;;1878:178:19:o;4224:244:12:-;4280:6;4338:13;;;;:9;;;;:13;-1:-1:-1;;;;;;4373:19:12;;;;;:42;;-1:-1:-1;;;;;;4396:19:12;;;4373:42;4365:51;;;;;;4444:6;-1:-1:-1;4224:244:12;;;;;:::o;1283:532:16:-;1395:18;;;;1359:16;;1378:35;;-1:-1:-1;;;1395:18:16;;;;1378:14;:35;:::i;:::-;1359:54;-1:-1:-1;1458:14:16;;;;1454:355;;1547:16;;1516:19;;;:60;;1539:37;;;;-1:-1:-1;;;;;1547:16:16;;;1539:37;;1516:60;;;;;;1594:20;;;:62;;-1:-1:-1;;;1626:17:16;;;;;;1618:38;;1594:62;;;-1:-1:-1;1709:13:16;;;;1674:23;;;;:61;;1709:13;;;1701:34;;;1674:61;;;;;;-1:-1:-1;;;;1763:35:16;;;;;;;;;;;1283:532::o;1003:246:15:-;1089:10;1111:17;1131:20;:13;:3;:11;:13::i;:::-;:18;;;:20::i;:::-;1111:40;;1161:15;1179:23;:5;:21;:23::i;:::-;1161:41;-1:-1:-1;1218:24:15;:12;;;;1231:10;1218:12;:24::i;:::-;1212:30;1003:246;-1:-1:-1;;;;;1003:246:15:o;2781:478:13:-;2837:6;-1:-1:-1;;;2859:12:13;;;;;;;:22;;;2880:1;2875;:6;;;;2859:22;2855:56;;;2890:21;;-1:-1:-1;;;2890:21:13;;9416:2:29;9405:22;;;2890:21:13;;;9387:41:29;9360:18;;2890:21:13;9342:92:29;2855:56:13;2480:18;3008:14;;;;;;;;:31;;-1:-1:-1;2413:17:13;3026:13;;;;;;3008:31;3004:249;;;3062:10;3070:1;3062:7;:10::i;3004:249::-;2413:17;3093:12;;;;;3089:164;;;3128:7;3133:1;3128:4;:7::i;3089:164::-;3166:19;3189:20;3194:14;-1:-1:-1;;;3206:1:13;3194:11;:14::i;:::-;3189:4;:20::i;:::-;3188:21;;;:::i;3089:164::-;2781:478;;;:::o;1121:346::-;1170:6;;1199:11;:5;;;;745:19;1199:5;:11::i;:::-;1188:22;;1220:8;1231:43;1243:30;1255:17;1264:7;:1;:5;;;:7::i;:::-;582:18;;1255:8;:17::i;:::-;-1:-1:-1;;;;1243:11:13;:30::i;:::-;-1:-1:-1;;;;1231:11:13;:43::i;:::-;1220:54;;1284:10;1297:22;1314:1;1317;1297:16;:22::i;:::-;1284:35;;1337:1;1333;:5;;;1329:51;;;1360:9;:3;:7;;;:9::i;:::-;1354:15;;1329:51;1389:13;1405:32;1420:16;-1:-1:-1;;;1432:3:13;1420:11;:16::i;:::-;-1:-1:-1;;;;4711:252:12;4767:6;4826:13;;;;:9;;;;:13;4844:2;4825:21;-1:-1:-1;;;;;;4868:19:12;;;;;:42;;-1:-1:-1;;;;;;4891:19:12;;;4860:51;;;;;3751:244;3807:6;3865:13;;;;:9;;;;:13;-1:-1:-1;;;;;;3900:19:12;;;;;:42;;-1:-1:-1;;;;;;3923:19:12;;;3892:51;;;;;2455:180:19;2530:9;;2573:18;2585:6;426:4;2573:18;:::i;:::-;2551:40;-1:-1:-1;2605:23:19;:10;;;;2551:40;2605:10;:23::i;9534:261:12:-;9593:6;9643;9635:15;;;;;;9664:14;9681:11;9687:1;9690;9681:5;:11::i;:::-;9664:28;-1:-1:-1;;;;;;;;;;;9714:28:12;;;;9706:37;;;;;3496:95:19;3547:6;3572:12;:1;326:8;3572:6;:12::i;15772:181:12:-;15819:6;15874:1;15869;:6;;;;15861:15;;;;;;15904:31;15932:2;15925:1;15918:9;;15910:24;;15904:5;:31::i;2993:119:19:-;3057:6;3082:23;:6;500:3;3082:11;:23::i;3383:304:13:-;3433:6;;3462:15;:5;;;;-1:-1:-1;;;3462:5:13;:15::i;:::-;3451:26;-1:-1:-1;3487:8:13;3498;:5;;;;3451:26;3498:5;:8::i;:::-;3487:19;-1:-1:-1;3516:13:13;3532:125;3551:96;3564:82;3601:43;2295:18;3601:29;3614:15;-1:-1:-1;;3487:19:13;3614:12;:15::i;:::-;3601:8;:5;;;;3607:1;3601:5;:8::i;:43::-;3565:29;2119:18;3565:15;-1:-1:-1;;3578:1:13;3565:12;:15::i;:29::-;3564:35;;;;:82::i;:::-;2236:19;;3551:12;:96::i;:::-;3532:5;;;;;;:125::i;4307:358::-;4354:6;;4383:33;:26;:21;4395:8;:5;;;;4401:1;4395:5;:8::i;4383:21::-;:24;;;:26::i;:33::-;4372:44;-1:-1:-1;4426:12:13;4441:19;4050:17;4441:9;-1:-1:-1;;4372:44:13;4441:6;:9::i;:19::-;4426:34;-1:-1:-1;4470:16:13;4489:21;3939:20;4489:11;3995:19;4498:1;4489:8;:11::i;:21::-;4470:40;-1:-1:-1;4520:18:13;4541:31;4101:19;4541:23;4554:9;4154:19;4561:1;4554:6;:9::i;:::-;4541:8;:5;;;;4547:1;4541:5;:8::i;:31::-;4520:52;-1:-1:-1;4582:13:13;4598:37;4608:26;:13;;;;4520:52;4608:13;:26::i;:::-;4598:9;;;;;;:37::i;:::-;4582:53;4307:358;-1:-1:-1;;;;;;;4307:358:13:o;7693:281:12:-;7749:6;7799:1;:6;;7804:1;7799:6;;7791:15;;;;;;7820:13;7856:1;7836:21;;7850:2;7844:1;7837:9;;:15;;7836:21;;;;;:::i;:::-;;;-1:-1:-1;;;;;;;7879:19:12;;;;;:42;;-1:-1:-1;;;;;;7902:19:12;;;7871:51;;;;;10295:163;10341:6;-1:-1:-1;;;;;;10391:14:12;;;;;;10383:23;;;;;;10431:1;10427;:5;;;:14;;10440:1;10427:14;;;-1:-1:-1;10435:2:12;;;10295:163::o;1708:313:13:-;1777:6;;1810:45;1816:38;1825:28;1831:21;1840:11;:5;;;;856:19;1840:5;:11::i;:::-;-1:-1:-1;;;1831:8:13;:21::i;:::-;1825:5;;;;;;:28::i;:::-;745:19;;1816:8;:38::i;1810:45::-;1795:60;-1:-1:-1;1865:12:13;1880:32;1889:22;1895:15;-1:-1:-1;;1795:60:13;1895:8;:15::i;1889:22::-;636:18;;1880:8;:32::i;:::-;1865:47;-1:-1:-1;1922:13:13;1938:53;1950:40;1956:33;1966:22;1967:14;:8;:5;;;;1973:1;1967:5;:8::i;:::-;:12;;;:14::i;:::-;1966:20;;;:22::i;:::-;1956:9;;;;;;:33::i;:::-;1950:5;;;;;;:40::i;:::-;-1:-1:-1;;;;1938:11:13;:53::i;9969:151:12:-;10015:6;-1:-1:-1;;;;;;10065:14:12;;;;;;10057:23;;;;;6862:555;6920:7;6967:6;6963:20;;-1:-1:-1;6982:1:12;6975:8;;6963:20;7011:1;7006;:6;;;;6998:15;;;;;;7050:9;;;;-1:-1:-1;;;;;7064:38:12;;7042:61;;7108:2;7041:69;;-1:-1:-1;7159:8:12;;;7137:31;-1:-1:-1;;;;;7191:56:12;;;7183:65;;;;;;7269:2;7262:9;7300:71;;7294:77;;;7286:86;;;;;;7393:7;;6862:555;-1:-1:-1;;;6862:555:12:o;25686:1789::-;25745:7;25796:6;25788:15;;;;;;25818:14;-1:-1:-1;;;;;25851:55:12;;25847:1508;;25929:1;25923:2;25918:1;:7;;25917:13;;;;;:::i;:::-;;25908:22;;25847:1508;;;25981:3;26015:8;;;26051:11;26045:17;;26041:104;;26093:2;26117:9;;;;26086;26041:104;26172:7;26166:2;:13;26162:100;;26210:2;26234:9;;;;26203;26162:100;26289:5;26283:2;:11;26279:96;;26325:1;26348:8;;;;26318;26279:96;26402:4;26396:2;:10;26392:95;;26437:1;26460:8;;;;26430;26392:95;26514:3;26508:2;:9;26504:94;;26548:1;26571:8;;;;26541;26504:94;26625:3;26619:2;:9;26615:23;;26637:1;26630:8;;;;26615:23;26738:3;26732;:9;26725:1;26721;:5;26720:22;;26746:1;26719:28;26710:3;26704;:9;26698:1;:16;;26697:51;;;;;:::i;:::-;;;-1:-1:-1;;;;;;26774:44:12;;;26766:53;;;;;;26866:3;26861:8;;;26851:19;;-1:-1:-1;;;;;26911:38:12;;26901:49;;26987:3;26982:8;;;27026:2;27021:7;;;27051;;;27047:20;;;27066:1;27060:7;;;;27047:20;27159:3;27153:9;;;;27085:8;;27184:7;;;27180:20;;;27199:1;27193:7;;;;27180:20;27218:8;;;27301:3;27295:9;;;27289:15;;27282:23;;;;:::i;:::-;27339:1;27334:2;:6;;;;;:::i;:::-;;27324:16;;;;25949:1406;;;;;;25847:1508;-1:-1:-1;;;;;27377:44:12;;;27369:53;;;;;27691:1423;27739:7;27786:6;27782:1316;;-1:-1:-1;27801:1:12;;27691:1423;-1:-1:-1;27691:1423:12:o;27782:1316::-;27852:1;27883;-1:-1:-1;;;27906:41:12;;27902:128;;27978:3;27971:10;;;;;28009:2;28003:8;27902:128;-1:-1:-1;;;28051:25:12;;28047:111;;28107:2;28100:9;;;;;28137:2;28131:8;28047:111;28185:11;28179:2;:17;28175:103;;28227:2;28220:9;;;;;28257:2;28251:8;28175:103;28305:7;28299:2;:13;28295:98;;28343:2;28336:9;;;;;28373:1;28367:7;28295:98;28420:5;28414:2;:11;28410:95;;28456:1;28449:8;;;;;28485:1;28479:7;28410:95;28532:4;28526:2;:10;28522:94;;28567:1;28560:8;;;;;28596:1;28590:7;28522:94;28643:3;28637:2;:9;28633:63;;28676:1;28670:7;28633:63;28732:1;28726;28722;:5;;;;;:::i;:::-;;28718:1;:9;28717:16;;28713:20;;28770:1;28764;28760;:5;;;;;:::i;:::-;;28756:1;:9;28755:16;;28751:20;;28808:1;28802;28798;:5;;;;;:::i;:::-;;28794:1;:9;28793:16;;28789:20;;28846:1;28840;28836;:5;;;;;:::i;:::-;;28832:1;:9;28831:16;;28827:20;;28884:1;28878;28874;:5;;;;;:::i;:::-;;28870:1;:9;28869:16;;28865:20;;28922:1;28916;28912;:5;;;;;:::i;:::-;;28908:1;:9;28907:16;;28903:20;;28960:1;28954;28950;:5;;;;;:::i;:::-;;28946:1;:9;28945:16;;28941:20;;29016:10;29033:1;29029;:5;;;;;:::i;:::-;;29016:18;;29071:2;29067:1;:6;:15;;29080:2;29067:15;;;-1:-1:-1;29076:1:12;29052:31;-1:-1:-1;;;27691:1423:12:o;17564:227::-;17609:6;17663:1;17659;:5;;;17651:14;;;;;;17769:3;17717:8;17723:1;17717:5;:8::i;:::-;17710:16;;17730:34;17702:62;17701:71;;17680:94;;17564:227;;;:::o;25054:310::-;25100:6;-1:-1:-1;;;25150:24:12;;;;;25142:33;;;;;;-1:-1:-1;;25206:1:12;:25;;;25202:39;;;-1:-1:-1;25240:1:12;;25054:310;-1:-1:-1;25054:310:12:o;25202:39::-;25276:71;25342:3;25297:1;25290:9;;25302:35;25290:47;25289:56;;25276:5;:71::i;16144:1228::-;16192:6;16246:1;16242;:5;;;16234:14;;;;;;16263:10;16291:13;;;;-1:-1:-1;;;16322:25:12;;16318:100;;16374:2;16394:9;;;;16367;16318:100;16441:11;16435:2;:17;16431:92;;16479:2;16499:9;;;;16472;16431:92;16546:7;16540:2;:13;16536:88;;16580:2;16600:9;;;;16573;16536:88;16647:5;16641:2;:11;16637:84;;16679:1;16698:8;;;;16672;16637:84;16744:4;16738:2;:10;16734:83;;16775:1;16794:8;;;;16768;16734:83;16840:3;16834:2;:9;16830:82;;16870:1;16889:8;;;;16863;16830:82;16935:3;16929:2;:9;16925:23;;16947:1;16940:8;;;;16925:23;-1:-1:-1;;17011:8:12;;17024:2;17010:16;17061:9;;;;17083:3;:9;;;17053:40;-1:-1:-1;;;17107:213:12;17151:1;17145:3;:7;17107:213;;;17183:8;;;17227:3;17221:9;;;17290:15;;;17280:25;;;;;17255:3;:7;17248:14;;17162:1;17154:9;17107:213;;;-1:-1:-1;17348:6:12;;16144:1228;-1:-1:-1;;;;;16144:1228:12:o;17983:6878::-;18031:6;-1:-1:-1;;;18081:24:12;;;;;18073:33;;;;;;-1:-1:-1;;18137:1:12;:25;;;18133:39;;;-1:-1:-1;18171:1:12;;17983:6878;-1:-1:-1;17983:6878:12:o;18133:39::-;-1:-1:-1;;;18200:14:12;-1:-1:-1;;;18270:22:12;;:26;;;18266:94;;;18317:35;18308:44;18357:3;18307:53;18266:94;18403:1;18378;18382:18;18378:22;:26;;;18374:94;;;18425:35;18416:44;18465:3;18415:53;18374:94;18511:1;18486;18490:18;18486:22;:26;;;18482:94;;;18533:35;18524:44;18573:3;18523:53;18482:94;18619:1;18594;18598:18;18594:22;:26;;;18590:94;;;18641:35;18632:44;18681:3;18631:53;18590:94;18726:1;18702;18706:17;18702:21;:25;;;18698:93;;;18748:35;18739:44;18788:3;18738:53;18698:93;18833:1;18809;18813:17;18809:21;:25;;;18805:93;;;18855:35;18846:44;18895:3;18845:53;18805:93;18940:1;18916;18920:17;18916:21;:25;;;18912:93;;;18962:35;18953:44;19002:3;18952:53;18912:93;19047:1;19023;19027:17;19023:21;:25;;;19019:93;;;19069:35;19060:44;19109:3;19059:53;19019:93;19153:1;19130;19134:16;19130:20;:24;;;19126:92;;;19175:35;19166:44;19215:3;19165:53;19126:92;19259:1;19236;19240:16;19236:20;:24;;;19232:92;;;19281:35;19272:44;19321:3;19271:53;19232:92;19365:1;19342;19346:16;19342:20;:24;;;19338:92;;;19387:35;19378:44;19427:3;19377:53;19338:92;19471:1;19448;19452:16;19448:20;:24;;;19444:92;;;19493:35;19484:44;19533:3;19483:53;19444:92;19576:1;19554;19558:15;19554:19;:23;;;19550:91;;;19598:35;19589:44;19638:3;19588:53;19550:91;19681:1;19659;19663:15;19659:19;:23;;;19655:91;;;19703:35;19694:44;19743:3;19693:53;19655:91;19786:1;19764;19768:15;19764:19;:23;;;19760:91;;;19808:35;19799:44;19848:3;19798:53;19760:91;19891:1;19869;19873:15;19869:19;:23;;;19865:91;;;19913:35;19904:44;19953:3;19903:53;19865:91;19995:1;19974;19978:14;19974:18;:22;;;19970:90;;;20017:35;20008:44;20057:3;20007:53;19970:90;20099:1;20078;20082:14;20078:18;:22;;;20074:90;;;20121:35;20112:44;20161:3;20111:53;20074:90;20203:1;20182;20186:14;20182:18;:22;;;20178:90;;;20225:35;20216:44;20265:3;20215:53;20178:90;20307:1;20286;20290:14;20286:18;:22;;;20282:90;;;20329:35;20320:44;20369:3;20319:53;20282:90;20410:1;20390;20394:13;20390:17;:21;;;20386:89;;;20432:35;20423:44;20472:3;20422:53;20386:89;20513:1;20493;20497:13;20493:17;:21;;;20489:89;;;20535:35;20526:44;20575:3;20525:53;20489:89;20616:1;20596;20600:13;20596:17;:21;;;20592:89;;;20638:35;20629:44;20678:3;20628:53;20592:89;20719:1;20699;20703:13;20699:17;:21;;;20695:89;;;20741:35;20732:44;20781:3;20731:53;20695:89;20821:1;20802;20806:12;20802:16;:20;;;20798:88;;;20843:35;20834:44;20883:3;20833:53;20798:88;20923:1;20904;20908:12;20904:16;:20;;;20900:88;;;20945:35;20936:44;20985:3;20935:53;20900:88;21025:1;21006;21010:12;21006:16;:20;;;21002:88;;;21047:35;21038:44;21087:3;21037:53;21002:88;21127:1;21108;21112:12;21108:16;:20;;;21104:88;;;21149:35;21140:44;21189:3;21139:53;21104:88;21228:1;21210;21214:11;21210:15;:19;;;21206:87;;;21250:35;21241:44;21290:3;21240:53;21206:87;21329:1;21311;21315:11;21311:15;:19;;;21307:87;;;21351:35;21342:44;21391:3;21341:53;21307:87;21430:1;21412;21416:11;21412:15;:19;;;21408:87;;;21452:35;21443:44;21492:3;21442:53;21408:87;21531:1;21513;21517:11;21513:15;:19;;;21509:87;;;21553:35;21544:44;21593:3;21543:53;21509:87;21631:1;21614;21618:10;21614:14;:18;;;21610:86;;;21653:35;21644:44;21693:3;21643:53;21610:86;21731:1;21714;21718:10;21714:14;:18;;;21710:86;;;21753:35;21744:44;21793:3;21743:53;21710:86;21831:1;21814;21818:10;21814:14;:18;;;21810:86;;;21853:35;21844:44;21893:3;21843:53;21810:86;21931:1;21914;21918:10;21914:14;:18;;;21910:86;;;21953:35;21944:44;21993:3;21943:53;21910:86;22030:1;22014;22018:9;22014:13;:17;;;22010:85;;;22052:35;22043:44;22092:3;22042:53;22010:85;22129:1;22113;22117:9;22113:13;:17;;;22109:85;;;22151:35;22142:44;22191:3;22141:53;22109:85;22228:1;22212;22216:9;22212:13;:17;;;22208:85;;;22250:35;22241:44;22290:3;22240:53;22208:85;22327:1;22311;22315:9;22311:13;:17;;;22307:85;;;22349:35;22340:44;22389:3;22339:53;22307:85;22425:1;22410;22414:8;22410:12;:16;;;22406:84;;;22447:35;22438:44;22487:3;22437:53;22406:84;22523:1;22508;22512:8;22508:12;:16;;;22504:84;;;22545:35;22536:44;22585:3;22535:53;22504:84;22621:1;22606;22610:8;22606:12;:16;;;22602:84;;;22643:35;22634:44;22683:3;22633:53;22602:84;22719:1;22704;22708:8;22704:12;:16;;;22700:84;;;22741:35;22732:44;22781:3;22731:53;22700:84;22816:1;22802;22806:7;22802:11;:15;;;22798:83;;;22838:35;22829:44;22878:3;22828:53;22798:83;22913:1;22899;22903:7;22899:11;:15;;;22895:83;;;22935:35;22926:44;22975:3;22925:53;22895:83;23010:1;22996;23000:7;22996:11;:15;;;22992:83;;;23032:35;23023:44;23072:3;23022:53;22992:83;23107:1;23093;23097:7;23093:11;:15;;;23089:83;;;23129:35;23120:44;23169:3;23119:53;23089:83;23203:1;23190;23194:6;23190:10;:14;;;23186:82;;;23225:35;23216:44;23265:3;23215:53;23186:82;23299:1;23286;23290:6;23286:10;:14;;;23282:82;;;23321:35;23312:44;23361:3;23311:53;23282:82;23395:1;23382;23386:6;23382:10;:14;;;23378:82;;;23417:35;23408:44;23457:3;23407:53;23378:82;23491:1;23478;23482:6;23478:10;:14;;;23474:82;;;23513:35;23504:44;23553:3;23503:53;23474:82;23586:1;23574;23578:5;23574:9;:13;;;23570:81;;;23608:35;23599:44;23648:3;23598:53;23570:81;23681:1;23669;23673:5;23669:9;:13;;;23665:81;;;23703:35;23694:44;23743:3;23693:53;23665:81;23776:1;23764;23768:5;23764:9;:13;;;23760:81;;;23798:35;23789:44;23838:3;23788:53;23760:81;23871:1;23859;23863:5;23859:9;:13;;;23855:81;;;23893:35;23884:44;23933:3;23883:53;23855:81;23965:1;23954;23958:4;23954:8;:12;;;23950:80;;;23987:35;23978:44;24027:3;23977:53;23950:80;24059:1;24048;24052:4;24048:8;:12;;;24044:80;;;24081:35;24072:44;24121:3;24071:53;24044:80;24153:1;24142;24146:4;24142:8;:12;;;24138:80;;;24175:35;24166:44;24215:3;24165:53;24138:80;24247:1;24236;24240:4;24236:8;:12;;;24232:80;;;24269:35;24260:44;24309:3;24259:53;24232:80;24340:1;24330;24334:3;24330:7;:11;;;24326:79;;;24362:35;24353:44;24402:3;24352:53;24326:79;24433:1;24423;24427:3;24423:7;:11;;;24419:79;;;24455:35;24446:44;24495:3;24445:53;24419:79;24526:1;24516;24520:3;24516:7;:11;;;24512:79;;;24548:35;24539:44;24588:3;24538:53;24512:79;24619:1;24609;24613:3;24609:7;:11;;;24605:79;;;24641:35;24632:44;24681:3;24631:53;24605:79;24731:7;;;;24736:2;24731:7;24725:2;:14;24718:22;;24699:42;-1:-1:-1;;;;;24763:36:12;;;24755:45;;;;;14:173:29;82:20;;-1:-1:-1;;;;;131:31:29;;121:42;;111:2;;177:1;174;167:12;192:347;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:2;;325:1;322;315:12;274:2;-1:-1:-1;348:20:29;;391:18;380:30;;377:2;;;423:1;420;413:12;377:2;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:2;;;529:1;526;519:12;474:2;264:275;;;;;:::o;544:163::-;611:20;;671:10;660:22;;650:33;;640:2;;697:1;694;687:12;712:186;771:6;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;863:29;882:9;863:29;:::i;903:254::-;971:6;979;1032:2;1020:9;1011:7;1007:23;1003:32;1000:2;;;1048:1;1045;1038:12;1000:2;1071:29;1090:9;1071:29;:::i;:::-;1061:39;1147:2;1132:18;;;;1119:32;;-1:-1:-1;;;990:167:29:o;1162:1091::-;1286:6;1294;1302;1310;1318;1326;1334;1342;1350;1403:3;1391:9;1382:7;1378:23;1374:33;1371:2;;;1420:1;1417;1410:12;1371:2;1443:29;1462:9;1443:29;:::i;:::-;1433:39;;1519:2;1508:9;1504:18;1491:32;1481:42;;1573:2;1562:9;1558:18;1545:32;1586:28;1608:5;1586:28;:::i;:::-;1633:5;-1:-1:-1;1685:2:29;1670:18;;1657:32;;-1:-1:-1;1736:3:29;1721:19;;1708:33;;-1:-1:-1;1793:3:29;1778:19;;1765:33;1807:30;1765:33;1807:30;:::i;:::-;1856:7;-1:-1:-1;1915:3:29;1900:19;;1887:33;1929:30;1887:33;1929:30;:::i;:::-;1978:7;-1:-1:-1;2036:3:29;2021:19;;2008:33;2064:18;2053:30;;2050:2;;;2096:1;2093;2086:12;2050:2;2135:58;2185:7;2176:6;2165:9;2161:22;2135:58;:::i;:::-;2109:84;;2212:8;2202:18;;;2239:8;2229:18;;;1361:892;;;;;;;;;;;:::o;2258:322::-;2335:6;2343;2351;2404:2;2392:9;2383:7;2379:23;2375:32;2372:2;;;2420:1;2417;2410:12;2372:2;2443:29;2462:9;2443:29;:::i;:::-;2433:39;2519:2;2504:18;;2491:32;;-1:-1:-1;2570:2:29;2555:18;;;2542:32;;2362:218;-1:-1:-1;;;2362:218:29:o;2585:620::-;2682:6;2690;2698;2706;2714;2767:3;2755:9;2746:7;2742:23;2738:33;2735:2;;;2784:1;2781;2774:12;2735:2;2807:29;2826:9;2807:29;:::i;:::-;2797:39;;2883:2;2872:9;2868:18;2855:32;2845:42;;2934:2;2923:9;2919:18;2906:32;2896:42;;2989:2;2978:9;2974:18;2961:32;3016:18;3008:6;3005:30;3002:2;;;3048:1;3045;3038:12;3002:2;3087:58;3137:7;3128:6;3117:9;3113:22;3087:58;:::i;:::-;2725:480;;;;-1:-1:-1;2725:480:29;;-1:-1:-1;3164:8:29;;3061:84;2725:480;-1:-1:-1;;;2725:480:29:o;3210:245::-;3277:6;3330:2;3318:9;3309:7;3305:23;3301:32;3298:2;;;3346:1;3343;3336:12;3298:2;3378:9;3372:16;3397:28;3419:5;3397:28;:::i;3460:180::-;3519:6;3572:2;3560:9;3551:7;3547:23;3543:32;3540:2;;;3588:1;3585;3578:12;3540:2;-1:-1:-1;3611:23:29;;3530:110;-1:-1:-1;3530:110:29:o;3645:819::-;3757:6;3765;3773;3781;3789;3797;3805;3858:3;3846:9;3837:7;3833:23;3829:33;3826:2;;;3875:1;3872;3865:12;3826:2;3911:9;3898:23;3888:33;;3940:38;3974:2;3963:9;3959:18;3940:38;:::i;:::-;3930:48;;4025:2;4014:9;4010:18;3997:32;3987:42;;4076:2;4065:9;4061:18;4048:32;4038:42;;4130:3;4119:9;4115:19;4102:33;4144:28;4166:5;4144:28;:::i;:::-;4191:5;-1:-1:-1;4247:3:29;4232:19;;4219:33;4275:18;4264:30;;4261:2;;;4307:1;4304;4297:12;4261:2;4346:58;4396:7;4387:6;4376:9;4372:22;4346:58;:::i;:::-;3816:648;;;;-1:-1:-1;3816:648:29;;-1:-1:-1;3816:648:29;;;;4320:84;;-1:-1:-1;;;3816:648:29:o;4469:248::-;4537:6;4545;4598:2;4586:9;4577:7;4573:23;4569:32;4566:2;;;4614:1;4611;4604:12;4566:2;-1:-1:-1;;4637:23:29;;;4707:2;4692:18;;;4679:32;;-1:-1:-1;4556:161:29:o;4722:316::-;4799:6;4807;4815;4868:2;4856:9;4847:7;4843:23;4839:32;4836:2;;;4884:1;4881;4874:12;4836:2;-1:-1:-1;;4907:23:29;;;4977:2;4962:18;;4949:32;;-1:-1:-1;5028:2:29;5013:18;;;5000:32;;4826:212;-1:-1:-1;4826:212:29:o;5043:954::-;5164:6;5172;5180;5188;5196;5204;5212;5220;5273:3;5261:9;5252:7;5248:23;5244:33;5241:2;;;5290:1;5287;5280:12;5241:2;5316:23;;-1:-1:-1;;;;;5368:46:29;;5358:57;;5348:2;;5429:1;5426;5419:12;5348:2;5452:5;-1:-1:-1;5476:37:29;5509:2;5494:18;;5476:37;:::i;:::-;5466:47;;5532:37;5565:2;5554:9;5550:18;5532:37;:::i;:::-;5522:47;;5588:37;5621:2;5610:9;5606:18;5588:37;:::i;:::-;5578:47;;5672:3;5661:9;5657:19;5644:33;5634:43;;5724:3;5713:9;5709:19;5696:33;5686:43;;5780:3;5769:9;5765:19;5752:33;5808:18;5800:6;5797:30;5794:2;;;5840:1;5837;5830:12;5794:2;5879:58;5929:7;5920:6;5909:9;5905:22;5879:58;:::i;:::-;5231:766;;;;-1:-1:-1;5231:766:29;;-1:-1:-1;5231:766:29;;;;;;5956:8;-1:-1:-1;;;5231:766:29:o;6187:184::-;6257:6;6310:2;6298:9;6289:7;6285:23;6281:32;6278:2;;;6326:1;6323;6316:12;6278:2;-1:-1:-1;6349:16:29;;6268:103;-1:-1:-1;6268:103:29:o;6376:266::-;6464:6;6459:3;6452:19;6516:6;6509:5;6502:4;6497:3;6493:14;6480:43;-1:-1:-1;6568:1:29;6543:16;;;6561:4;6539:27;;;6532:38;;;;6624:2;6603:15;;;-1:-1:-1;;6599:29:29;6590:39;;;6586:50;;6442:200::o;7287:426::-;7416:3;7454:6;7448:13;7479:1;7489:129;7503:6;7500:1;7497:13;7489:129;;;7601:4;7585:14;;;7581:25;;7575:32;7562:11;;;7555:53;7518:12;7489:129;;;7636:6;7633:1;7630:13;7627:2;;;7671:1;7662:6;7657:3;7653:16;7646:27;7627:2;-1:-1:-1;7691:16:29;;;;;7424:289;-1:-1:-1;;7424:289:29:o;9720:394::-;9941:6;9930:9;9923:25;9984:6;9979:2;9968:9;9964:18;9957:34;10027:2;10022;10011:9;10007:18;10000:30;9904:4;10047:61;10104:2;10093:9;10089:18;10081:6;10073;10047:61;:::i;14749:253::-;14789:3;-1:-1:-1;;;;;14871:10:29;;;14901;;;14931:12;;;14923:21;;14920:2;;;14947:18;;:::i;:::-;14983:13;;14797:205;-1:-1:-1;;;;14797:205:29:o;15007:128::-;15047:3;15078:1;15074:6;15071:1;15068:13;15065:2;;;15084:18;;:::i;:::-;-1:-1:-1;15120:9:29;;15055:80::o;15140:217::-;15180:1;15206;15196:2;;15250:10;15245:3;15241:20;15238:1;15231:31;15285:4;15282:1;15275:15;15313:4;15310:1;15303:15;15196:2;-1:-1:-1;15342:9:29;;15186:171::o;15362:168::-;15402:7;15468:1;15464;15460:6;15456:14;15453:1;15450:21;15445:1;15438:9;15431:17;15427:45;15424:2;;;15475:18;;:::i;:::-;-1:-1:-1;15515:9:29;;15414:116::o;15535:246::-;15575:4;-1:-1:-1;;;;;15688:10:29;;;;15658;;15710:12;;;15707:2;;;15725:18;;:::i;:::-;15762:13;;15584:197;-1:-1:-1;;;15584:197:29:o;15786:125::-;15826:4;15854:1;15851;15848:8;15845:2;;;15859:18;;:::i;:::-;-1:-1:-1;15896:9:29;;15835:76::o;15916:221::-;15955:4;15984:10;16044;;;;16014;;16066:12;;;16063:2;;;16081:18;;:::i;16142:213::-;16177:3;16221:2;16210:21;;;-1:-1:-1;;;;;;16243:52:29;;16240:2;;;16298:18;;:::i;:::-;16338:1;16334:15;;16185:170;-1:-1:-1;;16185:170:29:o;16360:127::-;16421:10;16416:3;16412:20;16409:1;16402:31;16452:4;16449:1;16442:15;16476:4;16473:1;16466:15;16492:127;16553:10;16548:3;16544:20;16541:1;16534:31;16584:4;16581:1;16574:15;16608:4;16605:1;16598:15;16624:127;16685:10;16680:3;16676:20;16673:1;16666:31;16716:4;16713:1;16706:15;16740:4;16737:1;16730:15;16756:118;16842:5;16835:13;16828:21;16821:5;16818:32;16808:2;;16864:1;16861;16854:12;16808:2;16798:76;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "77": [
        {
          "start": 632,
          "length": 32
        },
        {
          "start": 3478,
          "length": 32
        },
        {
          "start": 4160,
          "length": 32
        }
      ],
      "81": [
        {
          "start": 1042,
          "length": 32
        },
        {
          "start": 1852,
          "length": 32
        },
        {
          "start": 3202,
          "length": 32
        },
        {
          "start": 4785,
          "length": 32
        },
        {
          "start": 6436,
          "length": 32
        }
      ],
      "85": [
        {
          "start": 965,
          "length": 32
        },
        {
          "start": 1885,
          "length": 32
        },
        {
          "start": 3236,
          "length": 32
        },
        {
          "start": 4818,
          "length": 32
        },
        {
          "start": 6469,
          "length": 32
        }
      ],
      "89": [
        {
          "start": 1329,
          "length": 32
        }
      ],
      "93": [
        {
          "start": 1271,
          "length": 32
        },
        {
          "start": 2892,
          "length": 32
        },
        {
          "start": 5098,
          "length": 32
        },
        {
          "start": 5265,
          "length": 32
        },
        {
          "start": 7007,
          "length": 32
        },
        {
          "start": 8554,
          "length": 32
        }
      ],
      "97": [
        {
          "start": 671,
          "length": 32
        },
        {
          "start": 2950,
          "length": 32
        },
        {
          "start": 5426,
          "length": 32
        },
        {
          "start": 5593,
          "length": 32
        },
        {
          "start": 6730,
          "length": 32
        },
        {
          "start": 8829,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BUFFER()": "8fbc3ecd",
    "MIN_LIQUIDITY()": "21b77d63",
    "PRECISION()": "aaf5eb68",
    "advanceTime(uint256)": "07e32f0a",
    "allocate(bytes32,address,uint256,uint256,bool,bytes)": "d2957b8f",
    "calibrations(bytes32)": "23c5b952",
    "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": "be00763a",
    "deposit(address,uint256,uint256,bytes)": "9e48ff5a",
    "factory()": "c45a0155",
    "invariantOf(bytes32)": "546fecae",
    "liquidity(address,bytes32)": "6b35bb6b",
    "margins(address)": "38820465",
    "remove(bytes32,uint256)": "9f8cfade",
    "reserves(bytes32)": "00bbf1e4",
    "risky()": "c08165d4",
    "scaleFactorRisky()": "55ebb825",
    "scaleFactorStable()": "4dd0d056",
    "setReserves(bytes32,uint256,uint256)": "140240db",
    "stable()": "22be3de1",
    "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": "ca28fcd6",
    "time()": "16ada547",
    "updateLastTimestamp(bytes32)": "11f99086",
    "updateReserves(bytes32,uint256)": "c0ed31ba",
    "withdraw(address,uint256,uint256)": "b5c5f672"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"CalibrationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaInError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaOutError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GammaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"nextInvariant\",\"type\":\"int128\"}],\"name\":\"InvariantError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"value\",\"type\":\"int128\"}],\"name\":\"InverseOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockedError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MinLiquidityError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDuplicateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolExpiredError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"RiskyBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RiskyPerLpError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SigmaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"StableBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"StrikeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDeltasError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidityError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Allocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"Remove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"riskyForStable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deltaIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deltaOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"UpdateLastTimestamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"by\",\"type\":\"uint256\"}],\"name\":\"advanceTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fromMargin\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"calibrations\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"riskyPerLp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"invariantOf\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"margins\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balanceRisky\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"balanceStable\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delLiquidity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserveRisky\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserveStable\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeStable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"risky\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorRisky\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorStable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"reserveRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveStable\",\"type\":\"uint256\"}],\"name\":\"setReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"riskyForStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deltaIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deltaOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fromMargin\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"toMargin\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"updateLastTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"reserveRisky\",\"type\":\"uint256\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delRisky\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delStable\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvariantError(int128,int128)\":[{\"details\":\"Most important check as it verifies the validity of a desired swap\",\"params\":{\"invariant\":\"Pre-swap invariant updated with new tau\",\"nextInvariant\":\"Post-swap invariant after the swap amounts are applied to reserves\"}}],\"RiskyBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual risky balance\",\"expected\":\"Expected risky balance\"}}],\"StableBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual stable balance\",\"expected\":\"Expected stable balance\"}}]},\"kind\":\"dev\",\"methods\":{\"allocate(bytes32,address,uint256,uint256,bool,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the allocateCallback function\",\"delRisky\":\"Amount of risky tokens to add\",\"delStable\":\"Amount of stable tokens to add\",\"fromMargin\":\"Whether the `msg.sender` pays with their margin balance, or must send tokens\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\",\"recipient\":\"Address to give the allocated liquidity to\"},\"returns\":{\"delLiquidity\":\"Amount of liquidity given to `recipient`\"}},\"create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the createCallback function\",\"delLiquidity\":\"Amount of liquidity units to allocate to the curve, wei value with 18 decimals of precision\",\"gamma\":\"Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)\",\"maturity\":\"Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]\",\"riskyPerLp\":\"Risky reserve per liq. with risky decimals, = 1 - N(d1), d1 = (ln(S/K)+(r*\\u03c3^2/2))/\\u03c3\\u221a\\u03c4, valid for [0, 1e^(risky token decimals))\",\"sigma\":\"AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)\",\"strike\":\"Marginal price of the pool's risky token at maturity, with the same decimals as the stable token, valid [0, 2^128-1]\"},\"returns\":{\"delRisky\":\"   Total amount of risky tokens provided to reserves\",\"delStable\":\"  Total amount of stable tokens provided to reserves\",\"poolId\":\"     Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"}},\"deposit(address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the depositCallback function\",\"delRisky\":\"Amount of risky tokens to deposit\",\"delStable\":\"Amount of stable tokens to deposit\",\"recipient\":\"Recipient margin account of the deposited tokens\"}},\"invariantOf(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"invariant\":\"  Signed fixed point 64.64 number, invariant of `poolId`\"}},\"remove(bytes32,uint256)\":{\"params\":{\"delLiquidity\":\"Amount of liquidity to remove\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"delRisky\":\"     Amount of risky tokens received from removed liquidity\",\"delStable\":\"    Amount of stable tokens received from removed liquidity\"}},\"swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)\":{\"params\":{\"data\":\"Arbitrary data that is passed to the swapCallback function\",\"deltaIn\":\"Amount of tokens to swap in\",\"deltaOut\":\"Amount of tokens to swap out\",\"fromMargin\":\"Whether the `msg.sender` uses their margin balance, or must send tokens\",\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\",\"recipient\":\"Address that receives output token `deltaOut` amount\",\"riskyForStable\":\"If true, swap risky to stable, else swap stable to risky\",\"toMargin\":\"Whether the `deltaOut` amount is transferred or deposited into margin\"}},\"updateLastTimestamp(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"lastTimestamp\":\"Timestamp loaded into the state of the pool's Calibration.lastTimestamp\"}},\"withdraw(address,uint256,uint256)\":{\"params\":{\"delRisky\":\"Amount of risky tokens to withdraw\",\"delStable\":\"Amount of stable tokens to withdraw\",\"recipient\":\"Address that tokens are transferred to\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BalanceError()\":[{\"notice\":\"Thrown when the balanceOf function is not successful and does not return data\"}],\"CalibrationError(uint256,uint256)\":[{\"notice\":\"Thrown when the parameters of a new pool are invalid, causing initial reserves to be 0\"}],\"DeltaInError()\":[{\"notice\":\"Thrown when the deltaIn parameter is 0\"}],\"DeltaOutError()\":[{\"notice\":\"Thrown when the deltaOut parameter is 0\"}],\"GammaError(uint256)\":[{\"notice\":\"Thrown when gamma, equal to 1 - fee %, is outside its bounds: 9_000 <= gamma <= 10_000; 1_000 = 10% fee\"}],\"InvariantError(int128,int128)\":[{\"notice\":\"Thrown when the invariant check fails\"}],\"InverseOutOfBounds(int128)\":[{\"notice\":\"Thrown on passing an arg that is out of the input range for these math functions\"}],\"LockedError()\":[{\"notice\":\"Thrown on attempted re-entrancy on a function with a re-entrancy guard\"}],\"MinLiquidityError(uint256)\":[{\"notice\":\"Thrown when liquidity is lower than or equal to the minimum amount of liquidity\"}],\"PoolDuplicateError()\":[{\"notice\":\"Thrown in create when a pool with computed poolId already exists\"}],\"PoolExpiredError()\":[{\"notice\":\"Thrown when calling an expired pool, where block.timestamp > maturity, + BUFFER if swap\"}],\"RiskyBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected risky balance is less than the actual balance\"}],\"RiskyPerLpError(uint256)\":[{\"notice\":\"Thrown when riskyPerLp is outside the range of acceptable values, 0 < riskyPerLp <= 1eRiskyDecimals\"}],\"SigmaError(uint256)\":[{\"notice\":\"Thrown when sigma is outside the range of acceptable values, 1 <= sigma <= 1e7 with 4 precision\"}],\"StableBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected stable balance is less than the actual balance\"}],\"StrikeError(uint256)\":[{\"notice\":\"Thrown when strike is not valid, i.e. equal to 0 or greater than 2^128\"}],\"UninitializedError()\":[{\"notice\":\"Thrown when the pool with poolId has not been created\"}],\"ZeroDeltasError()\":[{\"notice\":\"Thrown when the risky or stable amount is 0\"}],\"ZeroLiquidityError()\":[{\"notice\":\"Thrown when the liquidity parameter is 0\"}]},\"events\":{\"Allocate(address,address,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity of risky and stable tokens to a specified `poolId`\"},\"Create(address,uint128,uint32,uint32,uint32,uint256,uint256,uint256)\":{\"notice\":\"Creates a pool with liquidity\"},\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Added stable and/or risky tokens to a margin account\"},\"Remove(address,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity of risky and stable tokens to a specified `poolId`\"},\"Swap(address,address,bytes32,bool,uint256,uint256)\":{\"notice\":\"Swaps between `risky` and `stable` assets\"},\"UpdateLastTimestamp(bytes32)\":{\"notice\":\"Updates the time until expiry of the pool with `poolId`\"},\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Removes stable and/or risky from a margin account\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes32,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Allocates risky and stable tokens to a specific curve with `poolId`\"},\"calibrations(bytes32)\":{\"notice\":\"Fetches `Calibration` pool parameters\"},\"create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)\":{\"notice\":\"Initializes a curve with parameters in the `calibrations` storage mapping in the Engine\"},\"deposit(address,uint256,uint256,bytes)\":{\"notice\":\"Adds risky and/or stable tokens to a `recipient`'s internal balance account\"},\"invariantOf(bytes32)\":{\"notice\":\"Fetches the current invariant, notation is usually `k`, based on risky and stable token reserves of pool with `poolId`\"},\"liquidity(address,bytes32)\":{\"notice\":\"Fetches position liquidity an account address and poolId\"},\"margins(address)\":{\"notice\":\"Fetches the margin balances of `account`\"},\"remove(bytes32,uint256)\":{\"notice\":\"Unallocates risky and stable tokens from a specific curve with `poolId`\"},\"reserves(bytes32)\":{\"notice\":\"Fetches the global reserve state for a pool with `poolId`\"},\"swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)\":{\"notice\":\"Swaps between `risky` and `stable` tokens\"},\"updateLastTimestamp(bytes32)\":{\"notice\":\"Updates the time until expiry of the pool by setting its last timestamp value\"},\"withdraw(address,uint256,uint256)\":{\"notice\":\"Removes risky and/or stable tokens from a `msg.sender`'s internal balance account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/engine/MockEngine.sol\":\"MockEngine\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/PrimitiveEngine.sol\":{\"keccak256\":\"0xe1ea222314d601d03e86fac16266749bffc8b020e4a16d0171bdbf77fdd0e451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://30b606c67007d65a85b632e805c15cf3059fbf1a21ba4564b1cf23e1eccb9759\",\"dweb:/ipfs/QmTD8NXexzkt47AJYbDiQSrnisVLELEU8ntM17oeNqWTjW\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x5d2e1e3e7508d8fc9654c530210945dfebe4f91e0f5d0505997d963abe1a39fb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://afd23d240486fcd9d6769ee83f3e5cf6a4d77eb4e9c5b5f9e8da41470361db2f\",\"dweb:/ipfs/QmSmVuE5fiswzp7424Vvs8SAAEagdFKvXnHMU6eREuqYAs\"]},\"contracts/interfaces/IPrimitiveEngine.sol\":{\"keccak256\":\"0x9cc8c6aac249fc77128f5e08db6cfb3e0dc177e1aed7899071482ed09c01408a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2ba58232a71722a24c26c79cb905b826245883e95727e1051e15b57dc1a4dd9b\",\"dweb:/ipfs/QmYjsz2qkMTwkbdqRZVw8fN1q1vWDDxFazM43A8MmKa3fW\"]},\"contracts/interfaces/IPrimitiveFactory.sol\":{\"keccak256\":\"0x592ff2be55e3c6f4af4ae1bb83dd251f925e275422720e8e7f1a82a4d7cf1272\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://eb94aa54cb726e85b726a4201f5c2255e402132cfd7d9fe90f3d191fa9aa8f98\",\"dweb:/ipfs/QmQsZoxSdjEiKcRJeQvgEV9uPcr7jpuQCizsfM2QSwyNG9\"]},\"contracts/interfaces/callback/IPrimitiveCreateCallback.sol\":{\"keccak256\":\"0x341936b1b976c4a29bf9c112546ec9a7ea14a87024ae2d7c480df88bf4075a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5bacd19b1aa1d2a80b731babab6c0108dac1624687946b65af2904593eaa1028\",\"dweb:/ipfs/QmYVYbRghxEQxFWioSuF2LmjBoC9eSmE1Hs1DZyFxYtymU\"]},\"contracts/interfaces/callback/IPrimitiveDepositCallback.sol\":{\"keccak256\":\"0x2989c446863ccd94e254ccc14a1a57f672d637291da197aab8e43536168cf773\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://22a1480de8d7869632d24341502264dbc4683b94a2c78e832f802d2e269a6c19\",\"dweb:/ipfs/QmSo6aWGBGGB51YCtcQtYsuiLUfNPGEQ8uxzNZusmGUQyy\"]},\"contracts/interfaces/callback/IPrimitiveLiquidityCallback.sol\":{\"keccak256\":\"0xb713edb4de7ad4c940c90fe6e120ad8f817c7c9eade89a656f52758ed46a80cf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://68a7889d0e94663413b649df045e1ac7f9706b37246cff04fe01ac821055273d\",\"dweb:/ipfs/QmcFs41eWR4CwxCyr6sRRdAXA1Rd8r7a7zbdow8JNJR4f3\"]},\"contracts/interfaces/callback/IPrimitiveSwapCallback.sol\":{\"keccak256\":\"0x5c3a3859edaef8a6ddcedfd537c53080b7e2477c134439a970c1eadfcf71af05\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://546a24d7a219f0e674d4f154957d75fcdc46c70c4acf868cebd77473f3969f8e\",\"dweb:/ipfs/QmfKNRNS3kasfyPmusqoVAw3S2tqE1km9r5HbSiArZvRXE\"]},\"contracts/interfaces/engine/IPrimitiveEngineActions.sol\":{\"keccak256\":\"0xa534fb3dae12b3ecfd9611c901b1a85c4a135fe4553facecb0d71505c797cb51\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ff9b683f47b666070d714721cf1718e63df7c54d8197e1641fb4988c90c1ad3b\",\"dweb:/ipfs/QmT2wHLTMhGGBsHGo8wmg9U3gggfr5XzbUR92mFmH84vX1\"]},\"contracts/interfaces/engine/IPrimitiveEngineErrors.sol\":{\"keccak256\":\"0x86bbde924956e7901b893c6f5175f0020b2766a7a8f3defb376bc1ee956ea5b1\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d9865859c64ab77b4f3031451221acc576e6b960f1633f70a782163639442caa\",\"dweb:/ipfs/QmYCQEBxx3FiGkVuXRuEcrr4sbC9UKuFwDNj84tyq2jKag\"]},\"contracts/interfaces/engine/IPrimitiveEngineEvents.sol\":{\"keccak256\":\"0x9c76cc12c8bb1703c33d77f1fa36808e4cb02108d932e7af5abeba2315c0831f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ff617561f5d14f3343e86fb363f03515c9d386ec13e60f09db3761a4d60a7225\",\"dweb:/ipfs/QmWi8XFiSBPgRbxvDf3135mcGFM8MWWJjEGC6pypQn6sWT\"]},\"contracts/interfaces/engine/IPrimitiveEngineView.sol\":{\"keccak256\":\"0xb1482c66ce10ddf51a64240e1888b0e1b86f2ef0d0ca56caa5d16b11ae39cf5c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9651c0db965e64e349342b46c0919b20d219cf9d50c1ffb8e6ef6b5f3498ca96\",\"dweb:/ipfs/QmdhWP4kfPs3KLBaEfx3VY44kvP5Jv3uexYx4jBzH8Ny1p\"]},\"contracts/libraries/ABDKMath64x64.sol\":{\"keccak256\":\"0xd85419c9bcc9e2586b2481fbfbe28177043ec22a43a28ea766825f8a46edab4c\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://1843d731ed2f4bf3a31f68213a762c4e8b6783f7efb1477bc16ea14420e3eb64\",\"dweb:/ipfs/QmWZLhqYLeyn6xkqVrdzS5ViRXmdJyDRdQUxPscUEwhhto\"]},\"contracts/libraries/CumulativeNormalDistribution.sol\":{\"keccak256\":\"0x9d64bf869a519bd1c31a68a12ad4e8b86784d97ba16173bd409805068b21a2eb\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7e1febddefd7863f7995e8be0c1cc20dbba32ea002d913e2a8d5842aa8c9288c\",\"dweb:/ipfs/QmTPud4egEKTUr8826Fpxm5W5oYzk5UbLLfZeoLLH2sNrL\"]},\"contracts/libraries/Margin.sol\":{\"keccak256\":\"0xdcf24a0bcc499362b723c4d37a3ebc13b3b97b57ce7b11b506d41df5ae4db006\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e25ec976009b6b486ca98882f8d4adba2b50790b0303df7e46e9dfc14391cc92\",\"dweb:/ipfs/QmYnRgpHzRKNG6H5cBHoETwp25VtGeYBXqPhSEgAGWNzY3\"]},\"contracts/libraries/ReplicationMath.sol\":{\"keccak256\":\"0xb2c664ef1c8d26977ad7f4d2fd30113118e4805174271169d72c3c8d830c425e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fafbebfcb9f13095c71c95aad9661003fb4c384ec29eac9eec315d94dca1e4aa\",\"dweb:/ipfs/QmVUwieHiTjoxb5GnVhJJiNFat2bgKizXB1NWkFp9VDiU2\"]},\"contracts/libraries/Reserve.sol\":{\"keccak256\":\"0x5ff07d4f9dc34770b99fd84ae4586b162d9a2730bc973d17ffe48b52165a87c9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e2058eddfc544888af4f7966391262df12a4d516c960a75a6ed1a95bfb6a40e4\",\"dweb:/ipfs/QmWKD8Y4YmEEaJYc9AUnb3j8iLT62XHpGhLSzbNar9BB9d\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xaf262b2cd8a8f60a75aa8e448a0e1975c9b0c909fa0286eab477a4f7f04b4f73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://74ccabbebc05c33fa395505e6d2ddc481e6d3e50abac53df23a3bac5582aa4d2\",\"dweb:/ipfs/QmPptwoz1MFxSd8RxY9vX4fLUBHKiTHH9RUZds7QfHdGH9\"]},\"contracts/libraries/Transfers.sol\":{\"keccak256\":\"0x05aaac8b18c0ce27c5e7c42bfddb5f44d91b1fba4fdd62046ab6119c0ee19ca3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d420a7ce251ed9b3bd8395c9e0ddd0b876e55c68112c6fadd660e63179329c84\",\"dweb:/ipfs/QmU8V9c2s5mhyY6vLTnjKVX9ELD2Rz4rD8DbiyCtyN4U5E\"]},\"contracts/libraries/Units.sol\":{\"keccak256\":\"0x96617fcf76c03a63f5239fb5228a11cdc4b3906af2f22342ae5dbfd12fc63148\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://385fcd235af2a3e71938d751ec9c24fbf77716a79b10154699341396c6ac49fa\",\"dweb:/ipfs/QmZ4ReHsiZAja6nzpMjHWChxap9UQMd1h8jsNkqTT9GUgi\"]},\"contracts/test/engine/MockEngine.sol\":{\"keccak256\":\"0x0e8fb0f8ead88c8b2555bd437679a88e8b8872150c977ba11dc2107cca38035a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://27f396d063ea266bb1fdd69e414a39440f9d2732ffa61fd0a1e7c3b9c0bb4942\",\"dweb:/ipfs/QmSYxALnRpfp1XkrM7snPZ7jEwgqokvzWvxwJSnPrNrEHm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.6+commit.11564f7e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CalibrationError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeltaInError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeltaOutError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "GammaError"
        },
        {
          "inputs": [
            {
              "internalType": "int128",
              "name": "invariant",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "nextInvariant",
              "type": "int128"
            }
          ],
          "type": "error",
          "name": "InvariantError"
        },
        {
          "inputs": [
            {
              "internalType": "int128",
              "name": "value",
              "type": "int128"
            }
          ],
          "type": "error",
          "name": "InverseOutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LockedError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinLiquidityError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolDuplicateError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolExpiredError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RiskyBalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RiskyPerLpError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SigmaError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StableBalanceError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StrikeError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroDeltasError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroLiquidityError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Allocate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Create",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Remove",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "riskyForStable",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deltaIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "deltaOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateLastTimestamp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUFFER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_LIQUIDITY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "by",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "advanceTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fromMargin",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calibrations",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "strike",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "sigma",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maturity",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "gamma",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "riskyPerLp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "invariantOf",
          "outputs": [
            {
              "internalType": "int128",
              "name": "invariant",
              "type": "int128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "margins",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "balanceRisky",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "balanceStable",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delLiquidity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reserves",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "reserveRisky",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reserveStable",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "blockTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeStable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeLiquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "risky",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaleFactorRisky",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaleFactorStable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "reserveRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveStable",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReserves"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stable",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "riskyForStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deltaIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deltaOut",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fromMargin",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "toMargin",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "time",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateLastTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "reserveRisky",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateReserves"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "delRisky",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delStable",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate(bytes32,address,uint256,uint256,bool,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the allocateCallback function",
              "delRisky": "Amount of risky tokens to add",
              "delStable": "Amount of stable tokens to add",
              "fromMargin": "Whether the `msg.sender` pays with their margin balance, or must send tokens",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma",
              "recipient": "Address to give the allocated liquidity to"
            },
            "returns": {
              "delLiquidity": "Amount of liquidity given to `recipient`"
            }
          },
          "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the createCallback function",
              "delLiquidity": "Amount of liquidity units to allocate to the curve, wei value with 18 decimals of precision",
              "gamma": "Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)",
              "maturity": "Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]",
              "riskyPerLp": "Risky reserve per liq. with risky decimals, = 1 - N(d1), d1 = (ln(S/K)+(r*σ^2/2))/σ√τ, valid for [0, 1e^(risky token decimals))",
              "sigma": "AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)",
              "strike": "Marginal price of the pool's risky token at maturity, with the same decimals as the stable token, valid [0, 2^128-1]"
            },
            "returns": {
              "delRisky": "   Total amount of risky tokens provided to reserves",
              "delStable": "  Total amount of stable tokens provided to reserves",
              "poolId": "     Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            }
          },
          "deposit(address,uint256,uint256,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the depositCallback function",
              "delRisky": "Amount of risky tokens to deposit",
              "delStable": "Amount of stable tokens to deposit",
              "recipient": "Recipient margin account of the deposited tokens"
            }
          },
          "invariantOf(bytes32)": {
            "params": {
              "poolId": "Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "invariant": "  Signed fixed point 64.64 number, invariant of `poolId`"
            }
          },
          "remove(bytes32,uint256)": {
            "params": {
              "delLiquidity": "Amount of liquidity to remove",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "delRisky": "     Amount of risky tokens received from removed liquidity",
              "delStable": "    Amount of stable tokens received from removed liquidity"
            }
          },
          "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": {
            "params": {
              "data": "Arbitrary data that is passed to the swapCallback function",
              "deltaIn": "Amount of tokens to swap in",
              "deltaOut": "Amount of tokens to swap out",
              "fromMargin": "Whether the `msg.sender` uses their margin balance, or must send tokens",
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma",
              "recipient": "Address that receives output token `deltaOut` amount",
              "riskyForStable": "If true, swap risky to stable, else swap stable to risky",
              "toMargin": "Whether the `deltaOut` amount is transferred or deposited into margin"
            }
          },
          "updateLastTimestamp(bytes32)": {
            "params": {
              "poolId": "Keccak256 hash of engine address, strike, sigma, maturity, and gamma"
            },
            "returns": {
              "lastTimestamp": "Timestamp loaded into the state of the pool's Calibration.lastTimestamp"
            }
          },
          "withdraw(address,uint256,uint256)": {
            "params": {
              "delRisky": "Amount of risky tokens to withdraw",
              "delStable": "Amount of stable tokens to withdraw",
              "recipient": "Address that tokens are transferred to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allocate(bytes32,address,uint256,uint256,bool,bytes)": {
            "notice": "Allocates risky and stable tokens to a specific curve with `poolId`"
          },
          "calibrations(bytes32)": {
            "notice": "Fetches `Calibration` pool parameters"
          },
          "create(uint128,uint32,uint32,uint32,uint256,uint256,bytes)": {
            "notice": "Initializes a curve with parameters in the `calibrations` storage mapping in the Engine"
          },
          "deposit(address,uint256,uint256,bytes)": {
            "notice": "Adds risky and/or stable tokens to a `recipient`'s internal balance account"
          },
          "invariantOf(bytes32)": {
            "notice": "Fetches the current invariant, notation is usually `k`, based on risky and stable token reserves of pool with `poolId`"
          },
          "liquidity(address,bytes32)": {
            "notice": "Fetches position liquidity an account address and poolId"
          },
          "margins(address)": {
            "notice": "Fetches the margin balances of `account`"
          },
          "remove(bytes32,uint256)": {
            "notice": "Unallocates risky and stable tokens from a specific curve with `poolId`"
          },
          "reserves(bytes32)": {
            "notice": "Fetches the global reserve state for a pool with `poolId`"
          },
          "swap(address,bytes32,bool,uint256,uint256,bool,bool,bytes)": {
            "notice": "Swaps between `risky` and `stable` tokens"
          },
          "updateLastTimestamp(bytes32)": {
            "notice": "Updates the time until expiry of the pool by setting its last timestamp value"
          },
          "withdraw(address,uint256,uint256)": {
            "notice": "Removes risky and/or stable tokens from a `msg.sender`'s internal balance account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/engine/MockEngine.sol": "MockEngine"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/PrimitiveEngine.sol": {
        "keccak256": "0xe1ea222314d601d03e86fac16266749bffc8b020e4a16d0171bdbf77fdd0e451",
        "urls": [
          "bzz-raw://30b606c67007d65a85b632e805c15cf3059fbf1a21ba4564b1cf23e1eccb9759",
          "dweb:/ipfs/QmTD8NXexzkt47AJYbDiQSrnisVLELEU8ntM17oeNqWTjW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0x5d2e1e3e7508d8fc9654c530210945dfebe4f91e0f5d0505997d963abe1a39fb",
        "urls": [
          "bzz-raw://afd23d240486fcd9d6769ee83f3e5cf6a4d77eb4e9c5b5f9e8da41470361db2f",
          "dweb:/ipfs/QmSmVuE5fiswzp7424Vvs8SAAEagdFKvXnHMU6eREuqYAs"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPrimitiveEngine.sol": {
        "keccak256": "0x9cc8c6aac249fc77128f5e08db6cfb3e0dc177e1aed7899071482ed09c01408a",
        "urls": [
          "bzz-raw://2ba58232a71722a24c26c79cb905b826245883e95727e1051e15b57dc1a4dd9b",
          "dweb:/ipfs/QmYjsz2qkMTwkbdqRZVw8fN1q1vWDDxFazM43A8MmKa3fW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPrimitiveFactory.sol": {
        "keccak256": "0x592ff2be55e3c6f4af4ae1bb83dd251f925e275422720e8e7f1a82a4d7cf1272",
        "urls": [
          "bzz-raw://eb94aa54cb726e85b726a4201f5c2255e402132cfd7d9fe90f3d191fa9aa8f98",
          "dweb:/ipfs/QmQsZoxSdjEiKcRJeQvgEV9uPcr7jpuQCizsfM2QSwyNG9"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveCreateCallback.sol": {
        "keccak256": "0x341936b1b976c4a29bf9c112546ec9a7ea14a87024ae2d7c480df88bf4075a8f",
        "urls": [
          "bzz-raw://5bacd19b1aa1d2a80b731babab6c0108dac1624687946b65af2904593eaa1028",
          "dweb:/ipfs/QmYVYbRghxEQxFWioSuF2LmjBoC9eSmE1Hs1DZyFxYtymU"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveDepositCallback.sol": {
        "keccak256": "0x2989c446863ccd94e254ccc14a1a57f672d637291da197aab8e43536168cf773",
        "urls": [
          "bzz-raw://22a1480de8d7869632d24341502264dbc4683b94a2c78e832f802d2e269a6c19",
          "dweb:/ipfs/QmSo6aWGBGGB51YCtcQtYsuiLUfNPGEQ8uxzNZusmGUQyy"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveLiquidityCallback.sol": {
        "keccak256": "0xb713edb4de7ad4c940c90fe6e120ad8f817c7c9eade89a656f52758ed46a80cf",
        "urls": [
          "bzz-raw://68a7889d0e94663413b649df045e1ac7f9706b37246cff04fe01ac821055273d",
          "dweb:/ipfs/QmcFs41eWR4CwxCyr6sRRdAXA1Rd8r7a7zbdow8JNJR4f3"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/callback/IPrimitiveSwapCallback.sol": {
        "keccak256": "0x5c3a3859edaef8a6ddcedfd537c53080b7e2477c134439a970c1eadfcf71af05",
        "urls": [
          "bzz-raw://546a24d7a219f0e674d4f154957d75fcdc46c70c4acf868cebd77473f3969f8e",
          "dweb:/ipfs/QmfKNRNS3kasfyPmusqoVAw3S2tqE1km9r5HbSiArZvRXE"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineActions.sol": {
        "keccak256": "0xa534fb3dae12b3ecfd9611c901b1a85c4a135fe4553facecb0d71505c797cb51",
        "urls": [
          "bzz-raw://ff9b683f47b666070d714721cf1718e63df7c54d8197e1641fb4988c90c1ad3b",
          "dweb:/ipfs/QmT2wHLTMhGGBsHGo8wmg9U3gggfr5XzbUR92mFmH84vX1"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineErrors.sol": {
        "keccak256": "0x86bbde924956e7901b893c6f5175f0020b2766a7a8f3defb376bc1ee956ea5b1",
        "urls": [
          "bzz-raw://d9865859c64ab77b4f3031451221acc576e6b960f1633f70a782163639442caa",
          "dweb:/ipfs/QmYCQEBxx3FiGkVuXRuEcrr4sbC9UKuFwDNj84tyq2jKag"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineEvents.sol": {
        "keccak256": "0x9c76cc12c8bb1703c33d77f1fa36808e4cb02108d932e7af5abeba2315c0831f",
        "urls": [
          "bzz-raw://ff617561f5d14f3343e86fb363f03515c9d386ec13e60f09db3761a4d60a7225",
          "dweb:/ipfs/QmWi8XFiSBPgRbxvDf3135mcGFM8MWWJjEGC6pypQn6sWT"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/engine/IPrimitiveEngineView.sol": {
        "keccak256": "0xb1482c66ce10ddf51a64240e1888b0e1b86f2ef0d0ca56caa5d16b11ae39cf5c",
        "urls": [
          "bzz-raw://9651c0db965e64e349342b46c0919b20d219cf9d50c1ffb8e6ef6b5f3498ca96",
          "dweb:/ipfs/QmdhWP4kfPs3KLBaEfx3VY44kvP5Jv3uexYx4jBzH8Ny1p"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/ABDKMath64x64.sol": {
        "keccak256": "0xd85419c9bcc9e2586b2481fbfbe28177043ec22a43a28ea766825f8a46edab4c",
        "urls": [
          "bzz-raw://1843d731ed2f4bf3a31f68213a762c4e8b6783f7efb1477bc16ea14420e3eb64",
          "dweb:/ipfs/QmWZLhqYLeyn6xkqVrdzS5ViRXmdJyDRdQUxPscUEwhhto"
        ],
        "license": "BSD-4-Clause"
      },
      "contracts/libraries/CumulativeNormalDistribution.sol": {
        "keccak256": "0x9d64bf869a519bd1c31a68a12ad4e8b86784d97ba16173bd409805068b21a2eb",
        "urls": [
          "bzz-raw://7e1febddefd7863f7995e8be0c1cc20dbba32ea002d913e2a8d5842aa8c9288c",
          "dweb:/ipfs/QmTPud4egEKTUr8826Fpxm5W5oYzk5UbLLfZeoLLH2sNrL"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Margin.sol": {
        "keccak256": "0xdcf24a0bcc499362b723c4d37a3ebc13b3b97b57ce7b11b506d41df5ae4db006",
        "urls": [
          "bzz-raw://e25ec976009b6b486ca98882f8d4adba2b50790b0303df7e46e9dfc14391cc92",
          "dweb:/ipfs/QmYnRgpHzRKNG6H5cBHoETwp25VtGeYBXqPhSEgAGWNzY3"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/ReplicationMath.sol": {
        "keccak256": "0xb2c664ef1c8d26977ad7f4d2fd30113118e4805174271169d72c3c8d830c425e",
        "urls": [
          "bzz-raw://fafbebfcb9f13095c71c95aad9661003fb4c384ec29eac9eec315d94dca1e4aa",
          "dweb:/ipfs/QmVUwieHiTjoxb5GnVhJJiNFat2bgKizXB1NWkFp9VDiU2"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Reserve.sol": {
        "keccak256": "0x5ff07d4f9dc34770b99fd84ae4586b162d9a2730bc973d17ffe48b52165a87c9",
        "urls": [
          "bzz-raw://e2058eddfc544888af4f7966391262df12a4d516c960a75a6ed1a95bfb6a40e4",
          "dweb:/ipfs/QmWKD8Y4YmEEaJYc9AUnb3j8iLT62XHpGhLSzbNar9BB9d"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/SafeCast.sol": {
        "keccak256": "0xaf262b2cd8a8f60a75aa8e448a0e1975c9b0c909fa0286eab477a4f7f04b4f73",
        "urls": [
          "bzz-raw://74ccabbebc05c33fa395505e6d2ddc481e6d3e50abac53df23a3bac5582aa4d2",
          "dweb:/ipfs/QmPptwoz1MFxSd8RxY9vX4fLUBHKiTHH9RUZds7QfHdGH9"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Transfers.sol": {
        "keccak256": "0x05aaac8b18c0ce27c5e7c42bfddb5f44d91b1fba4fdd62046ab6119c0ee19ca3",
        "urls": [
          "bzz-raw://d420a7ce251ed9b3bd8395c9e0ddd0b876e55c68112c6fadd660e63179329c84",
          "dweb:/ipfs/QmU8V9c2s5mhyY6vLTnjKVX9ELD2Rz4rD8DbiyCtyN4U5E"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/libraries/Units.sol": {
        "keccak256": "0x96617fcf76c03a63f5239fb5228a11cdc4b3906af2f22342ae5dbfd12fc63148",
        "urls": [
          "bzz-raw://385fcd235af2a3e71938d751ec9c24fbf77716a79b10154699341396c6ac49fa",
          "dweb:/ipfs/QmZ4ReHsiZAja6nzpMjHWChxap9UQMd1h8jsNkqTT9GUgi"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/test/engine/MockEngine.sol": {
        "keccak256": "0x0e8fb0f8ead88c8b2555bd437679a88e8b8872150c977ba11dc2107cca38035a",
        "urls": [
          "bzz-raw://27f396d063ea266bb1fdd69e414a39440f9d2732ffa61fd0a1e7c3b9c0bb4942",
          "dweb:/ipfs/QmSYxALnRpfp1XkrM7snPZ7jEwgqokvzWvxwJSnPrNrEHm"
        ],
        "license": "GPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/engine/MockEngine.sol",
    "id": 6475,
    "exportedSymbols": {
      "ABDKMath64x64": [
        5010
      ],
      "CumulativeNormalDistribution": [
        5421
      ],
      "IERC20": [
        1581
      ],
      "IPrimitiveCreateCallback": [
        1674
      ],
      "IPrimitiveDepositCallback": [
        1688
      ],
      "IPrimitiveEngine": [
        1597
      ],
      "IPrimitiveEngineActions": [
        1824
      ],
      "IPrimitiveEngineErrors": [
        1908
      ],
      "IPrimitiveEngineEvents": [
        2001
      ],
      "IPrimitiveEngineView": [
        2115
      ],
      "IPrimitiveFactory": [
        1660
      ],
      "IPrimitiveLiquidityCallback": [
        1702
      ],
      "IPrimitiveSwapCallback": [
        1716
      ],
      "Margin": [
        5518
      ],
      "MockEngine": [
        6474
      ],
      "PrimitiveEngine": [
        1507
      ],
      "ReplicationMath": [
        5730
      ],
      "Reserve": [
        6013
      ],
      "SafeCast": [
        6043
      ],
      "Transfers": [
        6098
      ],
      "Units": [
        6228
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:2130:20",
    "nodes": [
      {
        "id": 6230,
        "nodeType": "PragmaDirective",
        "src": "41:22:20",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 6231,
        "nodeType": "ImportDirective",
        "src": "65:35:20",
        "nodes": [],
        "absolutePath": "contracts/PrimitiveEngine.sol",
        "file": "../../PrimitiveEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6475,
        "sourceUnit": 1508,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6474,
        "nodeType": "ContractDefinition",
        "src": "102:2068:20",
        "nodes": [
          {
            "id": 6236,
            "nodeType": "VariableDeclaration",
            "src": "147:23:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "16ada547",
            "mutability": "mutable",
            "name": "time",
            "nameLocation": "162:4:20",
            "scope": 6474,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "147:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 6235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "169:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 6246,
            "nodeType": "FunctionDefinition",
            "src": "177:69:20",
            "nodes": [],
            "body": {
              "id": 6245,
              "nodeType": "Block",
              "src": "219:27:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6241,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6236,
                      "src": "229:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6242,
                      "name": "by",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6238,
                      "src": "237:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "229:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6244,
                  "nodeType": "ExpressionStatement",
                  "src": "229:10:20"
                }
              ]
            },
            "functionSelector": "07e32f0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "advanceTime",
            "nameLocation": "186:11:20",
            "parameters": {
              "id": 6239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6238,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "206:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6246,
                  "src": "198:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "197:12:20"
            },
            "returnParameters": {
              "id": 6240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:0:20"
            },
            "scope": 6474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6260,
            "nodeType": "FunctionDefinition",
            "src": "252:128:20",
            "nodes": [],
            "body": {
              "id": 6259,
              "nodeType": "Block",
              "src": "334:46:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6252,
                      "name": "blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6250,
                      "src": "344:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6255,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6236,
                          "src": "368:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "361:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 6253,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "361:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "361:12:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "344:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 6258,
                  "nodeType": "ExpressionStatement",
                  "src": "344:29:20"
                }
              ]
            },
            "baseFunctions": [
              314
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blockTimestamp",
            "nameLocation": "261:15:20",
            "overrides": {
              "id": 6248,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "293:8:20"
            },
            "parameters": {
              "id": 6247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:2:20"
            },
            "returnParameters": {
              "id": 6251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6250,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "318:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6260,
                  "src": "311:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6249,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "310:23:20"
            },
            "scope": 6474,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6297,
            "nodeType": "FunctionDefinition",
            "src": "386:303:20",
            "nodes": [],
            "body": {
              "id": 6296,
              "nodeType": "Block",
              "src": "505:184:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6273,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "536:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6296,
                      "src": "515:24:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                        "typeString": "struct Reserve.Data"
                      },
                      "typeName": {
                        "id": 6272,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6271,
                          "name": "Reserve.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5752,
                          "src": "515:12:20"
                        },
                        "referencedDeclaration": 5752,
                        "src": "515:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6277,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6274,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "542:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Data_$5752_storage_$",
                        "typeString": "mapping(bytes32 => struct Reserve.Data storage ref)"
                      }
                    },
                    "id": 6276,
                    "indexExpression": {
                      "id": 6275,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6262,
                      "src": "551:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "542:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$5752_storage",
                      "typeString": "struct Reserve.Data storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "515:43:20"
                },
                {
                  "expression": {
                    "id": 6285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6278,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6273,
                        "src": "568:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 6280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5739,
                      "src": "568:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6283,
                          "name": "reserveRisky",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6264,
                          "src": "606:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6281,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6043,
                          "src": "587:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$6043_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 6282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6042,
                        "src": "587:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 6284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "587:32:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "568:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6286,
                  "nodeType": "ExpressionStatement",
                  "src": "568:51:20"
                },
                {
                  "expression": {
                    "id": 6294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6287,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6273,
                        "src": "629:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 6289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveStable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5741,
                      "src": "629:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6292,
                          "name": "reserveStable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "668:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6290,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6043,
                          "src": "649:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$6043_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 6291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6042,
                        "src": "649:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 6293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "649:33:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "629:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6295,
                  "nodeType": "ExpressionStatement",
                  "src": "629:53:20"
                }
              ]
            },
            "functionSelector": "140240db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReserves",
            "nameLocation": "395:11:20",
            "parameters": {
              "id": 6267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6262,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "424:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "416:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6264,
                  "mutability": "mutable",
                  "name": "reserveRisky",
                  "nameLocation": "448:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "440:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6266,
                  "mutability": "mutable",
                  "name": "reserveStable",
                  "nameLocation": "478:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "470:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:91:20"
            },
            "returnParameters": {
              "id": 6268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:20"
            },
            "scope": 6474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6473,
            "nodeType": "FunctionDefinition",
            "src": "695:1473:20",
            "nodes": [],
            "body": {
              "id": 6472,
              "nodeType": "Block",
              "src": "764:1404:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6308,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "795:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "774:24:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                        "typeString": "struct Reserve.Data"
                      },
                      "typeName": {
                        "id": 6307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6306,
                          "name": "Reserve.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5752,
                          "src": "774:12:20"
                        },
                        "referencedDeclaration": 5752,
                        "src": "774:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6312,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6309,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "801:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Data_$5752_storage_$",
                        "typeString": "mapping(bytes32 => struct Reserve.Data storage ref)"
                      }
                    },
                    "id": 6311,
                    "indexExpression": {
                      "id": 6310,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6299,
                      "src": "810:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "801:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$5752_storage",
                      "typeString": "struct Reserve.Data storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "774:43:20"
                },
                {
                  "assignments": [
                    6315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6315,
                      "mutability": "mutable",
                      "name": "cal",
                      "nameLocation": "846:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "827:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Calibration_$61_memory_ptr",
                        "typeString": "struct PrimitiveEngine.Calibration"
                      },
                      "typeName": {
                        "id": 6314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6313,
                          "name": "Calibration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "827:11:20"
                        },
                        "referencedDeclaration": 61,
                        "src": "827:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Calibration_$61_storage_ptr",
                          "typeString": "struct PrimitiveEngine.Calibration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6319,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6316,
                      "name": "calibrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "852:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Calibration_$61_storage_$",
                        "typeString": "mapping(bytes32 => struct PrimitiveEngine.Calibration storage ref)"
                      }
                    },
                    "id": 6318,
                    "indexExpression": {
                      "id": 6317,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6299,
                      "src": "865:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "852:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Calibration_$61_storage",
                      "typeString": "struct PrimitiveEngine.Calibration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "827:45:20"
                },
                {
                  "assignments": [
                    6321,
                    6323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6321,
                      "mutability": "mutable",
                      "name": "curRisky",
                      "nameLocation": "891:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "883:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "883:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6323,
                      "mutability": "mutable",
                      "name": "curStable",
                      "nameLocation": "909:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "901:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "901:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6329,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 6324,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6308,
                          "src": "923:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 6325,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveRisky",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5739,
                        "src": "923:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 6326,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6308,
                          "src": "941:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 6327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveStable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5741,
                        "src": "941:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "id": 6328,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "922:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "882:77:20"
                },
                {
                  "assignments": [
                    6331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6331,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "976:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "969:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 6330,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "969:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6335,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6333,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6299,
                        "src": "1000:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6332,
                      "name": "invariantOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1506,
                      "src": "988:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_int128_$",
                        "typeString": "function (bytes32) view returns (int128)"
                      }
                    },
                    "id": 6334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "969:38:20"
                },
                {
                  "expression": {
                    "id": 6343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6336,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6308,
                        "src": "1017:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 6338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5739,
                      "src": "1017:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6341,
                          "name": "reserveRisky",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6301,
                          "src": "1055:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6339,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6043,
                          "src": "1036:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$6043_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 6340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6042,
                        "src": "1036:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 6342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1036:32:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1017:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6344,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:51:20"
                },
                {
                  "assignments": [
                    6346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6346,
                      "mutability": "mutable",
                      "name": "reserveStable",
                      "nameLocation": "1086:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "1078:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1078:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6349,
                        "name": "invariant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6331,
                        "src": "1151:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 6350,
                        "name": "scaleFactorRisky",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1174:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6351,
                        "name": "scaleFactorStable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1204:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6352,
                        "name": "reserveRisky",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6301,
                        "src": "1235:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6353,
                          "name": "cal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6315,
                          "src": "1261:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Calibration_$61_memory_ptr",
                            "typeString": "struct PrimitiveEngine.Calibration memory"
                          }
                        },
                        "id": 6354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52,
                        "src": "1261:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 6355,
                          "name": "cal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6315,
                          "src": "1285:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Calibration_$61_memory_ptr",
                            "typeString": "struct PrimitiveEngine.Calibration memory"
                          }
                        },
                        "id": 6356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sigma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "1285:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 6361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6357,
                            "name": "cal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6315,
                            "src": "1308:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Calibration_$61_memory_ptr",
                              "typeString": "struct PrimitiveEngine.Calibration memory"
                            }
                          },
                          "id": 6358,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maturity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "1308:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 6359,
                            "name": "cal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6315,
                            "src": "1323:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Calibration_$61_memory_ptr",
                              "typeString": "struct PrimitiveEngine.Calibration memory"
                            }
                          },
                          "id": 6360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "1323:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "1308:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 6347,
                        "name": "ReplicationMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5730,
                        "src": "1102:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationMath_$5730_$",
                          "typeString": "type(library ReplicationMath)"
                        }
                      },
                      "id": 6348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStableGivenRisky",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "1102:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int128_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (int128,uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:248:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1078:272:20"
                },
                {
                  "expression": {
                    "id": 6371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6364,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6308,
                        "src": "1360:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                          "typeString": "struct Reserve.Data storage pointer"
                        }
                      },
                      "id": 6366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reserveStable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5741,
                      "src": "1360:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6369,
                          "name": "reserveStable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6346,
                          "src": "1399:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6367,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6043,
                          "src": "1380:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$6043_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 6368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6042,
                        "src": "1380:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint256) pure returns (uint128)"
                        }
                      },
                      "id": 6370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1380:33:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1360:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6372,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:53:20"
                },
                {
                  "assignments": [
                    6374,
                    6376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6374,
                      "mutability": "mutable",
                      "name": "nextRisky",
                      "nameLocation": "1432:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "1424:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1424:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6376,
                      "mutability": "mutable",
                      "name": "nextStable",
                      "nameLocation": "1451:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "1443:18:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1443:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6382,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 6377,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6308,
                          "src": "1466:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 6378,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveRisky",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5739,
                        "src": "1466:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 6379,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6308,
                          "src": "1484:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$5752_storage_ptr",
                            "typeString": "struct Reserve.Data storage pointer"
                          }
                        },
                        "id": 6380,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reserveStable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5741,
                        "src": "1484:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "id": 6381,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1465:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1423:79:20"
                },
                {
                  "id": 6471,
                  "nodeType": "Block",
                  "src": "1513:649:20",
                  "statements": [
                    {
                      "assignments": [
                        6384
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6384,
                          "mutability": "mutable",
                          "name": "riskyDeficit",
                          "nameLocation": "1535:12:20",
                          "nodeType": "VariableDeclaration",
                          "scope": 6471,
                          "src": "1527:20:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 6383,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1527:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6393,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6385,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6374,
                            "src": "1550:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 6386,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6321,
                            "src": "1562:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1550:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 6391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1596:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 6392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1550:47:20",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6388,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6374,
                            "src": "1573:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6389,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6321,
                            "src": "1585:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1573:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1527:70:20"
                    },
                    {
                      "assignments": [
                        6395
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6395,
                          "mutability": "mutable",
                          "name": "riskySurplus",
                          "nameLocation": "1619:12:20",
                          "nodeType": "VariableDeclaration",
                          "scope": 6471,
                          "src": "1611:20:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 6394,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1611:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6404,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6396,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6374,
                            "src": "1634:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 6397,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6321,
                            "src": "1646:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1634:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6400,
                            "name": "curRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6321,
                            "src": "1661:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6401,
                            "name": "nextRisky",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6374,
                            "src": "1672:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1661:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1634:47:20",
                        "trueExpression": {
                          "hexValue": "30",
                          "id": 6399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1657:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1611:70:20"
                    },
                    {
                      "assignments": [
                        6406
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6406,
                          "mutability": "mutable",
                          "name": "stableDeficit",
                          "nameLocation": "1704:13:20",
                          "nodeType": "VariableDeclaration",
                          "scope": 6471,
                          "src": "1696:21:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 6405,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1696:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6415,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6407,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6376,
                            "src": "1720:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 6408,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6323,
                            "src": "1733:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1720:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 6413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1770:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 6414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1720:51:20",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6410,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6376,
                            "src": "1745:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6411,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6323,
                            "src": "1758:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1745:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1696:75:20"
                    },
                    {
                      "assignments": [
                        6417
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6417,
                          "mutability": "mutable",
                          "name": "stableSurplus",
                          "nameLocation": "1793:13:20",
                          "nodeType": "VariableDeclaration",
                          "scope": 6471,
                          "src": "1785:21:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 6416,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1785:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6426,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6418,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6376,
                            "src": "1809:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 6419,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6323,
                            "src": "1822:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1809:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6422,
                            "name": "curStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6323,
                            "src": "1838:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6423,
                            "name": "nextStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6376,
                            "src": "1850:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1838:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1809:51:20",
                        "trueExpression": {
                          "hexValue": "30",
                          "id": 6421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1834:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1785:75:20"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6431,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1897:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1897:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6433,
                            "name": "riskySurplus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6395,
                            "src": "1909:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6428,
                                "name": "risky",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "1881:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6427,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "1874:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1581_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 6429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1874:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1581",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 6430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1530,
                          "src": "1874:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 6434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1874:48:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6435,
                      "nodeType": "ExpressionStatement",
                      "src": "1874:48:20"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1963:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1963:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 6444,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1983:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockEngine_$6474",
                                  "typeString": "contract MockEngine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockEngine_$6474",
                                  "typeString": "contract MockEngine"
                                }
                              ],
                              "id": 6443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1975:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6442,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1975:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1975:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6446,
                            "name": "riskyDeficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6384,
                            "src": "1990:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6437,
                                "name": "risky",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "1943:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6436,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "1936:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1581_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 6438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1936:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1581",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 6439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1559,
                          "src": "1936:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 6447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1936:67:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6448,
                      "nodeType": "ExpressionStatement",
                      "src": "1936:67:20"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6453,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2042:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2042:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6455,
                            "name": "stableSurplus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6417,
                            "src": "2054:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6450,
                                "name": "stable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2025:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6449,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "2018:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1581_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 6451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2018:14:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1581",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 6452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1530,
                          "src": "2018:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 6456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2018:50:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6457,
                      "nodeType": "ExpressionStatement",
                      "src": "2018:50:20"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2110:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2110:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 6466,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2130:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockEngine_$6474",
                                  "typeString": "contract MockEngine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockEngine_$6474",
                                  "typeString": "contract MockEngine"
                                }
                              ],
                              "id": 6465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2122:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6464,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2122:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2122:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6468,
                            "name": "stableDeficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6406,
                            "src": "2137:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6459,
                                "name": "stable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2089:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6458,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1581,
                              "src": "2082:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1581_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 6460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2082:14:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1581",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 6461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1559,
                          "src": "2082:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 6469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2082:69:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6470,
                      "nodeType": "ExpressionStatement",
                      "src": "2082:69:20"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "c0ed31ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReserves",
            "nameLocation": "704:14:20",
            "parameters": {
              "id": 6302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6299,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "727:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "719:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6298,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6301,
                  "mutability": "mutable",
                  "name": "reserveRisky",
                  "nameLocation": "743:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "735:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:38:20"
            },
            "returnParameters": {
              "id": 6303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:20"
            },
            "scope": 6474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6232,
              "name": "PrimitiveEngine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1507,
              "src": "125:15:20"
            },
            "id": 6233,
            "nodeType": "InheritanceSpecifier",
            "src": "125:15:20"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6474,
          1507,
          1597,
          1908,
          2115,
          2001,
          1824
        ],
        "name": "MockEngine",
        "nameLocation": "111:10:20",
        "scope": 6475,
        "usedErrors": [
          1830,
          1833,
          1836,
          1839,
          1844,
          1849,
          1854,
          1859,
          1864,
          1871,
          1878,
          1885,
          1888,
          1891,
          1894,
          1897,
          1900,
          1907,
          5025
        ]
      }
    ],
    "license": "GPL-3.0-only"
  },
  "id": 20
}